/*

Xilinx Vivado v2019.2 (64-bit) [Major: 2019, Minor: 2]
SW Build: 2708876 on Wed Nov  6 21:40:23 MST 2019
IP Build: 2700528 on Thu Nov  7 00:09:20 MST 2019

Process ID (PID): 3088
License: Customer

Current time: 	Fri Jun 12 18:13:55 ART 2020
Time zone: 	Argentina Standard Time (America/Buenos_Aires)

OS: Windows 10
OS Version: 10.0
OS Architecture: amd64
Available processors (cores): 4

Screen size: 1366x768
Screen resolution (DPI): 100
Available screens: 1
Available disk space: 51 GB
Default font: family=Dialog,name=Dialog,style=plain,size=12

Java version: 	9.0.4 64-bit
Java home: 	C:/Xilinx/Vivado/2019.2/tps/win64/jre9.0.4
Java executable location: 	C:/Xilinx/Vivado/2019.2/tps/win64/jre9.0.4/bin/java.exe
Java initial memory (-Xms): 	128 MB
Java maximum memory (-Xmx):	 3 GB


User name: 	info
User home directory: C:/Users/info
User working directory: C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020
User country: 	AR
User language: 	es
User locale: 	es_AR

RDI_BASEROOT: C:/Xilinx/Vivado
HDI_APPROOT: C:/Xilinx/Vivado/2019.2
RDI_DATADIR: C:/Xilinx/Vivado/2019.2/data
RDI_BINDIR: C:/Xilinx/Vivado/2019.2/bin

Vivado preferences file location: C:/Users/info/AppData/Roaming/Xilinx/Vivado/2019.2/vivado.xml
Vivado preferences directory: C:/Users/info/AppData/Roaming/Xilinx/Vivado/2019.2/
Vivado layouts directory: C:/Users/info/AppData/Roaming/Xilinx/Vivado/2019.2/layouts
PlanAhead jar file location: 	C:/Xilinx/Vivado/2019.2/lib/classes/planAhead.jar
Vivado log file location: 	C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/vivado.log
Vivado journal file location: 	C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/vivado.jou
Engine tmp dir: 	C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/.Xil/Vivado-3088-PROGVENTAS

Xilinx Environment Variables
----------------------------
XILINX: C:/Xilinx/Vivado/2019.2/ids_lite/ISE
XILINX_DSP: C:/Xilinx/Vivado/2019.2/ids_lite/ISE
XILINX_PLANAHEAD: C:/Xilinx/Vivado/2019.2
XILINX_VIVADO: C:/Xilinx/Vivado/2019.2
XILINX_VIVADO_HLS: C:/Xilinx/Vivado/2019.2


GUI allocated memory:	154 MB
GUI max memory:		3,072 MB
Engine allocated memory: 612 MB

Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.

*/

// TclEventType: START_GUI
// Tcl Message: start_gui 
// TclEventType: PROJECT_OPEN_DIALOG
// [GUI Memory]: 87 MB (+89204kb) [00:00:10]
// [Engine Memory]: 576 MB (+452856kb) [00:00:10]
// bB (cr):  Open Project : addNotify
// Opening Vivado Project: C:\Arquitectura\TPFinal_Arqui2020\MIPS_2020\MIPS_2020.xpr. Version: Vivado v2019.2 
// TclEventType: DEBUG_PROBE_SET_CHANGE
// Tcl Message: open_project C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.xpr 
// HMemoryUtils.trashcanNow. Engine heap size: 689 MB. GUI used memory: 48 MB. Current time: 6/12/20, 6:13:57 PM ART
// TclEventType: MSGMGR_MOVEMSG
// TclEventType: FILE_SET_NEW
// TclEventType: RUN_CURRENT
// TclEventType: PROJECT_DASHBOARD_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_NEW
// Tcl Message: open_project C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.xpr 
// Tcl Message: Scanning sources... Finished scanning sources 
// Tcl Message: INFO: [IP_Flow 19-234] Refreshing IP repositories INFO: [IP_Flow 19-1704] No user IP repositories specified 
// TclEventType: PROJECT_NEW
// [Engine Memory]: 778 MB (+181250kb) [00:00:20]
// [GUI Memory]: 94 MB (+2556kb) [00:00:21]
// [GUI Memory]: 101 MB (+1847kb) [00:00:22]
// WARNING: HEventQueue.dispatchEvent() is taking  3717 ms.
// Tcl Message: INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'C:/Xilinx/Vivado/2019.2/data/ip'. 
// Project name: MIPS_2020; location: C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020; part: xc7a35ticpg236-1L
// [Engine Memory]: 819 MB (+2563kb) [00:00:23]
// Tcl Message: open_project: Time (s): cpu = 00:00:15 ; elapsed = 00:00:13 . Memory (MB): peak = 827.602 ; gain = 212.141 
dismissDialog("Open Project"); // bB (cr)
// Tcl Message: update_compile_order -fileset sources_1 
// Elapsed time: 285 seconds
selectMenu(PAResourceItoN.MainMenuMgr_FILE, "File"); // aa (q, cr)
selectMenu(PAResourceItoN.MainMenuMgr_PROJECT, "Project"); // af (cr)
selectMenu(PAResourceItoN.MainMenuMgr_PROJECT, "Project"); // af (cr)
selectMenu(PAResourceItoN.MainMenuMgr_OPEN_RECENT_PROJECT, "Open Recent"); // af (cr)
selectMenuItem(PAResourceItoN.MainMenuMgr_OPEN_RECENT_PROJECT, "C:/Arquitectura tp final 2017/TP final 2020/Tp Final 2020/Tp Final 2020.xpr"); // ai (cr)
dismissMenu(PAResourceItoN.MainMenuMgr_FILE, "File"); // aa (q, cr)
// Opening Vivado Project: C:/Arquitectura tp final 2017/TP final 2020/Tp Final 2020/Tp Final 2020.xpr. Version: Vivado v2019.2 
// bB (cr):  Open Project : addNotify
selectButton("OptionPane.button", "No"); // JButton (A, G)
// TclEventType: MSGMGR_MOVEMSG
// TclEventType: FILE_SET_NEW
// TclEventType: RUN_COMPLETED
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_COMPLETED
// TclEventType: RUN_STATUS_CHANGE
// Tcl Message: open_project {C:/Arquitectura tp final 2017/TP final 2020/Tp Final 2020/Tp Final 2020.xpr} 
// TclEventType: RUN_CURRENT
// TclEventType: PROJECT_DASHBOARD_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_NEW
// Tcl Message: INFO: [Project 1-313] Project file moved from 'C:/Arquitectura tp final/TP final 2020/Tp Final 2020' since last save. 
// Tcl Message: Scanning sources... Finished scanning sources 
// Tcl Message: INFO: [IP_Flow 19-234] Refreshing IP repositories INFO: [IP_Flow 19-1704] No user IP repositories specified 
// TclEventType: PROJECT_NEW
// [GUI Memory]: 107 MB (+1668kb) [00:05:19]
// [GUI Memory]: 113 MB (+618kb) [00:05:20]
// WARNING: HEventQueue.dispatchEvent() is taking  4065 ms.
// Tcl Message: INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'C:/Xilinx/Vivado/2019.2/data/ip'. 
// HMemoryUtils.trashcanNow. Engine heap size: 851 MB. GUI used memory: 61 MB. Current time: 6/12/20, 6:19:04 PM ART
// Project name: Tp Final 2020; location: C:/Arquitectura tp final 2017/TP final 2020/Tp Final 2020; part: xc7a35ticpg236-1L
// Tcl Message: open_project: Time (s): cpu = 00:00:13 ; elapsed = 00:00:06 . Memory (MB): peak = 889.242 ; gain = 39.020 
dismissDialog("Open Project"); // bB (cr)
// Tcl Message: update_compile_order -fileset sources_1 
// RDIResource.RDIViews_PROPERTIES: Properties: close view
// PAPropertyPanels.initPanels (INSTRUCTION_RAM.v) elapsed time: 0.2s
// Elapsed time: 133 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, INSTRUCTION_RAM (INSTRUCTION_RAM.v)]", 2, false); // B (F, cr)
// Tcl Message: current_project MIPS_2020 
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, PC_MUX (PC_MUX.v)]", 3, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, INSTRUCTION_RAM (INSTRUCTION_RAM.v)]", 2, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, PC_MUX (PC_MUX.v)]", 3, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, PC_SUM (PC_SUM.v)]", 4, false); // B (F, cr)
// RDIResource.RDIViews_PROPERTIES: Properties: close view
// Elapsed time: 10 seconds
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v)]", 1); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v)]", 3, true); // B (F, cr) - Node
// Tcl Message: current_project {Tp Final 2020} 
// Elapsed time: 20 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v)]", 1, true); // B (F, cr) - Node
// Tcl Message: current_project MIPS_2020 
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v)]", 1, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
floatFrame(PAResourceOtoP.PAViews_CODE, "IFETCH.v"); // aA (aL, cr)
// PAResourceOtoP.PAViews_CODE: Code: float view
dockFrame(PAResourceOtoP.PAViews_CODE, "IFETCH.v"); // aA (aL, aN)
// PAResourceOtoP.PAViews_CODE: Code: dock view
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("IFETCH.v", 144, 176); // ch (w, cr)
selectCodeEditor("IFETCH.v", 84, 199); // ch (w, cr)
selectCodeEditor("IFETCH.v", 78, 195); // ch (w, cr)
selectCodeEditor("IFETCH.v", 78, 195, false, false, false, false, true); // ch (w, cr) - Double Click
// [Engine Memory]: 861 MB (+922kb) [00:08:29]
selectCodeEditor("IFETCH.v", 31, 195); // ch (w, cr)
selectCodeEditor("IFETCH.v", 145, 217); // ch (w, cr)
selectCodeEditor("IFETCH.v", 61, 215); // ch (w, cr)
selectCodeEditor("IFETCH.v", 85, 310); // ch (w, cr)
selectCodeEditor("IFETCH.v", 164, 247); // ch (w, cr)
selectCodeEditor("IFETCH.v", 29, 132); // ch (w, cr)
selectCodeEditor("IFETCH.v", 16, 127, false, false, false, true, false); // ch (w, cr) - Popup Trigger
selectCodeEditor("IFETCH.v", 0, 135); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "Project Summary", 0); // i (h, cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), u_mux_PC : xil_defaultlib.mux_PC]", 2, false); // B (F, cr)
// HMemoryUtils.trashcanNow. Engine heap size: 871 MB. GUI used memory: 65 MB. Current time: 6/12/20, 6:22:47 PM ART
// Elapsed time: 11 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), u_pc : xil_defaultlib.pc]", 3, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), u_mux_PC : xil_defaultlib.mux_PC]", 2, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), u_pc : xil_defaultlib.pc]", 3, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), u_ram_instrucciones : xil_defaultlib.ram_instrucciones]", 4, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), u_sumador : xil_defaultlib.sumador]", 5, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, INSTRUCTION_RAM (INSTRUCTION_RAM.v)]", 7, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), PC (PC.v)]", 6, false); // B (F, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectCodeEditor("IFETCH.v", 89, 56); // ch (w, cr)
selectCodeEditor("IFETCH.v", 90, 55); // ch (w, cr)
selectCodeEditor("IFETCH.v", 102, 74); // ch (w, cr)
selectCodeEditor("IFETCH.v", 102, 74, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 100, 92); // ch (w, cr)
selectCodeEditor("IFETCH.v", 100, 92, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 84, 93); // ch (w, cr)
selectCodeEditor("IFETCH.v", 117, 112); // ch (w, cr)
selectCodeEditor("IFETCH.v", 117, 111); // ch (w, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), PC (PC.v)]", 6, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), PC (PC.v)]", 6, false, false, false, false, false, true); // B (F, cr) - Double Click
// Elapsed time: 14 seconds
selectCodeEditor("PC.v", 84, 91); // ch (w, cr)
selectCodeEditor("PC.v", 84, 91, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("PC.v", 87, 117); // ch (w, cr)
selectCodeEditor("PC.v", 87, 117, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "PC.v", 2); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectCodeEditor("IFETCH.v", 28, 77); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "PC.v", 2); // i (h, cr)
selectCodeEditor("PC.v", 149, 77); // ch (w, cr)
selectCodeEditor("PC.v", 149, 77, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectCodeEditor("IFETCH.v", 99, 166); // ch (w, cr)
selectCodeEditor("IFETCH.v", 99, 166, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "PC.v", 2); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "PC.v", 2); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectCodeEditor("IFETCH.v", 112, 197); // ch (w, cr)
selectCodeEditor("IFETCH.v", 78, 195); // ch (w, cr)
selectCodeEditor("IFETCH.v", 111, 216); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "PC.v", 2); // i (h, cr)
selectCodeEditor("PC.v", 182, 180); // ch (w, cr)
selectCodeEditor("PC.v", 182, 180, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 24 seconds
typeControlKey((HResource) null, "PC.v", 'c'); // ch (w, cr)
selectCodeEditor("PC.v", 98, 225); // ch (w, cr)
selectCodeEditor("PC.v", 98, 225, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "PC.v", 'v'); // ch (w, cr)
selectCodeEditor("PC.v", 119, 300); // ch (w, cr)
selectCodeEditor("PC.v", 119, 300, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "PC.v", 'v'); // ch (w, cr)
selectCodeEditor("PC.v", 122, 372); // ch (w, cr)
selectCodeEditor("PC.v", 122, 372, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "PC.v", 'v'); // ch (w, cr)
selectCodeEditor("PC.v", 166, 366); // ch (w, cr)
selectCodeEditor("PC.v", 166, 366, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "PC.v", 'v'); // ch (w, cr)
selectCodeEditor("PC.v", 323, 359); // ch (w, cr)
selectCodeEditor("PC.v", 217, 372); // ch (w, cr)
selectButton(RDIResourceCommand.RDICommands_SAVE_FILE, (String) null); // E (f, cr)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// [GUI Memory]: 120 MB (+1234kb) [00:11:31]
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectCodeEditor("IFETCH.v", 97, 231); // ch (w, cr)
selectCodeEditor("IFETCH.v", 97, 231); // ch (w, cr)
selectCodeEditor("IFETCH.v", 97, 231, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IFETCH.v", 'v'); // ch (w, cr)
selectCodeEditor("IFETCH.v", 173, 271); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "PC.v", 2); // i (h, cr)
selectCodeEditor("PC.v", 149, 66); // ch (w, cr)
selectCodeEditor("PC.v", 149, 66, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectCodeEditor("IFETCH.v", 106, 111); // ch (w, cr)
selectCodeEditor("IFETCH.v", 106, 111, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 103, 184); // ch (w, cr)
selectCodeEditor("IFETCH.v", 103, 184, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 36, 44); // ch (w, cr)
selectCodeEditor("IFETCH.v", 36, 44, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "Project Summary", 0); // i (h, cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), PC (PC.v)]", 6, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v)]", 1, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), PC (PC.v)]", 6, false); // B (F, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectCodeEditor("IFETCH.v", 94, 86); // ch (w, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, PC_MUX (PC_MUX.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, PC_MUX (PC_MUX.v)]", 8, false, false, false, false, false, true); // B (F, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectCodeEditor("IFETCH.v", 68, 42); // ch (w, cr)
selectCodeEditor("IFETCH.v", 68, 42, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 18 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "PC_MUX.v", 3); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "PC.v", 2); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "PC_MUX.v", 2); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
selectCodeEditor("IFETCH.v", 26, 43); // ch (w, cr)
selectCodeEditor("IFETCH.v", 55, 97); // ch (w, cr)
selectCodeEditor("IFETCH.v", 33, 43); // ch (w, cr)
selectCodeEditor("IFETCH.v", 33, 43, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 70, 92); // ch (w, cr)
selectCodeEditor("IFETCH.v", 70, 92, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 32, 41); // ch (w, cr)
selectCodeEditor("IFETCH.v", 32, 41, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 67, 95); // ch (w, cr)
selectCodeEditor("IFETCH.v", 67, 95, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 96, 106); // ch (w, cr)
selectCodeEditor("IFETCH.v", 54, 39); // ch (w, cr)
selectCodeEditor("IFETCH.v", 54, 39, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 39, 42); // ch (w, cr)
selectCodeEditor("IFETCH.v", 39, 42, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IFETCH.v", 'c'); // ch (w, cr)
selectCodeEditor("IFETCH.v", 82, 98); // ch (w, cr)
selectCodeEditor("IFETCH.v", 82, 98, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IFETCH.v", 'v'); // ch (w, cr)
selectCodeEditor("IFETCH.v", 92, 72); // ch (w, cr)
selectCodeEditor("IFETCH.v", 124, 110); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "PC_MUX.v", 2); // i (h, cr)
selectCodeEditor("PC_MUX.v", 170, 91); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 170, 91, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "PC_MUX.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectCodeEditor("IFETCH.v", 92, 112); // ch (w, cr)
selectCodeEditor("IFETCH.v", 122, 108); // ch (w, cr)
selectCodeEditor("IFETCH.v", 121, 108, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IFETCH.v", 'v'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "PC_MUX.v", 2); // i (h, cr)
selectCodeEditor("PC_MUX.v", 152, 129); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 152, 129); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 142, 134); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 174, 116); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 201, 92); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 154, 110); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 154, 110, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "PC_MUX.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectCodeEditor("IFETCH.v", 95, 127); // ch (w, cr)
selectCodeEditor("IFETCH.v", 95, 127, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IFETCH.v", 'v'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "PC_MUX.v", 2); // i (h, cr)
selectCodeEditor("PC_MUX.v", 90, 129); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 90, 129, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("PC_MUX.v", 200, 144); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 200, 144, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "PC_MUX.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectCodeEditor("IFETCH.v", 120, 158); // ch (w, cr)
selectCodeEditor("IFETCH.v", 123, 163); // ch (w, cr)
selectCodeEditor("IFETCH.v", 123, 163, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IFETCH.v", 'v'); // ch (w, cr)
selectCodeEditor("IFETCH.v", 319, 130); // ch (w, cr)
selectButton(RDIResourceCommand.RDICommands_SAVE_FILE, (String) null); // E (f, cr)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Tcl Message: update_compile_order -fileset sources_1 
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "Project Summary", 0); // i (h, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), u_sumador : xil_defaultlib.sumador]", 5, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), u_sumador : xil_defaultlib.sumador]", 5, false, false, false, false, false, true); // B (F, cr) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), u_sumador : xil_defaultlib.sumador]", 5, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), u_sumador : xil_defaultlib.sumador]", 5, false, false, false, false, false, true); // B (F, cr) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), u_ram_instrucciones : xil_defaultlib.ram_instrucciones]", 4, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, PC_SUM (PC_SUM.v)]", 7, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, PC_SUM (PC_SUM.v)]", 7, false, false, false, false, false, true); // B (F, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "PC_SUM.v", 4); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectCodeEditor("IFETCH.v", 42, 37); // ch (w, cr)
selectCodeEditor("IFETCH.v", 58, 41); // ch (w, cr)
selectCodeEditor("IFETCH.v", 58, 41, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IFETCH.v", 'c'); // ch (w, cr)
selectCodeEditor("IFETCH.v", 88, 92); // ch (w, cr)
selectCodeEditor("IFETCH.v", 88, 92, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IFETCH.v", 'v'); // ch (w, cr)
selectCodeEditor("IFETCH.v", 57, 42); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "PC_SUM.v", 2); // i (h, cr)
selectCodeEditor("PC_SUM.v", 158, 77); // ch (w, cr)
selectCodeEditor("PC_SUM.v", 158, 77, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "PC_SUM.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectCodeEditor("IFETCH.v", 96, 110); // ch (w, cr)
selectCodeEditor("IFETCH.v", 96, 110, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IFETCH.v", 'v'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "PC_SUM.v", 2); // i (h, cr)
selectCodeEditor("PC_SUM.v", 172, 105); // ch (w, cr)
selectCodeEditor("PC_SUM.v", 172, 105); // ch (w, cr)
selectCodeEditor("PC_SUM.v", 172, 105); // ch (w, cr)
selectCodeEditor("PC_SUM.v", 172, 105); // ch (w, cr)
selectCodeEditor("PC_SUM.v", 172, 105, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "PC_SUM.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectCodeEditor("IFETCH.v", 99, 129); // ch (w, cr)
selectCodeEditor("IFETCH.v", 99, 129, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IFETCH.v", 'v'); // ch (w, cr)
selectCodeEditor("IFETCH.v", 93, 171); // ch (w, cr)
selectButton(RDIResourceCommand.RDICommands_SAVE_FILE, (String) null); // E (f, cr)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Tcl Message: update_compile_order -fileset sources_1 
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, INSTRUCTION_RAM (INSTRUCTION_RAM.v)]", 6, false, false, false, false, false, true); // B (F, cr) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, INSTRUCTION_RAM (INSTRUCTION_RAM.v)]", 6, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, INSTRUCTION_RAM (INSTRUCTION_RAM.v)]", 6, false, false, false, false, false, true); // B (F, cr) - Double Click
// [GUI Memory]: 127 MB (+938kb) [00:16:06]
selectCodeEditor("INSTRUCTION_RAM.v", 99, 118); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 88, 74); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 88, 74, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "INSTRUCTION_RAM.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "INSTRUCTION_RAM.v", 5); // i (h, cr)
closeView(PAResourceOtoP.PAViews_CODE, "Code"); // B
// k (cr): Text Changed: addNotify
closeView(PAResourceOtoP.PAViews_CODE, "Code"); // B (i, cr)
selectButton(RDIResource.ConfirmSaveTextEditsDialog_YES, "Yes"); // a (k)
// TclEventType: DG_GRAPH_STALE
dismissDialog("Text Changed"); // k (cr)
// TclEventType: FILE_SET_CHANGE
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectCodeEditor("IFETCH.v", 112, 46); // ch (w, cr)
selectCodeEditor("IFETCH.v", 112, 46, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 89, 91); // ch (w, cr)
selectCodeEditor("IFETCH.v", 89, 91, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IFETCH.v", 'v'); // ch (w, cr)
selectCodeEditor("IFETCH.v", 106, 176); // ch (w, cr)
selectCodeEditor("IFETCH.v", 106, 176, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IFETCH.v", 'v'); // ch (w, cr)
selectCodeEditor("IFETCH.v", 214, 82); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "INSTRUCTION_RAM.v", 2); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectCodeEditor("IFETCH.v", 148, 87); // ch (w, cr)
selectCodeEditor("IFETCH.v", 232, 43); // ch (w, cr)
// Elapsed time: 14 seconds
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("IFETCH.v", 67, 42); // ch (w, cr)
// Elapsed time: 21 seconds
selectCodeEditor("IFETCH.v", 611, 60); // ch (w, cr)
selectCodeEditor("IFETCH.v", 611, 60, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 579, 77); // ch (w, cr)
selectCodeEditor("IFETCH.v", 579, 77, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 628, 44); // ch (w, cr)
selectCodeEditor("IFETCH.v", 628, 44, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 612, 64); // ch (w, cr)
selectCodeEditor("IFETCH.v", 612, 64, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 586, 72); // ch (w, cr)
selectCodeEditor("IFETCH.v", 586, 72, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "INSTRUCTION_RAM.v", 2); // i (h, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 214, 127); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 214, 127, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "INSTRUCTION_RAM.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectCodeEditor("IFETCH.v", 69, 92); // ch (w, cr)
selectCodeEditor("IFETCH.v", 69, 92, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IFETCH.v", 'v'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "INSTRUCTION_RAM.v", 2); // i (h, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 196, 145); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 196, 145, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "INSTRUCTION_RAM.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "INSTRUCTION_RAM.v", 2); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectCodeEditor("IFETCH.v", 66, 249); // ch (w, cr)
selectCodeEditor("IFETCH.v", 66, 249, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IFETCH.v", 'v'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "INSTRUCTION_RAM.v", 2); // i (h, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 93, 250); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 93, 250, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "INSTRUCTION_RAM.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectCodeEditor("IFETCH.v", 59, 178); // ch (w, cr)
selectCodeEditor("IFETCH.v", 59, 178, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IFETCH.v", 'v'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "INSTRUCTION_RAM.v", 2); // i (h, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 194, 263); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 194, 263, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "INSTRUCTION_RAM.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectCodeEditor("IFETCH.v", 73, 230); // ch (w, cr)
selectCodeEditor("IFETCH.v", 73, 230, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 74, 228); // ch (w, cr)
selectCodeEditor("IFETCH.v", 74, 228, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IFETCH.v", 'v'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "INSTRUCTION_RAM.v", 2); // i (h, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 101, 282); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 101, 282, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "INSTRUCTION_RAM.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectCodeEditor("IFETCH.v", 86, 194); // ch (w, cr)
selectCodeEditor("IFETCH.v", 86, 194, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IFETCH.v", 'v'); // ch (w, cr)
selectCodeEditor("IFETCH.v", 74, 207); // ch (w, cr)
selectCodeEditor("IFETCH.v", 74, 207, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 59, 166); // ch (w, cr)
selectCodeEditor("IFETCH.v", 59, 166, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "INSTRUCTION_RAM.v", 2); // i (h, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 69, 195); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 69, 195, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "INSTRUCTION_RAM.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
typeControlKey((HResource) null, "IFETCH.v", 'v'); // ch (w, cr)
selectCodeEditor("IFETCH.v", 45, 127); // ch (w, cr)
selectCodeEditor("IFETCH.v", 290, 211); // ch (w, cr)
selectButton(RDIResourceCommand.RDICommands_SAVE_FILE, (String) null); // E (f, cr)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Tcl Message: update_compile_order -fileset sources_1 
// Elapsed time: 13 seconds
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("IFETCH.v", 163, 244); // ch (w, cr)
selectCodeEditor("IFETCH.v", 97, 110); // ch (w, cr)
selectCodeEditor("IFETCH.v", 97, 110); // ch (w, cr)
selectCodeEditor("IFETCH.v", 90, 111); // ch (w, cr)
selectCodeEditor("IFETCH.v", 106, 112); // ch (w, cr)
selectCodeEditor("IFETCH.v", 106, 112, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "INSTRUCTION_RAM.v", 2); // i (h, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 66, 163); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 66, 163, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "PC_SUM.v", 3); // i (h, cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), PC_SUM : PC_SUM (PC_SUM.v)]", 5, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), PC_SUM : PC_SUM (PC_SUM.v)]", 5, false, false, false, false, false, true); // B (F, cr) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), PC_MUX : PC_MUX (PC_MUX.v)]", 2, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), PC_MUX : PC_MUX (PC_MUX.v)]", 2, false, false, false, false, false, true); // B (F, cr) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), PC : PC (PC.v)]", 3, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), PC : PC (PC.v)]", 3, false, false, false, false, false, true); // B (F, cr) - Double Click
selectCodeEditor("PC.v", 129, 91); // ch (w, cr)
selectCodeEditor("PC.v", 154, 78); // ch (w, cr)
selectCodeEditor("PC.v", 154, 78, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "INSTRUCTION_RAM.v", 2); // i (h, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 232, 110); // ch (w, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 61, 155); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 61, 155, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "INSTRUCTION_RAM.v", 'c'); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 149, 128); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 149, 128, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "INSTRUCTION_RAM.v", 'v'); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 174, 211); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 174, 211, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "INSTRUCTION_RAM.v", 'v'); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 229, 276); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 248, 163); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
typeControlKey((HResource) null, "IFETCH.v", 'v'); // ch (w, cr)
selectCodeEditor("IFETCH.v", 213, 181); // ch (w, cr)
selectButton(RDIResourceCommand.RDICommands_SAVE_FILE, (String) null); // E (f, cr)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), PC_MUX : PC_MUX (PC_MUX.v)]", 2, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), INSTRUCTION_RAM : INSTRUCTION_RAM (INSTRUCTION_RAM.v)]", 4, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), PC_SUM : PC_SUM (PC_SUM.v)]", 5, false); // B (F, cr)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v)]", 3); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v)]", 5, true); // B (F, cr) - Node
// Tcl Message: current_project {Tp Final 2020} 
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v)]", 5); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v)]", 6, true); // B (F, cr) - Node
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v)]", 6); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v), u_alu_control : alu_control (alu_control.v)]", 7, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_hazard : hazard_detection_unit (hazard_detection_unit.v)]", 9, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v), u_alu_control : alu_control (alu_control.v)]", 7, false); // B (F, cr)
// Elapsed time: 24 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v), u_alu_control : alu_control (alu_control.v)]", 7, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v), u_alu_control : alu_control (alu_control.v)]", 7, false, false, false, false, false, true); // B (F, cr) - Double Click
selectCodeEditor("alu_control.v", 73, 93); // ch (w, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("IFETCH.v", 118, 123); // ch (w, cr)
selectCodeEditor("IFETCH.v", 118, 123); // ch (w, cr)
selectCodeEditor("IFETCH.v", 132, 128); // ch (w, cr)
selectCodeEditor("IFETCH.v", 132, 128, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 15 seconds
selectCodeEditor("IFETCH.v", 140, 115); // ch (w, cr)
selectCodeEditor("IFETCH.v", 140, 115, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 145, 119); // ch (w, cr)
selectCodeEditor("IFETCH.v", 143, 126); // ch (w, cr)
selectCodeEditor("IFETCH.v", 143, 126, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 181, 158); // ch (w, cr)
selectCodeEditor("IFETCH.v", 181, 158, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 195, 144); // ch (w, cr)
selectCodeEditor("IFETCH.v", 195, 144, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 213, 181); // ch (w, cr)
selectCodeEditor("IFETCH.v", 213, 181, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 163, 186); // ch (w, cr)
selectCodeEditor("IFETCH.v", 163, 178); // ch (w, cr)
selectCodeEditor("IFETCH.v", 158, 145); // ch (w, cr)
selectCodeEditor("IFETCH.v", 154, 354); // ch (w, cr)
selectCodeEditor("IFETCH.v", 154, 354, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 209, 322); // ch (w, cr)
selectCodeEditor("IFETCH.v", 209, 322, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 165, 336); // ch (w, cr)
selectCodeEditor("IFETCH.v", 165, 336, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 12 seconds
selectCodeEditor("IFETCH.v", 343, 281); // ch (w, cr)
selectCodeEditor("IFETCH.v", 343, 281, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 520, 338); // ch (w, cr)
selectCodeEditor("IFETCH.v", 520, 338, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 14 seconds
selectCodeEditor("IFETCH.v", 296, 298); // ch (w, cr)
selectCodeEditor("IFETCH.v", 296, 298, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 148, 131); // ch (w, cr)
selectCodeEditor("IFETCH.v", 148, 131, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 178, 163); // ch (w, cr)
selectCodeEditor("IFETCH.v", 178, 163, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 193, 225); // ch (w, cr)
selectCodeEditor("IFETCH.v", 190, 264); // ch (w, cr)
selectCodeEditor("IFETCH.v", 202, 219); // ch (w, cr)
selectCodeEditor("IFETCH.v", 199, 237); // ch (w, cr)
selectCodeEditor("IFETCH.v", 199, 237, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 146, 230); // ch (w, cr)
selectCodeEditor("IFETCH.v", 186, 266); // ch (w, cr)
selectCodeEditor("IFETCH.v", 186, 266, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 173, 228); // ch (w, cr)
selectCodeEditor("IFETCH.v", 173, 228, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 152, 230); // ch (w, cr)
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
selectCodeEditor("IFETCH.v", 177, 232); // ch (w, cr)
selectCodeEditor("IFETCH.v", 177, 232, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 13 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "i_address_debug", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("IFETCH.v", 164, 235); // ch (w, cr)
selectCodeEditor("IFETCH.v", 181, 230); // ch (w, cr)
selectCodeEditor("IFETCH.v", 181, 230, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 25 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "i_instruc_to_memo", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("IFETCH.v", 115, 163); // ch (w, cr)
selectCodeEditor("IFETCH.v", 115, 163, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 123, 158); // ch (w, cr)
selectCodeEditor("IFETCH.v", 123, 158, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 141, 142); // ch (w, cr)
selectCodeEditor("IFETCH.v", 141, 142, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 149, 142); // ch (w, cr)
selectCodeEditor("IFETCH.v", 121, 215); // ch (w, cr)
selectCodeEditor("IFETCH.v", 121, 215, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 63 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "i_write_enable_ram_inst", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("IFETCH.v", 138, 179); // ch (w, cr)
selectCodeEditor("IFETCH.v", 138, 179, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 107, 190); // ch (w, cr)
selectCodeEditor("IFETCH.v", 220, 216); // ch (w, cr)
selectCodeEditor("IFETCH.v", 220, 216, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 224, 213); // ch (w, cr)
selectCodeEditor("IFETCH.v", 214, 230); // ch (w, cr)
selectCodeEditor("IFETCH.v", 213, 220); // ch (w, cr)
selectCodeEditor("IFETCH.v", 213, 220, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 12 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_pc_branch", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 12 seconds
selectCodeEditor("IFETCH.v", 186, 196); // ch (w, cr)
// Elapsed time: 12 seconds
selectCodeEditor("IFETCH.v", 146, 160); // ch (w, cr)
selectCodeEditor("IFETCH.v", 146, 160, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 212, 198); // ch (w, cr)
selectCodeEditor("IFETCH.v", 212, 198, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 177, 210); // ch (w, cr)
selectCodeEditor("IFETCH.v", 177, 210, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 166, 232); // ch (w, cr)
selectCodeEditor("IFETCH.v", 169, 228, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 190, 213); // ch (w, cr)
selectCodeEditor("IFETCH.v", 190, 213, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 170, 233); // ch (w, cr)
selectCodeEditor("IFETCH.v", 169, 233); // ch (w, cr)
selectCodeEditor("IFETCH.v", 191, 211); // ch (w, cr)
selectCodeEditor("IFETCH.v", 191, 211, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 13 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_instruction", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 12 seconds
selectCodeEditor("IFETCH.v", 392, 180); // ch (w, cr)
selectCodeEditor("IFETCH.v", 168, 244); // ch (w, cr)
selectCodeEditor("IFETCH.v", 168, 244, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 11 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_PC", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("IFETCH.v", 222, 253); // ch (w, cr)
selectCodeEditor("IFETCH.v", 157, 364); // ch (w, cr)
selectCodeEditor("IFETCH.v", 157, 364, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 24 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_halt_flag_if", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 12 seconds
selectCodeEditor("IFETCH.v", 116, 330); // ch (w, cr)
selectCodeEditor("IFETCH.v", 57, 259); // ch (w, cr)
// Elapsed time: 23 seconds
typeControlKey(null, null, 'z');
selectCodeEditor("IFETCH.v", 38, 263); // ch (w, cr)
selectCodeEditor("IFETCH.v", 97, 375); // ch (w, cr)
selectButton(RDIResourceCommand.RDICommands_SAVE_FILE, (String) null); // E (f, cr)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Tcl Message: current_project MIPS_2020 
selectCodeEditor("IFETCH.v", 31, 198); // ch (w, cr)
selectCodeEditor("IFETCH.v", 310, 283); // ch (w, cr)
selectCodeEditor("IFETCH.v", 174, 244); // ch (w, cr)
selectCodeEditor("IFETCH.v", 174, 244, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 11 seconds
selectCodeEditor("IFETCH.v", 189, 165); // ch (w, cr)
selectCodeEditor("IFETCH.v", 189, 165, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 162, 183); // ch (w, cr)
selectCodeEditor("IFETCH.v", 162, 183); // ch (w, cr)
selectCodeEditor("IFETCH.v", 162, 201); // ch (w, cr)
selectCodeEditor("IFETCH.v", 162, 201, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 167, 188); // ch (w, cr)
selectCodeEditor("IFETCH.v", 167, 188, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 305, 285); // ch (w, cr)
selectCodeEditor("IFETCH.v", 305, 285, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 184, 212); // ch (w, cr)
selectCodeEditor("IFETCH.v", 184, 212, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 135, 279); // ch (w, cr)
selectCodeEditor("IFETCH.v", 135, 279, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 90, 289); // ch (w, cr)
selectCodeEditor("IFETCH.v", 90, 289, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 238, 279); // ch (w, cr)
selectCodeEditor("IFETCH.v", 238, 279, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 224, 296); // ch (w, cr)
selectCodeEditor("IFETCH.v", 224, 296, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 303, 282); // ch (w, cr)
selectCodeEditor("IFETCH.v", 303, 282, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 23 seconds
selectCodeEditor("IFETCH.v", 28, 176); // ch (w, cr)
selectCodeEditor("IFETCH.v", 131, 338); // ch (w, cr)
// Elapsed time: 13 seconds
selectCodeEditor("IFETCH.v", 49, 80); // ch (w, cr)
selectCodeEditor("IFETCH.v", 49, 80); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "PC_MUX.v", 4); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectCodeEditor("IFETCH.v", 111, 195); // ch (w, cr)
selectCodeEditor("IFETCH.v", 111, 195, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 115, 145); // ch (w, cr)
selectCodeEditor("IFETCH.v", 115, 145, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 104, 166); // ch (w, cr)
selectCodeEditor("IFETCH.v", 104, 165, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 111, 180); // ch (w, cr)
selectCodeEditor("IFETCH.v", 111, 180); // ch (w, cr)
selectCodeEditor("IFETCH.v", 116, 197); // ch (w, cr)
selectCodeEditor("IFETCH.v", 116, 197, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 106, 214); // ch (w, cr)
selectCodeEditor("IFETCH.v", 106, 214, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 109, 280); // ch (w, cr)
selectCodeEditor("IFETCH.v", 109, 280); // ch (w, cr)
selectCodeEditor("IFETCH.v", 182, 280); // ch (w, cr)
selectCodeEditor("IFETCH.v", 182, 280); // ch (w, cr)
selectCodeEditor("IFETCH.v", 204, 212); // ch (w, cr)
selectCodeEditor("IFETCH.v", 204, 212, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 283, 254); // ch (w, cr)
selectCodeEditor("IFETCH.v", 231, 214); // ch (w, cr)
selectCodeEditor("IFETCH.v", 231, 214, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 10 seconds
selectCodeEditor("IFETCH.v", 386, 314); // ch (w, cr)
selectCodeEditor("IFETCH.v", 386, 314, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 501, 314); // ch (w, cr)
selectCodeEditor("IFETCH.v", 501, 314, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 337, 317); // ch (w, cr)
selectCodeEditor("IFETCH.v", 337, 317, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 217, 317); // ch (w, cr)
selectCodeEditor("IFETCH.v", 217, 317, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 381, 312); // ch (w, cr)
selectCodeEditor("IFETCH.v", 381, 312, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 494, 316); // ch (w, cr)
selectCodeEditor("IFETCH.v", 494, 316, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 217, 311); // ch (w, cr)
selectCodeEditor("IFETCH.v", 216, 311); // ch (w, cr)
selectCodeEditor("IFETCH.v", 216, 311, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 129, 264); // ch (w, cr)
selectCodeEditor("IFETCH.v", 129, 264, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 223, 259); // ch (w, cr)
selectCodeEditor("IFETCH.v", 223, 259, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 130, 260); // ch (w, cr)
selectCodeEditor("IFETCH.v", 130, 260); // ch (w, cr)
selectCodeEditor("IFETCH.v", 130, 260); // ch (w, cr)
selectCodeEditor("IFETCH.v", 130, 260, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 223, 267); // ch (w, cr)
selectCodeEditor("IFETCH.v", 223, 267, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 12 seconds
selectCodeEditor("IFETCH.v", 125, 364); // ch (w, cr)
selectCodeEditor("IFETCH.v", 125, 364, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 210, 366); // ch (w, cr)
selectCodeEditor("IFETCH.v", 210, 366, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 212, 55); // ch (w, cr)
selectCodeEditor("IFETCH.v", 212, 55, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 347, 56); // ch (w, cr)
selectCodeEditor("IFETCH.v", 347, 56, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 10 seconds
selectCodeEditor("IFETCH.v", 498, 365); // ch (w, cr)
selectCodeEditor("IFETCH.v", 498, 365, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 195, 242); // ch (w, cr)
selectCodeEditor("IFETCH.v", 195, 242, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 347, 315); // ch (w, cr)
selectCodeEditor("IFETCH.v", 347, 315, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 179, 315); // ch (w, cr)
selectCodeEditor("IFETCH.v", 179, 315, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 179, 315); // ch (w, cr)
selectCodeEditor("IFETCH.v", 179, 315, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 127, 128); // ch (w, cr)
selectCodeEditor("IFETCH.v", 127, 128, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 206, 267); // ch (w, cr)
selectCodeEditor("IFETCH.v", 206, 267, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 131, 258); // ch (w, cr)
selectCodeEditor("IFETCH.v", 131, 258, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 197, 266); // ch (w, cr)
selectCodeEditor("IFETCH.v", 197, 266, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 111, 266); // ch (w, cr)
selectCodeEditor("IFETCH.v", 175, 262); // ch (w, cr)
selectCodeEditor("IFETCH.v", 175, 262, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 157, 130); // ch (w, cr)
selectCodeEditor("IFETCH.v", 157, 130, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 49 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "w_validI", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Close", "Close"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("IFETCH.v", 118, 129); // ch (w, cr)
selectCodeEditor("IFETCH.v", 118, 129, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 189, 211); // ch (w, cr)
selectCodeEditor("IFETCH.v", 189, 211, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 15 seconds
selectCodeEditor("IFETCH.v", 206, 211); // ch (w, cr)
selectCodeEditor("IFETCH.v", 206, 211, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 223, 362); // ch (w, cr)
selectCodeEditor("IFETCH.v", 223, 362, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 122, 367); // ch (w, cr)
selectCodeEditor("IFETCH.v", 122, 367, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 128, 357); // ch (w, cr)
selectCodeEditor("IFETCH.v", 104, 370); // ch (w, cr)
// Elapsed time: 14 seconds
selectCodeEditor("IFETCH.v", 50, 262); // ch (w, cr)
selectCodeEditor("IFETCH.v", 169, 360); // ch (w, cr)
selectCodeEditor("IFETCH.v", 56, 264); // ch (w, cr)
// Elapsed time: 13 seconds
selectCodeEditor("IFETCH.v", 29, 245); // ch (w, cr)
selectCodeEditor("IFETCH.v", 138, 356); // ch (w, cr)
selectCodeEditor("IFETCH.v", 97, 336); // ch (w, cr)
selectCodeEditor("IFETCH.v", 107, 328); // ch (w, cr)
selectCodeEditor("IFETCH.v", 107, 328, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 49 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "w_validI", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("IFETCH.v", 114, 245); // ch (w, cr)
selectCodeEditor("IFETCH.v", 114, 245, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 155, 249); // ch (w, cr)
selectCodeEditor("IFETCH.v", 155, 249, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 127, 248); // ch (w, cr)
selectCodeEditor("IFETCH.v", 127, 248, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 213, 351); // ch (w, cr)
selectCodeEditor("IFETCH.v", 213, 351, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 81, 351); // ch (w, cr)
selectCodeEditor("IFETCH.v", 81, 351, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 30, 227); // ch (w, cr)
selectCodeEditor("IFETCH.v", 28, 348); // ch (w, cr)
// Elapsed time: 10 seconds
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
// Elapsed time: 19 seconds
selectCodeEditor("IFETCH.v", 147, 102); // ch (w, cr)
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Synthesis, Run Synthesis]", 14, false); // u (O, cr)
// Run Command: PAResourceCommand.PACommandNames_RUN_SYNTHESIS
// al (cr): Save Project: addNotify
selectButton(PAResourceQtoS.SaveProjectUtils_SAVE, "Save"); // a (al)
// bB (cr):  Save Constraints : addNotify
// TclEventType: DG_GRAPH_STALE
// f (cr): Launch Runs: addNotify
dismissDialog("Save Project"); // al (cr)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (f)
// bB (cr):  Starting Design Runs : addNotify
dismissDialog("Launch Runs"); // f (cr)
// TclEventType: RUN_LAUNCH
// Tcl Message: launch_runs synth_1 -jobs 2 
// TclEventType: RUN_MODIFY
// TclEventType: RUN_STATUS_CHANGE
// Tcl Message: [Fri Jun 12 18:50:29 2020] Launched synth_1... Run output will be captured here: C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.runs/synth_1/runme.log 
// 'k' command handler elapsed time: 4 seconds
dismissDialog("Starting Design Runs"); // bB (cr)
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_FAILED
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_STEP_COMPLETED
// aj (cr): Synthesis Failed: addNotify
// Elapsed time: 29 seconds
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (aj)
// Run Command: PAResourceCommand.PACommandNames_MESSAGE_WINDOW
dismissDialog("Synthesis Failed"); // aj (cr)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-448] named port connection 'select' does not exist for instance 'PC_MUX' of module 'PC_MUX' [C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/IFETCH.v:63]. ]", 1, false); // ah (O, cr)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-448] named port connection 'select' does not exist for instance 'PC_MUX' of module 'PC_MUX' [C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/IFETCH.v:63]. ]", 1, false, false, false, false, false, true); // ah (O, cr) - Double Click
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-448] named port connection 'select' does not exist for instance 'PC_MUX' of module 'PC_MUX' [C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/IFETCH.v:63]. ]", 1, false); // ah (O, cr)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-448] named port connection 'select' does not exist for instance 'PC_MUX' of module 'PC_MUX' [C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/IFETCH.v:63]. ]", 1, false, false, false, false, false, true); // ah (O, cr) - Double Click
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-448] named port connection 'select' does not exist for instance 'PC_MUX' of module 'PC_MUX' [C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/IFETCH.v:63]. ]", 1, false); // ah (O, cr)
messagesViewCrossProbe(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "src;-;C:\Arquitectura\TPFinal_Arqui2020\MIPS_2020\MIPS_2020.srcs\sources_1\new\IFETCH.v;-;;-;16;-;line;-;63;-;;-;16;-;"); // ah (O, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("IFETCH.v", 105, 180); // ch (w, cr)
selectCodeEditor("IFETCH.v", 105, 180, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "PC_MUX.v", 4); // i (h, cr)
selectCodeEditor("PC_MUX.v", 98, 163); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 98, 163); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 98, 163); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 98, 163, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "PC_MUX.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectCodeEditor("IFETCH.v", 118, 179); // ch (w, cr)
selectCodeEditor("IFETCH.v", 118, 179, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IFETCH.v", 'v'); // ch (w, cr)
selectCodeEditor("IFETCH.v", 199, 241); // ch (w, cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-6156] failed synthesizing module 'PC' [C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/PC.v:24]. ]", 2, true); // ah (O, cr) - Node
messagesViewCrossProbe(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "src;-;C:\Arquitectura\TPFinal_Arqui2020\MIPS_2020\MIPS_2020.srcs\sources_1\new\PC.v;-;;-;16;-;line;-;24;-;;-;16;-;"); // ah (O, cr)
// Elapsed time: 10 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), PC : PC (PC.v)]", 3, false); // B (F, cr)
selectCodeEditor("PC.v", 55, 75); // ch (w, cr)
selectCodeEditor("PC.v", 216, 62); // ch (w, cr)
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Synthesis, Run Synthesis]", 14, false); // u (O, cr)
// Run Command: PAResourceCommand.PACommandNames_RUN_SYNTHESIS
// [GUI Memory]: 136 MB (+2459kb) [00:38:09]
// al (cr): Save Project: addNotify
selectButton(PAResourceQtoS.SaveProjectUtils_SAVE, "Save"); // a (al)
// bB (cr):  Save Constraints : addNotify
// TclEventType: DG_GRAPH_STALE
// bB (cr):  Resetting Runs : addNotify
dismissDialog("Save Project"); // al (cr)
// TclEventType: DG_GRAPH_STALE
// TclEventType: RUN_MODIFY
// TclEventType: FILE_SET_CHANGE
// TclEventType: RUN_MODIFY
// TclEventType: FILE_SET_CHANGE
// TclEventType: RUN_RESET
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_RESET
// TclEventType: RUN_MODIFY
// Tcl Message: reset_run synth_1 
// f (cr): Launch Runs: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (f)
// bB (cr):  Starting Design Runs : addNotify
dismissDialog("Launch Runs"); // f (cr)
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// Tcl Message: launch_runs synth_1 -jobs 2 
// Tcl Message: [Fri Jun 12 18:51:57 2020] Launched synth_1... Run output will be captured here: C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.runs/synth_1/runme.log 
// 'k' command handler elapsed time: 4 seconds
dismissDialog("Starting Design Runs"); // bB (cr)
// TclEventType: RUN_STATUS_CHANGE
selectCodeEditor("PC.v", 123, 70); // ch (w, cr)
// TclEventType: RUN_FAILED
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_STEP_COMPLETED
// aj (cr): Synthesis Failed: addNotify
// Elapsed time: 18 seconds
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (aj)
// Run Command: PAResourceCommand.PACommandNames_MESSAGE_WINDOW
dismissDialog("Synthesis Failed"); // aj (cr)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-91] ambiguous clock in event control [C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/INSTRUCTION_RAM.v:65]. ]", 2, false); // ah (O, cr)
messagesViewCrossProbe(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "src;-;C:\Arquitectura\TPFinal_Arqui2020\MIPS_2020\MIPS_2020.srcs\sources_1\new\INSTRUCTION_RAM.v;-;;-;16;-;line;-;65;-;;-;16;-;"); // ah (O, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
// Elapsed time: 12 seconds
selectCodeEditor("INSTRUCTION_RAM.v", 70, 109); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 70, 109); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 70, 109); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 70, 109); // ch (w, cr)
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 72 MB. Current time: 6/12/20, 6:52:48 PM ART
selectCodeEditor("INSTRUCTION_RAM.v", 142, 178); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 142, 178, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 22 seconds
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-91] ambiguous clock in event control [C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/INSTRUCTION_RAM.v:65]. ]", 2, false); // ah (O, cr)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-91] ambiguous clock in event control [C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/INSTRUCTION_RAM.v:65]. ]", 2, false); // ah (O, cr)
messagesViewCrossProbe(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "src;-;C:\Arquitectura\TPFinal_Arqui2020\MIPS_2020\MIPS_2020.srcs\sources_1\new\INSTRUCTION_RAM.v;-;;-;16;-;line;-;65;-;;-;16;-;"); // ah (O, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 148, 279); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 148, 279, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 19 seconds
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v)]", 3); // B (F, cr)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v)]", 3); // B (F, cr)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 4); // B (F, cr)
// PAPropertyPanels.initPanels (ram_instrucciones.v) elapsed time: 0.2s
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v), u_ram_instrucciones : ram_instrucciones (ram_instrucciones.v)]", 7, false); // B (F, cr)
// Tcl Message: current_project {Tp Final 2020} 
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v), u_ram_instrucciones : ram_instrucciones (ram_instrucciones.v)]", 7, false, false, false, false, false, true); // B (F, cr) - Double Click
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("ram_instrucciones.v", 69, 197); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 69, 197, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 40 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectCodeEditor("IFETCH.v", 96, 296); // ch (w, cr)
selectCodeEditor("IFETCH.v", 96, 296, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 127, 297); // ch (w, cr)
selectCodeEditor("IFETCH.v", 127, 297, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 97, 299); // ch (w, cr)
selectCodeEditor("IFETCH.v", 97, 299, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 128, 299); // ch (w, cr)
selectCodeEditor("IFETCH.v", 128, 299, false, false, false, false, true); // ch (w, cr) - Double Click
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v), u_pc : pc (pc.v)]", 6, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v), u_pc : pc (pc.v)]", 6, false, false, false, false, false, true); // B (F, cr) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v), u_ram_instrucciones : ram_instrucciones (ram_instrucciones.v)]", 7, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 4, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 4, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
// Elapsed time: 10 seconds
selectCodeEditor("instruction_fetch.v", 105, 75); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 105, 75, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 128, 79); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 128, 79, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "INSTRUCTION_RAM.v", 2); // i (h, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 75, 175); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 193, 237); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 154, 246); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 180, 318); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 195, 367); // ch (w, cr)
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Synthesis, Run Synthesis]", 14, false); // u (O, cr)
// Run Command: PAResourceCommand.PACommandNames_RUN_SYNTHESIS
// al (cr): Save Project: addNotify
selectButton(PAResourceQtoS.SaveProjectUtils_SAVE, "Save"); // a (al)
// bB (cr):  Save Constraints : addNotify
// TclEventType: DG_GRAPH_STALE
// bB (cr):  Resetting Runs : addNotify
dismissDialog("Save Project"); // al (cr)
// Tcl Message: current_project MIPS_2020 
// TclEventType: DG_GRAPH_STALE
// TclEventType: RUN_MODIFY
// TclEventType: DG_GRAPH_STALE
// TclEventType: RUN_MODIFY
// TclEventType: FILE_SET_CHANGE
// TclEventType: RUN_RESET
// TclEventType: FILE_SET_CHANGE
// TclEventType: RUN_RESET
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_RESET
// TclEventType: RUN_MODIFY
// Tcl Message: reset_run synth_1 
// f (cr): Launch Runs: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (f)
// bB (cr):  Starting Design Runs : addNotify
dismissDialog("Launch Runs"); // f (cr)
// Tcl Message: launch_runs synth_1 -jobs 2 
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// Tcl Message: [Fri Jun 12 18:56:05 2020] Launched synth_1... Run output will be captured here: C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.runs/synth_1/runme.log 
// 'k' command handler elapsed time: 4 seconds
dismissDialog("Starting Design Runs"); // bB (cr)
// TclEventType: RUN_STATUS_CHANGE
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
// TclEventType: RUN_FAILED
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_STEP_COMPLETED
selectCodeEditor("INSTRUCTION_RAM.v", 69, 122); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 69, 122, false, false, false, false, true); // ch (w, cr) - Double Click
// aj (cr): Synthesis Failed: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (aj)
// Run Command: PAResourceCommand.PACommandNames_MESSAGE_WINDOW
dismissDialog("Synthesis Failed"); // aj (cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-91] ambiguous clock in event control [C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/INSTRUCTION_RAM.v:65]. ]", 2, false); // ah (O, cr)
messagesViewCrossProbe(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "src;-;C:\Arquitectura\TPFinal_Arqui2020\MIPS_2020\MIPS_2020.srcs\sources_1\new\INSTRUCTION_RAM.v;-;;-;16;-;line;-;65;-;;-;16;-;"); // ah (O, cr)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-91] ambiguous clock in event control [C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/INSTRUCTION_RAM.v:65]. ]", 2, false); // ah (O, cr)
messagesViewCrossProbe(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "src;-;C:\Arquitectura\TPFinal_Arqui2020\MIPS_2020\MIPS_2020.srcs\sources_1\new\INSTRUCTION_RAM.v;-;;-;16;-;line;-;65;-;;-;16;-;"); // ah (O, cr)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-689] width (3) of port connection 'i_select' does not match port width (1) of module 'PC_MUX' [C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/IFETCH.v:63]. ]", 1, false); // ah (O, cr)
messagesViewCrossProbe(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "src;-;C:\Arquitectura\TPFinal_Arqui2020\MIPS_2020\MIPS_2020.srcs\sources_1\new\IFETCH.v;-;;-;16;-;line;-;63;-;;-;16;-;"); // ah (O, cr)
// Elapsed time: 17 seconds
selectCodeEditor("IFETCH.v", 151, 180); // ch (w, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("IFETCH.v", 180, 183); // ch (w, cr)
selectCodeEditor("IFETCH.v", 180, 183, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 11 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "PC_MUX.v", 4); // i (h, cr)
selectCodeEditor("PC_MUX.v", 94, 161); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 94, 161, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("PC_MUX.v", 99, 262); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 99, 262, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectCodeEditor("IFETCH.v", 139, 308); // ch (w, cr)
selectCodeEditor("IFETCH.v", 175, 285); // ch (w, cr)
selectCodeEditor("IFETCH.v", 175, 285, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 83, 93); // ch (w, cr)
selectCodeEditor("IFETCH.v", 83, 93, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 209, 90); // ch (w, cr)
selectCodeEditor("IFETCH.v", 93, 280); // ch (w, cr)
selectCodeEditor("IFETCH.v", 225, 280); // ch (w, cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-6156] failed synthesizing module 'INSTRUCTION_RAM' [C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/INSTRUCTION_RAM.v:23]. ]", 3, true); // ah (O, cr) - Node
messagesViewCrossProbe(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "src;-;C:\Arquitectura\TPFinal_Arqui2020\MIPS_2020\MIPS_2020.srcs\sources_1\new\INSTRUCTION_RAM.v;-;;-;16;-;line;-;23;-;;-;16;-;"); // ah (O, cr)
// Elapsed time: 25 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("IFETCH.v", 175, 281); // ch (w, cr)
selectCodeEditor("IFETCH.v", 175, 281, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 207, 96); // ch (w, cr)
selectCodeEditor("IFETCH.v", 79, 96); // ch (w, cr)
selectCodeEditor("IFETCH.v", 79, 96, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 177, 275); // ch (w, cr)
selectCodeEditor("IFETCH.v", 177, 275, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 229, 280); // ch (w, cr)
selectCodeEditor("IFETCH.v", 128, 280); // ch (w, cr)
selectCodeEditor("IFETCH.v", 128, 280, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 181, 279); // ch (w, cr)
selectCodeEditor("IFETCH.v", 181, 279, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 165, 350); // ch (w, cr)
selectCodeEditor("IFETCH.v", 165, 350, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 76, 66); // ch (w, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 4, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 4, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("instruction_fetch.v", 144, 176); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 144, 176, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 168, 381); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 168, 381, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 107, 382); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 107, 382, false, false, false, false, true); // ch (w, cr) - Double Click
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v), u_mux_PC : mux_PC (mux_PC.v)]", 5, false); // B (F, cr)
// Tcl Message: current_project {Tp Final 2020} 
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v), u_mux_PC : mux_PC (mux_PC.v)]", 5, false, false, false, false, false, true); // B (F, cr) - Double Click
selectCodeEditor("mux_PC.v", 133, 93); // ch (w, cr)
selectCodeEditor("mux_PC.v", 133, 93, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("mux_PC.v", 29, 93); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "PC_MUX.v", 4); // i (h, cr)
selectCodeEditor("PC_MUX.v", 84, 162); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 84, 162); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 96, 161); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 96, 161, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("PC_MUX.v", 104, 196); // ch (w, cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("PC_MUX.v", 140, 108); // ch (w, cr)
selectCodeEditor("mux_PC.v", 166, 100); // ch (w, cr)
selectCodeEditor("mux_PC.v", 168, 147); // ch (w, cr)
selectCodeEditor("mux_PC.v", 169, 146); // ch (w, cr)
selectCodeEditor("mux_PC.v", 105, 143); // ch (w, cr)
typeControlKey((HResource) null, "mux_PC.v", 'c'); // ch (w, cr)
selectCodeEditor("mux_PC.v", 213, 97); // ch (w, cr)
selectCodeEditor("mux_PC.v", 205, 78); // ch (w, cr)
selectCodeEditor("mux_PC.v", 216, 109); // ch (w, cr)
selectCodeEditor("mux_PC.v", 88, 142); // ch (w, cr)
selectCodeEditor("mux_PC.v", 88, 142, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("mux_PC.v", 304, 102); // ch (w, cr)
selectCodeEditor("mux_PC.v", 91, 61); // ch (w, cr)
selectCodeEditor("mux_PC.v", 81, 58); // ch (w, cr)
selectCodeEditor("mux_PC.v", 217, 110); // ch (w, cr)
selectCodeEditor("mux_PC.v", 252, 113); // ch (w, cr)
selectCodeEditor("mux_PC.v", 259, 126); // ch (w, cr)
selectCodeEditor("mux_PC.v", 261, 141); // ch (w, cr)
selectCodeEditor("mux_PC.v", 253, 163); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "instruction_fetch.v", 4); // i (h, cr)
// Elapsed time: 10 seconds
selectCodeEditor("PC_MUX.v", 103, 114); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 103, 114, false, false, false, false, true); // ch (w, cr) - Double Click
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("PC_MUX.v", 170, 120); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 169, 88); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 184, 131); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 184, 131, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("PC_MUX.v", 163, 148); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 163, 148, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("PC_MUX.v", 175, 113); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 175, 113, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectCodeEditor("IFETCH.v", 84, 115); // ch (w, cr)
typeControlKey((HResource) null, "IFETCH.v", 'c'); // ch (w, cr)
typeControlKey((HResource) null, "IFETCH.v", 'v'); // ch (w, cr)
selectCodeEditor("IFETCH.v", 170, 314); // ch (w, cr)
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey((HResource) null, "IFETCH.v", 'c'); // ch (w, cr)
typeControlKey((HResource) null, "IFETCH.v", 'v'); // ch (w, cr)
// Elapsed time: 11 seconds
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-91] ambiguous clock in event control [C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/INSTRUCTION_RAM.v:65]. ]", 2, false); // ah (O, cr)
messagesViewCrossProbe(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "src;-;C:\Arquitectura\TPFinal_Arqui2020\MIPS_2020\MIPS_2020.srcs\sources_1\new\INSTRUCTION_RAM.v;-;;-;16;-;line;-;65;-;;-;16;-;"); // ah (O, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 149, 179); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 149, 179, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 58, 217); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 58, 217, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 66, 235); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 66, 235, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 147, 182); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 147, 182, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 36, 211); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 239, 319); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 63, 222); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 63, 222, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 179, 208); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 179, 208, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 39, 214); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 5, 38); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 145, 266); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 132, 147); // ch (w, cr)
// Elapsed time: 10 seconds
selectCodeEditor("INSTRUCTION_RAM.v", 29, 140); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 29, 140, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 146, 139); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 146, 139, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 125, 210); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 125, 210, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 163, 210); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 163, 210, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 175, 208); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 175, 208, false, false, false, false, true); // ch (w, cr) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v), u_ram_instrucciones : ram_instrucciones (ram_instrucciones.v)]", 7, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v), u_ram_instrucciones : ram_instrucciones (ram_instrucciones.v)]", 7, false, false, false, false, false, true); // B (F, cr) - Double Click
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("ram_instrucciones.v", 51, 250); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 56, 248); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 56, 248, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ram_instrucciones.v", 72, 243); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 72, 243, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ram_instrucciones.v", 145, 161); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 145, 161, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ram_instrucciones.v", 173, 229); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 173, 229, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 10 seconds
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 123, 63); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectButton(RDIResourceCommand.RDICommands_SAVE_FILE, (String) null); // E (f, cr)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "Project Summary", 0); // i (h, cr)
// Tcl Message: current_project MIPS_2020 
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "PC_SUM.v", 3); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Synthesis, Run Synthesis]", 14, false); // u (O, cr)
// Run Command: PAResourceCommand.PACommandNames_RUN_SYNTHESIS
// bB (cr):  Resetting Runs : addNotify
// TclEventType: RUN_MODIFY
// TclEventType: RUN_RESET
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_RESET
// TclEventType: RUN_MODIFY
// Tcl Message: reset_run synth_1 
// f (cr): Launch Runs: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (f)
// bB (cr):  Starting Design Runs : addNotify
dismissDialog("Launch Runs"); // f (cr)
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// Tcl Message: launch_runs synth_1 -jobs 2 
// Tcl Message: [Fri Jun 12 19:02:54 2020] Launched synth_1... Run output will be captured here: C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.runs/synth_1/runme.log 
// 'k' command handler elapsed time: 4 seconds
dismissDialog("Starting Design Runs"); // bB (cr)
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_FAILED
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_STEP_COMPLETED
// aj (cr): Synthesis Failed: addNotify
// Elapsed time: 26 seconds
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (aj)
// Run Command: PAResourceCommand.PACommandNames_MESSAGE_WINDOW
dismissDialog("Synthesis Failed"); // aj (cr)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-91] ambiguous clock in event control [C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/INSTRUCTION_RAM.v:65]. ]", 1, false); // ah (O, cr)
messagesViewCrossProbe(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "src;-;C:\Arquitectura\TPFinal_Arqui2020\MIPS_2020\MIPS_2020.srcs\sources_1\new\INSTRUCTION_RAM.v;-;;-;16;-;line;-;65;-;;-;16;-;"); // ah (O, cr)
// Elapsed time: 29 seconds
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-91] ambiguous clock in event control [C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/INSTRUCTION_RAM.v:65]. ]", 1, false); // ah (O, cr)
messagesViewCrossProbe(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "src;-;C:\Arquitectura\TPFinal_Arqui2020\MIPS_2020\MIPS_2020.srcs\sources_1\new\INSTRUCTION_RAM.v;-;;-;16;-;line;-;65;-;;-;16;-;"); // ah (O, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 152, 180); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 152, 180, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 117 seconds
selectCodeEditor("INSTRUCTION_RAM.v", 180, 209); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 180, 209, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 59, 263); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 59, 263, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 62, 267); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 62, 267, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ram_instrucciones.v", 235, 132); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 108, 152); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 175, 134); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 175, 134, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 17 seconds
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Synthesis, Run Synthesis]", 14, false); // u (O, cr)
// Run Command: PAResourceCommand.PACommandNames_RUN_SYNTHESIS
// A (cr): Run Synthesis: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (A)
// bB (cr):  Resetting Runs : addNotify
dismissDialog("Run Synthesis"); // A (cr)
// Tcl Message: current_project {Tp Final 2020} 
// TclEventType: RUN_MODIFY
// TclEventType: RUN_RESET
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_RESET
// TclEventType: RUN_STATUS_CHANGE
// Tcl Message: reset_run synth_1 
// TclEventType: RUN_RESET
// TclEventType: RUN_MODIFY
// f (cr): Launch Runs: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (f)
// bB (cr):  Starting Design Runs : addNotify
dismissDialog("Launch Runs"); // f (cr)
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// TclEventType: RUN_STATUS_CHANGE
// Tcl Message: launch_runs synth_1 -jobs 2 
// Tcl Message: [Fri Jun 12 19:06:38 2020] Launched synth_1... Run output will be captured here: C:/Arquitectura tp final 2017/TP final 2020/Tp Final 2020/Tp Final 2020.runs/synth_1/runme.log 
// 'k' command handler elapsed time: 5 seconds
dismissDialog("Starting Design Runs"); // bB (cr)
// TclEventType: RUN_STATUS_CHANGE
selectCodeEditor("ram_instrucciones.v", 708, 83); // ch (w, cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("ram_instrucciones.v", 154, 213); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 154, 213, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 10 seconds
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-6156] failed synthesizing module 'INSTRUCTION_RAM' [C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/INSTRUCTION_RAM.v:23]. ]", 2, true); // ah (O, cr) - Node
// TclEventType: RUN_FAILED
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_STEP_COMPLETED
// aj (cr): Synthesis Failed: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (aj)
// Run Command: PAResourceCommand.PACommandNames_MESSAGE_WINDOW
dismissDialog("Synthesis Failed"); // aj (cr)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-439] module 'clk_wiz_0' not found [C:/Arquitectura tp final 2017/TP final 2020/Tp Final 2020/Tp Final 2020.srcs/sources_1/imports/tp final 2017/top_modular.v:152]. ]", 1, false); // ah (O, cr)
messagesViewCrossProbe(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "src;-;C:\Arquitectura tp final 2017\TP final 2020\Tp Final 2020\Tp Final 2020.srcs\sources_1\imports\tp final 2017\top_modular.v;-;;-;16;-;line;-;152;-;;-;16;-;"); // ah (O, cr)
selectCodeEditor("top_modular.v", 19, 27); // ch (w, cr)
selectCodeEditor("top_modular.v", 11, 57); // ch (w, cr)
selectButton(RDIResourceCommand.RDICommands_LINE_COMMENT, (String) null); // E (f, cr)
selectCodeEditor("top_modular.v", 72, 88); // ch (w, cr)
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Synthesis, Run Synthesis]", 14, false); // u (O, cr)
// Run Command: PAResourceCommand.PACommandNames_RUN_SYNTHESIS
// al (cr): Save Project: addNotify
selectButton(PAResourceQtoS.SaveProjectUtils_SAVE, "Save"); // a (al)
// bB (cr):  Save Constraints : addNotify
// bB (cr):  Resetting Runs : addNotify
dismissDialog("Save Project"); // al (cr)
// TclEventType: DG_GRAPH_STALE
// TclEventType: RUN_MODIFY
// TclEventType: DG_GRAPH_STALE
// TclEventType: RUN_MODIFY
// TclEventType: DG_GRAPH_STALE
// TclEventType: RUN_RESET
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: RUN_RESET
// TclEventType: FILE_SET_CHANGE
// TclEventType: RUN_RESET
// TclEventType: RUN_STATUS_CHANGE
// Tcl Message: reset_run synth_1 
// TclEventType: RUN_RESET
// TclEventType: RUN_MODIFY
// f (cr): Launch Runs: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (f)
// bB (cr):  Starting Design Runs : addNotify
dismissDialog("Launch Runs"); // f (cr)
// Tcl Message: launch_runs synth_1 -jobs 2 
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// TclEventType: RUN_STATUS_CHANGE
// Tcl Message: [Fri Jun 12 19:07:27 2020] Launched synth_1... Run output will be captured here: C:/Arquitectura tp final 2017/TP final 2020/Tp Final 2020/Tp Final 2020.runs/synth_1/runme.log 
// 'k' command handler elapsed time: 4 seconds
dismissDialog("Starting Design Runs"); // bB (cr)
// TclEventType: RUN_STATUS_CHANGE
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-91] ambiguous clock in event control [C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/INSTRUCTION_RAM.v:65]. ]", 1, false); // ah (O, cr)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-91] ambiguous clock in event control [C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/INSTRUCTION_RAM.v:65]. ]", 1, false); // ah (O, cr)
messagesViewCrossProbe(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "src;-;C:\Arquitectura\TPFinal_Arqui2020\MIPS_2020\MIPS_2020.srcs\sources_1\new\INSTRUCTION_RAM.v;-;;-;16;-;line;-;65;-;;-;16;-;"); // ah (O, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 10, 77); // ch (w, cr)
// Elapsed time: 12 seconds
selectCodeEditor("INSTRUCTION_RAM.v", 207, 81); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 207, 81, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 106, 60); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 106, 60, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 197, 127); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 197, 127, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 92, 63); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 92, 63, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 191, 133); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 191, 133, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_modular.v", 83, 98); // ch (w, cr)
// [GUI Memory]: 143 MB (+379kb) [00:54:32]
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "instruction_fetch.v", 4); // i (h, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v), u_ram_instrucciones : ram_instrucciones (ram_instrucciones.v)]", 6, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v), u_ram_instrucciones : ram_instrucciones (ram_instrucciones.v)]", 6, false, false, false, false, false, true); // B (F, cr) - Double Click
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("ram_instrucciones.v", 225, 242); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 225, 242, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ram_instrucciones.v", 103, 183); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 103, 183, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ram_instrucciones.v", 85, 185); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 135, 180); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 135, 180); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 145, 183); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 145, 183, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ram_instrucciones.v", 99, 174); // ch (w, cr)
// TclEventType: RUN_COMPLETED
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_STEP_COMPLETED
// aj (cr): Synthesis Completed: addNotify
// Elapsed time: 17 seconds
selectButton(RDIResource.BaseDialog_CANCEL, "Cancel"); // a (aj)
dismissDialog("Synthesis Completed"); // aj (cr)
selectCodeEditor("ram_instrucciones.v", 144, 191); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 146, 143); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 146, 143, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 10 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "instruction_fetch.v", 4); // i (h, cr)
selectCodeEditor("instruction_fetch.v", 100, 319); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 100, 319, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 138, 314); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 138, 314, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 112, 314); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 112, 314, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("IFETCH.v", 112, 281); // ch (w, cr)
selectCodeEditor("IFETCH.v", 289, 229); // ch (w, cr)
selectButton(RDIResourceCommand.RDICommands_SAVE_FILE, (String) null); // E (f, cr)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Tcl Message: current_project MIPS_2020 
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Synthesis, Run Synthesis]", 14, false); // u (O, cr)
// Run Command: PAResourceCommand.PACommandNames_RUN_SYNTHESIS
// bB (cr):  Resetting Runs : addNotify
// TclEventType: RUN_MODIFY
// TclEventType: RUN_RESET
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_RESET
// TclEventType: RUN_MODIFY
// Tcl Message: reset_run synth_1 
// f (cr): Launch Runs: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (f)
// bB (cr):  Starting Design Runs : addNotify
dismissDialog("Launch Runs"); // f (cr)
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// Tcl Message: launch_runs synth_1 -jobs 2 
// Tcl Message: [Fri Jun 12 19:09:35 2020] Launched synth_1... Run output will be captured here: C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.runs/synth_1/runme.log 
dismissDialog("Starting Design Runs"); // bB (cr)
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_FAILED
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_STEP_COMPLETED
// aj (cr): Synthesis Failed: addNotify
// Elapsed time: 25 seconds
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (aj)
// Run Command: PAResourceCommand.PACommandNames_MESSAGE_WINDOW
dismissDialog("Synthesis Failed"); // aj (cr)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-91] ambiguous clock in event control [C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/INSTRUCTION_RAM.v:65]. ]", 1, false); // ah (O, cr)
messagesViewCrossProbe(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "src;-;C:\Arquitectura\TPFinal_Arqui2020\MIPS_2020\MIPS_2020.srcs\sources_1\new\INSTRUCTION_RAM.v;-;;-;16;-;line;-;65;-;;-;16;-;"); // ah (O, cr)
// Elapsed time: 22 seconds
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-6156] failed synthesizing module 'INSTRUCTION_RAM' [C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/INSTRUCTION_RAM.v:23]. ]", 2, true); // ah (O, cr) - Node
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-6156] failed synthesizing module 'INSTRUCTION_RAM' [C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/INSTRUCTION_RAM.v:23]. ]", 2, true); // ah (O, cr) - Node
messagesViewCrossProbe(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "src;-;C:\Arquitectura\TPFinal_Arqui2020\MIPS_2020\MIPS_2020.srcs\sources_1\new\INSTRUCTION_RAM.v;-;;-;16;-;line;-;23;-;;-;16;-;"); // ah (O, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 7, 76); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 190, 75); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 73, 165); // ch (w, cr)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-91] ambiguous clock in event control [C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/INSTRUCTION_RAM.v:65]. ]", 1, false); // ah (O, cr)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-91] ambiguous clock in event control [C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/INSTRUCTION_RAM.v:65]. ]", 1, false, false, false, false, true, false); // ah (O, cr) - Popup Trigger
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-91] ambiguous clock in event control [C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/INSTRUCTION_RAM.v:65]. ]", 1, false); // ah (O, cr)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-91] ambiguous clock in event control [C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/INSTRUCTION_RAM.v:65]. ]", 1, false, false, false, false, true, false); // ah (O, cr) - Popup Trigger
// Elapsed time: 13 seconds
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-91] ambiguous clock in event control [C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/INSTRUCTION_RAM.v:65]. ]", 1, false, false, false, false, true, false); // ah (O, cr) - Popup Trigger
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-91] ambiguous clock in event control [C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/INSTRUCTION_RAM.v:65]. ]", 1, false); // ah (O, cr)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-91] ambiguous clock in event control [C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/INSTRUCTION_RAM.v:65]. ]", 1, false, false, false, false, true, false); // ah (O, cr) - Popup Trigger
// Elapsed time: 170 seconds
selectCodeEditor("instruction_fetch.v", 170, 161); // ch (w, cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 197, 126); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 197, 126, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 202, 201); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 94, 58); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 94, 58, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 171, 229); // ch (w, cr)
selectButton(RDIResourceCommand.RDICommands_SAVE_FILE, (String) null); // E (f, cr)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Synthesis, Run Synthesis]", 14, false); // u (O, cr)
// Run Command: PAResourceCommand.PACommandNames_RUN_SYNTHESIS
// bB (cr):  Resetting Runs : addNotify
// TclEventType: RUN_MODIFY
// TclEventType: RUN_RESET
// TclEventType: RUN_STATUS_CHANGE
// Tcl Message: reset_run synth_1 
// TclEventType: RUN_RESET
// TclEventType: RUN_MODIFY
// f (cr): Launch Runs: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (f)
// bB (cr):  Starting Design Runs : addNotify
dismissDialog("Launch Runs"); // f (cr)
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// Tcl Message: launch_runs synth_1 -jobs 2 
// Tcl Message: [Fri Jun 12 19:14:25 2020] Launched synth_1... Run output will be captured here: C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.runs/synth_1/runme.log 
// 'k' command handler elapsed time: 3 seconds
dismissDialog("Starting Design Runs"); // bB (cr)
// TclEventType: RUN_STATUS_CHANGE
selectCodeEditor("INSTRUCTION_RAM.v", 334, 139); // ch (w, cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
// TclEventType: RUN_FAILED
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_STEP_COMPLETED
// aj (cr): Synthesis Failed: addNotify
// Elapsed time: 12 seconds
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (aj)
// Run Command: PAResourceCommand.PACommandNames_MESSAGE_WINDOW
dismissDialog("Synthesis Failed"); // aj (cr)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-434] mixed level sensitive and edge triggered event controls are not supported for synthesis [C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/INSTRUCTION_RAM.v:65]. ]", 2, false); // ah (O, cr)
messagesViewCrossProbe(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "src;-;C:\Arquitectura\TPFinal_Arqui2020\MIPS_2020\MIPS_2020.srcs\sources_1\new\INSTRUCTION_RAM.v;-;;-;16;-;line;-;65;-;;-;16;-;"); // ah (O, cr)
// Elapsed time: 11 seconds
selectCodeEditor("INSTRUCTION_RAM.v", 92, 128); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 92, 128, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 174, 130); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 198, 126); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 198, 126, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 73, 128); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 73, 128, false, false, false, false, true); // ch (w, cr) - Double Click
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 74, 108); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 74, 108, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 78, 141); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 78, 141, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 10 seconds
selectCodeEditor("INSTRUCTION_RAM.v", 138, 250); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 137, 250, false, false, false, false, true); // ch (w, cr) - Double Click
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
// [GUI Memory]: 151 MB (+736kb) [01:01:54]
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("IFETCH.v", 102, 283); // ch (w, cr)
selectCodeEditor("IFETCH.v", 146, 293); // ch (w, cr)
selectCodeEditor("IFETCH.v", 146, 293, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 30, 196); // ch (w, cr)
// Elapsed time: 22 seconds
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), INSTRUCTION_RAM : INSTRUCTION_RAM (INSTRUCTION_RAM.v)]", 4, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), INSTRUCTION_RAM : INSTRUCTION_RAM (INSTRUCTION_RAM.v)]", 4, false, false, false, false, false, true); // B (F, cr) - Double Click
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
selectCodeEditor("INSTRUCTION_RAM.v", 184, 196); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 89, 130); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 89, 130, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 169 seconds
selectCodeEditor("INSTRUCTION_RAM.v", 59, 211); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 62, 228); // ch (w, cr)
// Elapsed time: 35 seconds
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
// Elapsed time: 21 seconds
selectCodeEditor("instruction_fetch.v", 28, 176); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 140, 143); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 140, 143); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 65, 196); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 45, 129); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 45, 129, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 38, 365); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 38, 365, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 148, 140); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 148, 140, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 71, 194); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 71, 194, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 239, 228); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 239, 228, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 99, 302); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 99, 302, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 95, 334); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 95, 334, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 67, 349); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 67, 349, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 240, 233); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 240, 233, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 59, 346); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 222, 232); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 58, 351); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 149, 139); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 149, 139, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 139, 135); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 46, 124); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 46, 124, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 36, 360); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 147, 145); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 147, 145, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 71, 193); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 71, 193, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 239, 232); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 239, 232, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 66, 348); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 66, 348, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 98, 302); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 98, 302, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 91, 329); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 91, 329, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 176, 349); // ch (w, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 37, 145); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 37, 145, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 21, 368); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 21, 368, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 146, 155); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 146, 155, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 63, 200); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 63, 200, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 103, 247); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 103, 247, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 94, 333); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 94, 333, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 65, 337); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 16, 153); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 32, 146); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 32, 146, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 20, 365); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 20, 365, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 68, 199); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 68, 199, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 92, 336); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 92, 336, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 104, 254); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 104, 247); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 104, 247, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 272, 340); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 164, 233); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 128, 327); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 47, 233); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 170, 313); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 50, 199); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 109, 361); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 66, 230); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 66, 230, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 56, 330); // ch (w, cr)
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 75 MB. Current time: 6/12/20, 7:22:48 PM ART
// Elapsed time: 37 seconds
selectCodeEditor("INSTRUCTION_RAM.v", 113, 239); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 79, 222); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 78, 222, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 99, 340); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 67, 236); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 67, 236); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 430, 195); // ch (w, cr)
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Synthesis, Run Synthesis]", 14, false); // u (O, cr)
// Run Command: PAResourceCommand.PACommandNames_RUN_SYNTHESIS
// al (cr): Save Project: addNotify
selectButton(PAResourceQtoS.SaveProjectUtils_SAVE, "Save"); // a (al)
// bB (cr):  Save Constraints : addNotify
// TclEventType: DG_GRAPH_STALE
// bB (cr):  Resetting Runs : addNotify
dismissDialog("Save Project"); // al (cr)
// TclEventType: DG_GRAPH_STALE
// TclEventType: RUN_MODIFY
// TclEventType: DG_GRAPH_STALE
// TclEventType: RUN_MODIFY
// TclEventType: FILE_SET_CHANGE
// TclEventType: RUN_RESET
// TclEventType: FILE_SET_CHANGE
// TclEventType: RUN_RESET
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_RESET
// TclEventType: RUN_MODIFY
// Tcl Message: reset_run synth_1 
// f (cr): Launch Runs: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (f)
// bB (cr):  Starting Design Runs : addNotify
dismissDialog("Launch Runs"); // f (cr)
// Tcl Message: launch_runs synth_1 -jobs 2 
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// Tcl Message: [Fri Jun 12 19:23:13 2020] Launched synth_1... Run output will be captured here: C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.runs/synth_1/runme.log 
// 'k' command handler elapsed time: 4 seconds
dismissDialog("Starting Design Runs"); // bB (cr)
// TclEventType: RUN_STATUS_CHANGE
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
// TclEventType: RUN_FAILED
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_STEP_COMPLETED
// aj (cr): Synthesis Failed: addNotify
// Elapsed time: 17 seconds
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (aj)
// Run Command: PAResourceCommand.PACommandNames_MESSAGE_WINDOW
dismissDialog("Synthesis Failed"); // aj (cr)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-3438] module 'PC_SUM' declared at 'C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/PC_SUM.v:23' does not have any parameter 'len1' used as named parameter override [C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/IFETCH.v:101]. ]", 1, false); // ah (O, cr)
messagesViewCrossProbe(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "src;-;C:\Arquitectura\TPFinal_Arqui2020\MIPS_2020\MIPS_2020.srcs\sources_1\new\IFETCH.v;-;;-;16;-;line;-;101;-;;-;16;-;"); // ah (O, cr)
selectCodeEditor("IFETCH.v", 75, 128); // ch (w, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), PC_SUM : PC_SUM (PC_SUM.v)]", 5, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), PC_SUM : PC_SUM (PC_SUM.v)]", 5, false, false, false, false, false, true); // B (F, cr) - Double Click
selectCodeEditor("PC_SUM.v", 112, 116); // ch (w, cr)
selectCodeEditor("PC_SUM.v", 112, 116, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "PC_SUM.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectCodeEditor("IFETCH.v", 76, 125); // ch (w, cr)
selectCodeEditor("IFETCH.v", 76, 125, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IFETCH.v", 'v'); // ch (w, cr)
selectCodeEditor("IFETCH.v", 80, 167); // ch (w, cr)
selectCodeEditor("IFETCH.v", 167, 155); // ch (w, cr)
selectButton(RDIResourceCommand.RDICommands_SAVE_FILE, (String) null); // E (f, cr)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Synthesis, Run Synthesis]", 14, false); // u (O, cr)
// Run Command: PAResourceCommand.PACommandNames_RUN_SYNTHESIS
// bB (cr):  Resetting Runs : addNotify
// TclEventType: RUN_MODIFY
// TclEventType: RUN_RESET
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_RESET
// TclEventType: RUN_MODIFY
// Tcl Message: reset_run synth_1 
// f (cr): Launch Runs: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (f)
// bB (cr):  Starting Design Runs : addNotify
dismissDialog("Launch Runs"); // f (cr)
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// Tcl Message: launch_runs synth_1 -jobs 2 
// Tcl Message: [Fri Jun 12 19:24:09 2020] Launched synth_1... Run output will be captured here: C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.runs/synth_1/runme.log 
dismissDialog("Starting Design Runs"); // bB (cr)
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_FAILED
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_STEP_COMPLETED
// aj (cr): Synthesis Failed: addNotify
// Elapsed time: 24 seconds
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (aj)
// Run Command: PAResourceCommand.PACommandNames_MESSAGE_WINDOW
dismissDialog("Synthesis Failed"); // aj (cr)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-91] ambiguous clock in event control [C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/IFETCH.v:109]. ]", 1, false); // ah (O, cr)
messagesViewCrossProbe(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "src;-;C:\Arquitectura\TPFinal_Arqui2020\MIPS_2020\MIPS_2020.srcs\sources_1\new\IFETCH.v;-;;-;16;-;line;-;109;-;;-;16;-;"); // ah (O, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
// Elapsed time: 11 seconds
selectCodeEditor("IFETCH.v", 30, 240); // ch (w, cr)
// Elapsed time: 55 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "INSTRUCTION_RAM.v", 2); // i (h, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 64, 331); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 75, 332); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 75, 332, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 79, 330); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 79, 330, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "PC_SUM.v", 3); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "PC_MUX.v", 4); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectCodeEditor("IFETCH.v", 84, 241); // ch (w, cr)
selectCodeEditor("IFETCH.v", 54, 229); // ch (w, cr)
selectCodeEditor("IFETCH.v", 56, 349); // ch (w, cr)
selectCodeEditor("IFETCH.v", 63, 233); // ch (w, cr)
selectCodeEditor("IFETCH.v", 63, 233); // ch (w, cr)
selectCodeEditor("IFETCH.v", 63, 233); // ch (w, cr)
selectCodeEditor("IFETCH.v", 63, 233, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 109, 228); // ch (w, cr)
selectCodeEditor("IFETCH.v", 109, 228, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "INSTRUCTION_RAM.v", 2); // i (h, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 207, 229); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 207, 229, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 63, 231); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 241, 236); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 54, 214); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 69, 215); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 90, 215); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 90, 215, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 262, 211); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 262, 211, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("INSTRUCTION_RAM.v", 51, 232); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 231, 231); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 250, 232); // ch (w, cr)
selectCodeEditor("INSTRUCTION_RAM.v", 190, 307); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "PC_SUM.v", 3); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "PC_MUX.v", 4); // i (h, cr)
selectCodeEditor("PC_MUX.v", 304, 269); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "INSTRUCTION_RAM.v", 2); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "PC_SUM.v", 3); // i (h, cr)
selectCodeEditor("PC_SUM.v", 200, 163); // ch (w, cr)
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Synthesis, Run Synthesis]", 14, false); // u (O, cr)
// Run Command: PAResourceCommand.PACommandNames_RUN_SYNTHESIS
// al (cr): Save Project: addNotify
selectButton(PAResourceQtoS.SaveProjectUtils_SAVE, "Save"); // a (al)
// bB (cr):  Save Constraints : addNotify
// TclEventType: DG_GRAPH_STALE
// bB (cr):  Resetting Runs : addNotify
dismissDialog("Save Project"); // al (cr)
// TclEventType: DG_GRAPH_STALE
// TclEventType: RUN_MODIFY
// TclEventType: DG_GRAPH_STALE
// TclEventType: RUN_MODIFY
// TclEventType: FILE_SET_CHANGE
// TclEventType: RUN_RESET
// TclEventType: FILE_SET_CHANGE
// TclEventType: RUN_RESET
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_RESET
// TclEventType: RUN_MODIFY
// Tcl Message: reset_run synth_1 
// f (cr): Launch Runs: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (f)
// bB (cr):  Starting Design Runs : addNotify
dismissDialog("Launch Runs"); // f (cr)
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// Tcl Message: launch_runs synth_1 -jobs 2 
// Tcl Message: [Fri Jun 12 19:26:54 2020] Launched synth_1... Run output will be captured here: C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.runs/synth_1/runme.log 
// 'k' command handler elapsed time: 3 seconds
dismissDialog("Starting Design Runs"); // bB (cr)
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_COMPLETED
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_STEP_COMPLETED
// aj (cr): Synthesis Completed: addNotify
// Elapsed time: 43 seconds
selectButton(RDIResource.BaseDialog_CANCEL, "Cancel"); // a (aj)
dismissDialog("Synthesis Completed"); // aj (cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
closeView(PAResourceOtoP.PAViews_CODE, "Code"); // B
selectCodeEditor("PC_MUX.v", 165, 52); // ch (w, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), INSTRUCTION_RAM : INSTRUCTION_RAM (INSTRUCTION_RAM.v)]", 4, false); // B (F, cr)
// Elapsed time: 15 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), PC_SUM : PC_SUM (PC_SUM.v)]", 5, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), INSTRUCTION_RAM : INSTRUCTION_RAM (INSTRUCTION_RAM.v)]", 4, false); // B (F, cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 3); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v)]", 4, true); // B (F, cr) - Node
// Tcl Message: current_project {Tp Final 2020} 
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v)]", 5, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v), u_alu_control : alu_control (alu_control.v)]", 6, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), PC_MUX : PC_MUX (PC_MUX.v)]", 2, false); // B (F, cr)
// Tcl Message: current_project MIPS_2020 
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), PC_SUM : PC_SUM (PC_SUM.v)]", 5, false); // B (F, cr)
selectButton(PAResourceCommand.PACommandNames_ADD_SOURCES, "Sources_add_sources"); // E (f, cr)
// Run Command: PAResourceCommand.PACommandNames_ADD_SOURCES
// c (cr): Add Sources: addNotify
selectButton("NEXT", "Next >"); // JButton (j, c)
selectButton(PAResourceQtoS.SrcChooserPanel_CREATE_FILE, "Create File"); // a (E, c)
// F (c): Create Source File: addNotify
// Elapsed time: 10 seconds
setText(PAResourceAtoD.CreateSrcFileDialog_FILE_NAME, "ALU_CONTROL"); // ac (Q, F)
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (F)
dismissDialog("Create Source File"); // F (c)
selectButton("FINISH", "Finish"); // JButton (j, c)
// 'h' command handler elapsed time: 19 seconds
dismissDialog("Add Sources"); // c (cr)
// Tcl Message: close [ open C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/ALU_CONTROL.v w ] 
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Tcl Message: add_files C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/ALU_CONTROL.v 
// bB (cr):  Add Sources  : addNotify
// I (cr): Define Module: addNotify
dismissDialog("Add Sources"); // bB (cr)
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (I)
// TclEventType: FILE_SET_CHANGE
selectButton("OptionPane.button", "Yes"); // JButton (A, H)
dismissDialog("Define Module"); // I (cr)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Tcl Message: update_compile_order -fileset sources_1 
// Elapsed time: 11 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v), u_alu_control : alu_control (alu_control.v)]", 6, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v), u_alu_control : alu_control (alu_control.v)]", 6, false, false, false, false, false, true); // B (F, cr) - Double Click
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("alu_control.v", 0, 130); // ch (w, cr)
typeControlKey((HResource) null, "alu_control.v", 'c'); // ch (w, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, ALU_CONTROL (ALU_CONTROL.v)]", 6, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, ALU_CONTROL (ALU_CONTROL.v)]", 6, false, false, false, false, false, true); // B (F, cr) - Double Click
selectCodeEditor("ALU_CONTROL.v", 70, 168); // ch (w, cr)
typeControlKey((HResource) null, "ALU_CONTROL.v", 'v'); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 54, 125); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 54, 125, false, false, false, false, true); // ch (w, cr) - Double Click
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("ALU_CONTROL.v", 214, 146); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 170, 178); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 135, 202); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 124, 217); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 109, 143); // ch (w, cr)
// Elapsed time: 48 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "i_opcode", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("ALU_CONTROL.v", 118, 284); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 118, 284, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 14 seconds
selectComboBox("FindAndReplaceDialog.cr_Find what:", "i_aluop", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("ALU_CONTROL.v", 121, 183); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 121, 183, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 23 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "i_aluOp", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("ALU_CONTROL.v", 146, 313); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 177, 42); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 197, 305); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 167, 176); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 167, 176, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 16 seconds
selectComboBox("FindAndReplaceDialog.cr_Find what:", "o_aluCode", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Close", "Close"); // JButton (cr, FindAndReplaceDialog)
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_aluCode", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 12 seconds
selectCodeEditor("ALU_CONTROL.v", 400, 356); // ch (w, cr)
selectButton(RDIResourceCommand.RDICommands_SAVE_FILE, (String) null); // E (f, cr)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, ALU_CONTROL (ALU_CONTROL.v)]", 6, false); // B (F, cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v)]", 5, true); // B (F, cr) - Node
// Tcl Message: current_project {Tp Final 2020} 
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v)]", 5, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v)]", 5, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v), u_alu_control : alu_control (alu_control.v)]", 6, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v)]", 5, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v)]", 5, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v)]", 5, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
// Elapsed time: 15 seconds
selectButton(PAResourceCommand.PACommandNames_ADD_SOURCES, "Sources_add_sources"); // E (f, cr)
// Run Command: PAResourceCommand.PACommandNames_ADD_SOURCES
// c (cr): Add Sources: addNotify
selectButton("NEXT", "Next >"); // JButton (j, c)
selectButton(PAResourceQtoS.SrcChooserPanel_CREATE_FILE, "Create File"); // a (E, c)
// F (c): Create Source File: addNotify
// Elapsed time: 25 seconds
setText(PAResourceAtoD.CreateSrcFileDialog_FILE_NAME, "UNIT_CONTROL"); // ac (Q, F)
selectButton(RDIResource.BaseDialog_CANCEL, "Cancel"); // a (F)
dismissDialog("Create Source File"); // F (c)
selectButton("CANCEL", "Cancel"); // JButton (j, c)
// 'h' command handler elapsed time: 28 seconds
dismissDialog("Add Sources"); // c (cr)
// Elapsed time: 223 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v)]", 5, true); // B (F, cr) - Node
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v)]", 5); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v), u_alu_control : alu_control (alu_control.v)]", 6, false); // B (F, cr)
// Elapsed time: 30 seconds
selectButton(PAResourceCommand.PACommandNames_ADD_SOURCES, "Sources_add_sources"); // E (f, cr)
// Run Command: PAResourceCommand.PACommandNames_ADD_SOURCES
// c (cr): Add Sources: addNotify
selectButton("NEXT", "Next >"); // JButton (j, c)
selectButton(PAResourceQtoS.SrcChooserPanel_CREATE_FILE, "Create File"); // a (E, c)
// F (c): Create Source File: addNotify
// Elapsed time: 19 seconds
setText(PAResourceAtoD.CreateSrcFileDialog_FILE_NAME, "CONTROL_SIGNALS"); // ac (Q, F)
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (F)
dismissDialog("Create Source File"); // F (c)
selectButton("FINISH", "Finish"); // JButton (j, c)
// 'h' command handler elapsed time: 22 seconds
dismissDialog("Add Sources"); // c (cr)
// Tcl Message: current_project MIPS_2020 
// Tcl Message: close [ open C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/CONTROL_SIGNALS.v w ] 
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Tcl Message: add_files C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/CONTROL_SIGNALS.v 
// I (cr): Define Module: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (I)
// TclEventType: FILE_SET_CHANGE
selectButton("OptionPane.button", "Yes"); // JButton (A, H)
dismissDialog("Define Module"); // I (cr)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Tcl Message: update_compile_order -fileset sources_1 
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v)]", 5, true); // B (F, cr) - Node
// Tcl Message: current_project {Tp Final 2020} 
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v)]", 5, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("control.v", 68, 232); // ch (w, cr)
selectCodeEditor("control.v", 0, 181); // ch (w, cr)
typeControlKey((HResource) null, "control.v", 'c'); // ch (w, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, CONTROL_SIGNALS (CONTROL_SIGNALS.v)]", 7, false); // B (F, cr)
// Tcl Message: current_project MIPS_2020 
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, CONTROL_SIGNALS (CONTROL_SIGNALS.v)]", 7, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, CONTROL_SIGNALS (CONTROL_SIGNALS.v)]", 7, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, CONTROL_SIGNALS (CONTROL_SIGNALS.v)]", 7, false, false, false, false, false, true); // B (F, cr) - Double Click
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 1, 367); // ch (w, cr)
typeControlKey((HResource) null, "CONTROL_SIGNALS.v", 'v'); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 115, 112); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 115, 112, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "CONTROL_SIGNALS.v", 'c'); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 80, 129); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 80, 129, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "CONTROL_SIGNALS.v", 'v'); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 177, 110); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 116, 240); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 112, 167); // ch (w, cr)
// Elapsed time: 16 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "i_opCode", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 13 seconds
selectCodeEditor("CONTROL_SIGNALS.v", 233, 213); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 139, 190); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 139, 190, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 50 seconds
selectCodeEditor("control.v", 227, 55); // ch (w, cr)
selectCodeEditor("control.v", 244, 332); // ch (w, cr)
selectCodeEditor("control.v", 244, 332, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("control.v", 139, 78); // ch (w, cr)
selectCodeEditor("control.v", 139, 78, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("control.v", 143, 112); // ch (w, cr)
selectCodeEditor("control.v", 143, 112, false, false, false, false, true); // ch (w, cr) - Double Click
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v)]", 4, true); // B (F, cr) - Node
// Tcl Message: current_project {Tp Final 2020} 
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v)]", 4, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("decode.v", 184, 230); // ch (w, cr)
selectCodeEditor("decode.v", 291, 228); // ch (w, cr)
selectCodeEditor("decode.v", 168, 301); // ch (w, cr)
selectCodeEditor("decode.v", 87, 302); // ch (w, cr)
selectCodeEditor("decode.v", 298, 230); // ch (w, cr)
selectCodeEditor("decode.v", 94, 302); // ch (w, cr)
// Elapsed time: 19 seconds
selectCodeEditor("decode.v", 124, 293); // ch (w, cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 179, 185); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "ALU_CONTROL.v", 5); // i (h, cr)
selectCodeEditor("ALU_CONTROL.v", 150, 127); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 150, 127, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ALU_CONTROL.v", 139, 145); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 139, 145, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ALU_CONTROL.v", 152, 132); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 152, 132, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ALU_CONTROL.v", 149, 139); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 149, 139, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ALU_CONTROL.v", 168, 170); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 168, 170, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ALU_CONTROL.v", 206, 175); // ch (w, cr)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v)]", 4); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v)]", 5, true); // B (F, cr) - Node
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v)]", 5); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v), u_alu_control : alu_control (alu_control.v)]", 6, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v), u_alu_control : alu_control (alu_control.v)]", 6, false, false, false, false, false, true); // B (F, cr) - Double Click
selectCodeEditor("alu_control.v", 166, 91); // ch (w, cr)
selectCodeEditor("alu_control.v", 166, 91, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("alu_control.v", 137, 93); // ch (w, cr)
selectCodeEditor("alu_control.v", 137, 93, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 10 seconds
selectCodeEditor("ALU_CONTROL.v", 145, 126); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 145, 126, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 14 seconds
selectCodeEditor("ALU_CONTROL.v", 191, 131); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 191, 131, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "ALU_CONTROL.v", 'c'); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 189, 311); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 189, 311, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "ALU_CONTROL.v", 'v'); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 365, 277); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 167, 360); // ch (w, cr)
// Elapsed time: 12 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "CONTROL_SIGNALS.v", 6); // i (h, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 145, 176); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 145, 176, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 142, 187); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 142, 187, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 54 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "i_opCodeFunction", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 10 seconds
selectButton(RDIResourceCommand.RDICommands_SAVE_FILE, (String) null); // E (f, cr)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "ALU_CONTROL.v", 5); // i (h, cr)
// Tcl Message: current_project MIPS_2020 
selectCodeEditor("ALU_CONTROL.v", 173, 179); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 173, 179); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 173, 179, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ALU_CONTROL.v", 173, 179); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 197, 180); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 197, 180, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "ALU_CONTROL.v", 'c'); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 223, 364); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 223, 364, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "ALU_CONTROL.v", 'v'); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 264, 389); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 157, 33); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "CONTROL_SIGNALS.v", 6); // i (h, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 155, 158); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 155, 158, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 138, 150); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 138, 150, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 50, 208); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 278, 157); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 278, 157, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 265, 197); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 265, 197, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 244, 224); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 244, 224, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 263, 157); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 280, 162); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 280, 162, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 12 seconds
typeControlKey(null, null, 'z');
selectComboBox("FindAndReplaceDialog.cr_Find what:", "o_executeBus", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Close", "Close"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 16 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_executeBus", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 20 seconds
selectCodeEditor("CONTROL_SIGNALS.v", 310, 285); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 255, 243); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 255, 242, false, false, false, false, true); // ch (w, cr) - Double Click
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_memoryBus", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 22 seconds
selectCodeEditor("CONTROL_SIGNALS.v", 279, 277); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 237, 295); // ch (w, cr)
// Elapsed time: 86 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_writeBackBus", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 18 seconds
selectCodeEditor("CONTROL_SIGNALS.v", 191, 355); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 123, 273); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 123, 273, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 132, 294); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 132, 294, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 113, 183); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 113, 183, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 118, 195); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 118, 195, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 115, 197); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 123, 195); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 123, 195, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 12 seconds
selectCodeEditor("CONTROL_SIGNALS.v", 149, 124); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 149, 124, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 134, 249); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 134, 249, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 32, 248); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 161, 244); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 162, 244); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 26, 234); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 176, 253); // ch (w, cr)
// Elapsed time: 28 seconds
selectCodeEditor("CONTROL_SIGNALS.v", 129, 249); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 129, 249, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 124, 128); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 124, 128, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 138, 342); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 138, 342, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 16 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "w_aluCode", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("CONTROL_SIGNALS.v", 122, 180); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 122, 180, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 111, 183); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 111, 183, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 14 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "r_aluOp", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 28 seconds
selectCodeEditor("CONTROL_SIGNALS.v", 248, 211); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 121, 110); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 121, 110, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 117, 127); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 117, 127, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 122, 150); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 122, 150, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 147, 112); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 147, 112); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 137, 108); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 137, 108, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 137, 125); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 137, 125, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 130, 142); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 130, 142, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 341, 250); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 162, 248); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 162, 248, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 299, 239); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 299, 239, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 268, 285); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 268, 285, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 268, 316); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 268, 316, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 15 seconds
selectCodeEditor("CONTROL_SIGNALS.v", 125, 111); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 125, 111, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 38 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "LEN_EXEC_BUS", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 14 seconds
selectCodeEditor("CONTROL_SIGNALS.v", 300, 207); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 322, 356); // ch (w, cr)
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
selectCodeEditor("CONTROL_SIGNALS.v", 338, 153); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 173, 22); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 247, 255); // ch (w, cr)
typeControlKey(null, null, 'z');
selectCodeEditor("CONTROL_SIGNALS.v", 246, 299); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 151, 92); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 151, 92, false, false, false, false, true); // ch (w, cr) - Double Click
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 83 MB. Current time: 6/12/20, 7:52:48 PM ART
selectCodeEditor("CONTROL_SIGNALS.v", 344, 307); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 415, 253); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 520, 271); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 592, 324); // ch (w, cr)
selectButton(RDIResourceCommand.RDICommands_SAVE_FILE, (String) null); // E (f, cr)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
selectCodeEditor("CONTROL_SIGNALS.v", 330, 94); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 302, 259); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 172, 260); // ch (w, cr)
// Elapsed time: 13 seconds
selectCodeEditor("CONTROL_SIGNALS.v", 124, 131); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 124, 131, false, false, false, false, true); // ch (w, cr) - Double Click
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 158, 297); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 127, 244); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 127, 244, false, false, false, false, true); // ch (w, cr) - Double Click
closeView(PAResourceOtoP.PAViews_CODE, "Code"); // B
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, CONTROL_SIGNALS (CONTROL_SIGNALS.v)]", 6); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, CONTROL_SIGNALS (CONTROL_SIGNALS.v)]", 6, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, CONTROL_SIGNALS (CONTROL_SIGNALS.v)]", 6, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 135, 158); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 135, 158, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 14 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "LEN_MEM_BUS", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("CONTROL_SIGNALS.v", 131, 179); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 131, 179, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 13 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "LEN_WB_BUS", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("CONTROL_SIGNALS.v", 270, 282); // ch (w, cr)
selectButton(RDIResourceCommand.RDICommands_SAVE_FILE, (String) null); // E (f, cr)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Elapsed time: 11 seconds
selectCodeEditor("CONTROL_SIGNALS.v", 68, 163); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 68, 163, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 66, 257); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 66, 257, false, false, false, false, true); // ch (w, cr) - Double Click
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, CONTROL_SIGNALS (CONTROL_SIGNALS.v)]", 6); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, CONTROL_SIGNALS (CONTROL_SIGNALS.v), ALU_CONTROL (ALU_CONTROL.v)]", 8, false); // B (F, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 179, 126); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 58, 112); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 58, 112); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 58, 112); // ch (w, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, CONTROL_SIGNALS (CONTROL_SIGNALS.v), ALU_CONTROL (ALU_CONTROL.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, CONTROL_SIGNALS (CONTROL_SIGNALS.v), ALU_CONTROL (ALU_CONTROL.v)]", 8, false, false, false, false, false, true); // B (F, cr) - Double Click
selectCodeEditor("ALU_CONTROL.v", 82, 110); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 82, 110, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "ALU_CONTROL.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "CONTROL_SIGNALS.v", 6); // i (h, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 43, 119); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 43, 119, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 56, 103); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 56, 103, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "CONTROL_SIGNALS.v", 'v'); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 83, 127); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 83, 127, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "CONTROL_SIGNALS.v", 'v'); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 161, 98); // ch (w, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 80, 67); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 73, 58); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 73, 58, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 80, 75); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 80, 75, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 177, 132); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 102, 81); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 207, 130); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 207, 130, false, false, false, false, true); // ch (w, cr) - Double Click
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "ALU_CONTROL.v", 5); // i (h, cr)
selectCodeEditor("ALU_CONTROL.v", 154, 127); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 154, 127, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "ALU_CONTROL.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "CONTROL_SIGNALS.v", 6); // i (h, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 168, 222); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "ALU_CONTROL.v", 5); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "CONTROL_SIGNALS.v", 6); // i (h, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 199, 181); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 404, 230); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 404, 230, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 457, 236); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 457, 236); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "ALU_CONTROL.v", 5); // i (h, cr)
selectCodeEditor("ALU_CONTROL.v", 139, 144); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 139, 144, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "ALU_CONTROL.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "CONTROL_SIGNALS.v", 6); // i (h, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 312, 229); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 312, 229, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 467, 227); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 467, 227, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 406, 227); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 406, 227, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 461, 231); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 461, 231, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 403, 228); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 403, 228, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 469, 230); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 469, 230, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 379, 250); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 386, 232); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectCodeEditor("IFETCH.v", 126, 107); // ch (w, cr)
selectCodeEditor("IFETCH.v", 126, 107, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "CONTROL_SIGNALS.v", 6); // i (h, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 415, 228); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 415, 228, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "CONTROL_SIGNALS.v", 'v'); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 316, 225); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 316, 225, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 466, 334); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 466, 334, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 412, 333); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 412, 333, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 157, 345); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 157, 345, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "ALU_CONTROL.v", 5); // i (h, cr)
selectCodeEditor("ALU_CONTROL.v", 199, 180); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 199, 180, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "ALU_CONTROL.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "CONTROL_SIGNALS.v", 6); // i (h, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 187, 345); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 187, 345, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "CONTROL_SIGNALS.v", 'v'); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 148, 332); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 148, 332, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "ALU_CONTROL.v", 5); // i (h, cr)
selectCodeEditor("ALU_CONTROL.v", 186, 128); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 186, 128, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "CONTROL_SIGNALS.v", 6); // i (h, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 165, 328); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 165, 328, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 287, 326); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 287, 326, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 161, 74); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 161, 74, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 56, 249); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 65, 229); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 65, 229, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 197, 225); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 197, 225, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 404, 381); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 404, 381, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 120, 259); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 120, 259, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 163, 345); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 163, 345, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 119, 260); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 119, 260, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "ALU_CONTROL.v", 5); // i (h, cr)
selectCodeEditor("ALU_CONTROL.v", 143, 141); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 143, 141, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "CONTROL_SIGNALS.v", 6); // i (h, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 40, 295); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 32, 212); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 304, 256); // ch (w, cr)
// Elapsed time: 10 seconds
selectCodeEditor("CONTROL_SIGNALS.v", 473, 127); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 473, 127, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 205, 283); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 205, 283, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 18 seconds
selectCodeEditor("CONTROL_SIGNALS.v", 201, 140); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 202, 267); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 202, 267, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 219, 334); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 219, 334, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 454, 264); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 454, 264, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 25 seconds
selectCodeEditor("CONTROL_SIGNALS.v", 177, 178); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 177, 178, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 257, 179); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 257, 179, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 337, 177); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 337, 177, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 193, 231); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 193, 231, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 212, 249); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 212, 249, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 224, 260); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 224, 260, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 13 seconds
selectCodeEditor("CONTROL_SIGNALS.v", 203, 160); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 203, 160, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 293, 125); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 293, 125, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 145, 129); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 145, 129); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 172, 198); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 172, 198, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 147, 107); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 147, 107, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 86, 176); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 152, 215); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 137, 181); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 137, 181, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 11 seconds
selectCodeEditor("CONTROL_SIGNALS.v", 163, 182); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 163, 182, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 254, 177); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 254, 177, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 329, 168); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 326, 176); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 326, 176, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 253, 179); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 253, 179, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 170, 179); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 170, 179, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 253, 179); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 253, 179, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 344, 178); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 344, 178, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 199, 199); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 324, 198); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 327, 196); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 217, 220); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 217, 220, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 200, 228); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 200, 228, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 201, 249); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 201, 249, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 210, 266); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 210, 266, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 210, 248); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 210, 248, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 180, 226); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 180, 226); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 206, 211); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 206, 211, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 199, 229); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 199, 229, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 219, 249); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 219, 249, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 228, 263); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 228, 263, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 187, 241); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 187, 241, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 195, 145); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 200, 214); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 186, 198); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 186, 198, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 199, 215); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 217, 217); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 201, 212); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 192, 209); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 197, 334); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 232, 326); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 203, 331); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 186, 365); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 462, 365); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 462, 365, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 180, 163); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 180, 163); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 175, 156); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 175, 156, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 11 seconds
selectCodeEditor("CONTROL_SIGNALS.v", 225, 313); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 225, 313, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 451, 314); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 451, 314, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 231, 315); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 231, 315); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 221, 313); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 221, 313, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 426, 193); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 457, 82); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 457, 82, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 170, 159); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 81, 93); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 281, 80); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 281, 80, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 116, 92); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 116, 92, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 177, 91); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 177, 91, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 221, 92); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 221, 92, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 263, 77); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 263, 77, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 92, 92); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 92, 92, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 182, 92); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 182, 92, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 235, 97); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 235, 97, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 292, 99); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 292, 99, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 364, 90); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 364, 90, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 397, 97); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 412, 95); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 412, 95, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 452, 94); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 452, 94, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 510, 94); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 509, 94, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 579, 99); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 579, 99, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 426, 316); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 226, 311); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 226, 311, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 15 seconds
selectCodeEditor("CONTROL_SIGNALS.v", 154, 222); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 154, 222, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 147, 333); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 147, 333, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 158, 208); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 158, 208, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 16 seconds
selectCodeEditor("CONTROL_SIGNALS.v", 445, 160); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 445, 160, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 443, 277); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 443, 277, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 390, 275); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 390, 275, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 145, 248); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 145, 248, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 220, 244); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 220, 244, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 264, 261); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 264, 261, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 270, 279); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 270, 279, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 214, 243); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 392, 232); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 392, 232, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 217, 239); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 217, 239, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 276, 257); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 276, 257, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 261, 278); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 261, 278, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 138, 226); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 138, 190); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 138, 190, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 119, 109); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 119, 109, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 193, 158); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 193, 158, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 108, 164); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 108, 164, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 17 seconds
selectCodeEditor("CONTROL_SIGNALS.v", 384, 251); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 384, 251, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 157, 248); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 157, 248, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 146, 258); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 140, 287); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 140, 287, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 153, 301); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 153, 301, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 158, 278); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 158, 278, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 221, 264); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 221, 264, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 221, 140); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 221, 140, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 217, 128); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 217, 128, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 210, 107); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 210, 107, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 39 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "ALU_CONTROL.v", 5); // i (h, cr)
selectCodeEditor("ALU_CONTROL.v", 73, 128); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 77, 142); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 113, 179); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 157, 180); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 238, 178); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 164, 145); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 76, 145); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 114, 178); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 409, 73); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 409, 73, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ALU_CONTROL.v", 416, 128); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 416, 128, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ALU_CONTROL.v", 419, 157); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 419, 157, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ALU_CONTROL.v", 331, 215); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 331, 215, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ALU_CONTROL.v", 321, 236); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 321, 236, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ALU_CONTROL.v", 314, 258); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 314, 258, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ALU_CONTROL.v", 384, 284); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "CONTROL_SIGNALS.v", 6); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "ALU_CONTROL.v", 5); // i (h, cr)
selectButton(RDIResourceCommand.RDICommands_SAVE_FILE, (String) null); // E (f, cr)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, CONTROL_SIGNALS (CONTROL_SIGNALS.v), u_alu_control : xil_defaultlib.alu_control]", 7, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, CONTROL_SIGNALS (CONTROL_SIGNALS.v)]", 6, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, CONTROL_SIGNALS (CONTROL_SIGNALS.v)]", 6, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, CONTROL_SIGNALS (CONTROL_SIGNALS.v)]", 6, true); // B (F, cr) - Node
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, CONTROL_SIGNALS (CONTROL_SIGNALS.v)]", 6); // B (F, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 86, 88); // ch (w, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 67, 209); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 67, 209, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 76, 229); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 76, 229, false, false, false, false, true); // ch (w, cr) - Double Click
// k (cr): Text Changed: addNotify
closeView(PAResourceOtoP.PAViews_CODE, "Code"); // B (i, cr)
selectButton(RDIResource.ConfirmSaveTextEditsDialog_YES, "Yes"); // a (k)
// TclEventType: DG_GRAPH_STALE
dismissDialog("Text Changed"); // k (cr)
// TclEventType: FILE_SET_CHANGE
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, CONTROL_SIGNALS (CONTROL_SIGNALS.v), ALU_CONTROL : ALU_CONTROL (ALU_CONTROL.v)]", 7, false); // B (F, cr)
// Elapsed time: 13 seconds
selectCodeEditor("ALU_CONTROL.v", 165, 47); // ch (w, cr)
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Synthesis, Run Synthesis]", 14, false); // u (O, cr)
// Run Command: PAResourceCommand.PACommandNames_RUN_SYNTHESIS
// bB (cr):  Resetting Runs : addNotify
// TclEventType: RUN_MODIFY
// TclEventType: RUN_RESET
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_RESET
// TclEventType: RUN_MODIFY
// Tcl Message: reset_run synth_1 
// f (cr): Launch Runs: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (f)
// bB (cr):  Starting Design Runs : addNotify
dismissDialog("Launch Runs"); // f (cr)
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// Tcl Message: launch_runs synth_1 -jobs 2 
// Tcl Message: [Fri Jun 12 20:06:12 2020] Launched synth_1... Run output will be captured here: C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.runs/synth_1/runme.log 
dismissDialog("Starting Design Runs"); // bB (cr)
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_COMPLETED
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_STEP_COMPLETED
// aj (cr): Synthesis Completed: addNotify
// Elapsed time: 55 seconds
selectButton(RDIResource.BaseDialog_CANCEL, "Cancel"); // a (aj)
dismissDialog("Synthesis Completed"); // aj (cr)
selectCodeEditor("ALU_CONTROL.v", 153, 35); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 191, 42); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 191, 42, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 14 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v)]", 1, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v)]", 1, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("IFETCH.v", 112, 146); // ch (w, cr)
selectCodeEditor("IFETCH.v", 112, 146, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 164, 233); // ch (w, cr)
selectCodeEditor("IFETCH.v", 164, 233, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 180, 293); // ch (w, cr)
selectCodeEditor("IFETCH.v", 180, 293, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 196, 327); // ch (w, cr)
selectCodeEditor("IFETCH.v", 196, 327, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 196, 389); // ch (w, cr)
selectCodeEditor("IFETCH.v", 196, 389, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 197, 402); // ch (w, cr)
selectCodeEditor("IFETCH.v", 197, 402, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 188, 328); // ch (w, cr)
selectCodeEditor("IFETCH.v", 188, 328, false, false, false, false, true); // ch (w, cr) - Double Click
// WARNING: HEventQueue.dispatchEvent() is taking  2424 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 2035 ms. Increasing delay to 3000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1150 ms. Increasing delay to 3450 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5848 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 80 MB. Current time: 6/12/20, 8:22:55 PM ART
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 565 ms to process. Increasing delay to 2000 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 1063 ms. Increasing delay to 3000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2597 ms. Increasing delay to 7791 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2734 ms. Increasing delay to 8202 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2907 ms to process. Increasing delay to 3000 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5199 ms. Increasing delay to 4000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7622 ms. Increasing delay to 22866 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1257 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 13601 ms. Increasing delay to 40803 ms.
// WARNING: HTimer (ActiveMsgMonitor Process Messages Timer) is taking 403ms to process. Increasing delay to 2000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1631 ms.
// WARNING: HTimer (StateMonitor Timer) is taking 818ms to process. Increasing delay to 4000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1478 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 732 ms to process. Increasing delay to 2000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 736 ms to process. Increasing delay to 2000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 731 ms to process. Increasing delay to 2000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 191 ms. Decreasing delay to 2191 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 1545 ms. Increasing delay to 4000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 351 ms. Decreasing delay to 2351 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3066 ms. Increasing delay to 9198 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1314 ms. Increasing delay to 3942 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 757 ms to process. Increasing delay to 2000 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 2497 ms. Increasing delay to 5000 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 3462 ms. Increasing delay to 5000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2347 ms to process. Increasing delay to 3000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5540 ms. Increasing delay to 16620 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 2906 ms. Increasing delay to 6000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 535 ms to process. Increasing delay to 2000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 535 ms to process. Increasing delay to 2000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 220 ms. Decreasing delay to 2220 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 3572 ms. Increasing delay to 7000 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 3800 ms. Increasing delay to 6000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 588 ms to process. Increasing delay to 2000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 10751 ms. Increasing delay to 32253 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3209 ms. Increasing delay to 9627 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 1391 ms to process. Increasing delay to 3000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 526 ms. Decreasing delay to 2526 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 1652 ms to process. Increasing delay to 4000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 1716 ms to process. Increasing delay to 4000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2414 ms. Increasing delay to 7242 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 8229 ms. Increasing delay to 7000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2694 ms to process. Increasing delay to 3000 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 4709 ms. Increasing delay to 8000 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 3772 ms. Increasing delay to 8000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1910 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2610 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/12/20, 8:52:52 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/12/20, 9:22:50 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  2744371 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1180 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/12/20, 10:26:33 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  10801089 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/13/20, 1:35:14 AM ART
// WARNING: HEventQueue.dispatchEvent() is taking  28580179 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1098 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/13/20, 9:31:39 AM ART
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 1264 ms to process. Increasing delay to 3000 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/13/20, 10:01:38 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/13/20, 10:31:38 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/13/20, 11:01:39 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/13/20, 11:31:39 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/13/20, 12:01:39 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1742 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1207 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 13585 ms. Increasing delay to 40755 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 63 ms. Decreasing delay to 2063 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3043 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2911 ms. Increasing delay to 8733 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/13/20, 12:31:44 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1231 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1094 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6013 ms. Increasing delay to 18039 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 98 ms. Decreasing delay to 2098 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1596 ms. Increasing delay to 4788 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3482 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5555 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 9511 ms. Increasing delay to 28533 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2275 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1173 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1286 ms. Decreasing delay to 3286 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2699 ms. Increasing delay to 8097 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 4663 ms. Increasing delay to 9000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2761 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 10407 ms. Increasing delay to 31221 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 9452 ms. Increasing delay to 28356 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7537 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 8 ms. Decreasing delay to 2008 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1730 ms. Increasing delay to 5190 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2912 ms to process. Increasing delay to 3000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 80 ms. Decreasing delay to 2080 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1411 ms. Increasing delay to 4233 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1066 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4082 ms. Increasing delay to 12246 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 327 ms. Decreasing delay to 2327 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2464 ms. Increasing delay to 7392 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1015 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1264 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1816 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6313 ms. Increasing delay to 18939 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5053 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1910 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 1606 ms to process. Increasing delay to 4000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 1217 ms to process. Increasing delay to 3000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3964 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1614 ms. Decreasing delay to 3614 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4188 ms. Increasing delay to 12564 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1575 ms. Decreasing delay to 3575 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2165 ms to process. Increasing delay to 5000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1515 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2533 ms. Increasing delay to 7599 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4053 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/13/20, 1:01:47 PM ART
// WARNING: HTimer (ActiveMsgMonitor Process Messages Timer) is taking 251ms to process. Increasing delay to 2000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 4863 ms to process. Increasing delay to 5000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1407 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4764 ms. Increasing delay to 14292 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3324 ms. Increasing delay to 9972 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4122 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 13383 ms. Increasing delay to 40149 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3269 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4540 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 6296 ms to process. Increasing delay to 6000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3690 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 16357 ms. Increasing delay to 49071 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 8537 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7 ms. Decreasing delay to 2007 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5456 ms. Increasing delay to 9000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2028 ms. Increasing delay to 6084 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2467 ms to process. Increasing delay to 3000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2591 ms to process. Increasing delay to 5000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2590 ms to process. Increasing delay to 4000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2594 ms to process. Increasing delay to 4000 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 7333 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2458 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 1035 ms to process. Increasing delay to 2000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5123 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1642 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 96 ms. Decreasing delay to 2096 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7532 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1430 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2323 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1542 ms. Increasing delay to 4626 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2432 ms. Increasing delay to 7296 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1283 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1197 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1306 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1100 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1322 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 1790 ms to process. Increasing delay to 4000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  10006 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/13/20, 1:31:59 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  2922 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3651 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/13/20, 2:01:52 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  3853759 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/13/20, 3:24:09 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  10800796 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/13/20, 6:51:28 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  55119485 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/14/20, 10:10:12 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/14/20, 10:40:11 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/14/20, 11:10:11 AM ART
// WARNING: HEventQueue.dispatchEvent() is taking  10801276 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/14/20, 2:29:54 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  8298188 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1338 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/14/20, 4:48:17 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/14/20, 5:18:16 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/14/20, 5:48:20 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/14/20, 6:18:20 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/14/20, 6:48:21 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/14/20, 7:18:21 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1237 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1750 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1104 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1059 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1104 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3199 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5023 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3844 ms. Increasing delay to 11532 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4285 ms. Increasing delay to 12855 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 795 ms. Decreasing delay to 2795 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 886 ms. Decreasing delay to 2886 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1349 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1775 ms. Increasing delay to 5325 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  8797 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/14/20, 7:48:36 PM ART
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 9579 ms. Increasing delay to 28737 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1467 ms. Increasing delay to 4401 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1061 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1155 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1134 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 94 ms. Decreasing delay to 2094 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1150 ms. Increasing delay to 3450 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1781 ms. Increasing delay to 5343 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2236 ms. Increasing delay to 6708 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2923 ms. Increasing delay to 8769 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1991 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3914 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3080 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5560 ms. Increasing delay to 16680 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 14 ms. Decreasing delay to 2014 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4542 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/14/20, 8:18:31 PM ART
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1966 ms. Increasing delay to 5898 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1088 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/14/20, 8:48:28 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/14/20, 9:18:29 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  5152 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/14/20, 9:48:34 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/14/20, 10:18:29 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/14/20, 10:48:30 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/14/20, 11:18:30 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  10800179 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1086 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/15/20, 2:43:12 AM ART
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 10801310 ms. Increasing delay to 32403930 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  41071684 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/15/20, 2:07:49 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  2096 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1415 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1888 ms.
// WARNING: HTimer (ActiveMsgMonitor Process Messages Timer) is taking 592ms to process. Increasing delay to 3000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1009 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1227 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1041 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3849 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3015 ms. Increasing delay to 9045 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1111 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1685 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  10212 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/15/20, 2:37:59 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1405 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1148 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 1852 ms to process. Increasing delay to 3000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1262 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5629 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2207 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6378 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/15/20, 3:07:55 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/15/20, 3:37:51 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  6530 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/15/20, 4:07:58 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/15/20, 4:37:54 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1150 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3124173 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6298 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/15/20, 5:33:15 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1860 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7257 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/15/20, 6:03:17 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1271 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2638 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1169 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1606 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1109 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2289 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3722 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1118 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1051 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1062 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2431 ms to process. Increasing delay to 5000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2141 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7163 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  12986 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4064 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 16233 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 20754 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2236 ms to process. Increasing delay to 4000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2733 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5215 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 9082 ms. Increasing delay to 27246 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 3104 ms to process. Increasing delay to 5000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 24 ms. Decreasing delay to 2024 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1096 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2542 ms. Increasing delay to 7626 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2279 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  11345 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1300 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/15/20, 6:33:26 PM ART
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5512 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5512 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2141 ms to process. Increasing delay to 5000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1981 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1188 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1682 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 3431 ms to process. Increasing delay to 4000 ms.
// WARNING: HTimer (a Update Status Timer) is taking 493ms to process. Increasing delay to 3000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1574 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1178 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1532 ms.
// WARNING: HTimer (HSTRUtils Dump STR Log Timer) is taking 819ms to process. Increasing delay to 4000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3702 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 3561 ms to process. Increasing delay to 6000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1029 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3472 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 8016 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1137 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1120 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1046 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2223 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 6282 ms. Increasing delay to 10000 ms.
// WARNING: HTimer (ExpRunMgr Pending Runs Timer) is taking 2475ms to process. Increasing delay to 3000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2591 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1128 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1076 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4140 ms. Increasing delay to 12420 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2357 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1273 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 472 ms. Decreasing delay to 2472 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2560 ms. Increasing delay to 7680 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4954 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 12450 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1409 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  9142 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/15/20, 7:03:23 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1083 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1009 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2200 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1405 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 7391 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7837 ms. Increasing delay to 23511 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1082 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1295 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 363 ms. Decreasing delay to 2363 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1253 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7212 ms. Increasing delay to 21636 ms.
// WARNING: HTimer (HSTRUtils Dump STR Log Timer) is taking 854ms to process. Increasing delay to 5000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1190 ms. Decreasing delay to 3190 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4927 ms. Increasing delay to 14781 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 87 ms. Decreasing delay to 2087 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2467 ms. Increasing delay to 7401 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4432 ms. Increasing delay to 13296 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2272 ms to process. Increasing delay to 5000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 41 ms. Decreasing delay to 2041 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1781 ms. Increasing delay to 5343 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1283 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2019 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1690 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1494 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3927 ms. Increasing delay to 11781 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4 ms. Decreasing delay to 2004 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1052 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1031 ms. Increasing delay to 3093 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1168 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1548 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4857 ms. Increasing delay to 14571 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 10 ms. Decreasing delay to 2010 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3059 ms. Increasing delay to 9177 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1502 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5281 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7217 ms. Increasing delay to 21651 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1194 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1200 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3745 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 13 ms. Decreasing delay to 2013 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5999 ms. Increasing delay to 17997 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  15433 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6389 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 14 ms. Decreasing delay to 2014 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7416 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1009 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2024 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3713 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7131 ms. Increasing delay to 21393 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3854 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2028 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1074 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1218 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 20012 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 9 ms. Decreasing delay to 2009 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3547 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7863 ms. Increasing delay to 23589 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  15545 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 14 ms. Decreasing delay to 2014 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5874 ms. Increasing delay to 17622 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 24353 ms to process. Increasing delay to 6000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  27563 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 3922 ms to process. Increasing delay to 6000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7658 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 12 ms. Decreasing delay to 2012 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7311 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1210 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6469 ms. Increasing delay to 19407 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 14061 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4476 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1293 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7356 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1299 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1024 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 9 ms. Decreasing delay to 2009 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4574 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1043 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1028 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7817 ms. Increasing delay to 23451 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6468 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1077 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6210 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1141 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1540 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1189 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5614 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6 ms. Decreasing delay to 2006 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5992 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2250 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 10650 ms. Increasing delay to 31950 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6784 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5477 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4009 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6064 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1322 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 13 ms. Decreasing delay to 2013 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4677 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7757 ms. Increasing delay to 23271 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6758 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1028 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4981 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1013 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2813 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 9 ms. Decreasing delay to 2009 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4795 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1285 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5031 ms. Increasing delay to 15093 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1693 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6069 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5865 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 10 ms. Decreasing delay to 2010 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1003 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4060 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5803 ms. Increasing delay to 17409 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1421 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7004 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 10 ms. Decreasing delay to 2010 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4741 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6303 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5145 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 12640 ms. Increasing delay to 37920 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1019 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6820 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1012 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1283 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1054 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2424 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1440 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1192 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1279 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1183 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1453 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6122 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 9 ms. Decreasing delay to 2009 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5328 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 13511 ms. Increasing delay to 40533 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  9728 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1520 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1051 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1307 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4281 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4769 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1455 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1013 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5647 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2154 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4 ms. Decreasing delay to 2004 ms.
// WARNING: HTimer (WrapperUtils Delayed Delete Timer) is taking 1175ms to process. Increasing delay to 2000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1242 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1909 ms. Increasing delay to 5727 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  35366 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/15/20, 7:33:50 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1381 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1195 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1144 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4230 ms. Increasing delay to 12690 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1645 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 29 ms. Decreasing delay to 2029 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5781 ms. Increasing delay to 17343 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6046 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 6502 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 18 ms. Decreasing delay to 2018 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1345 ms. Increasing delay to 4035 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2298 ms to process. Increasing delay to 5000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1027 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1322 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2569 ms to process. Increasing delay to 6000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3192 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2790 ms. Increasing delay to 8370 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6638 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1260 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  25284 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/15/20, 8:03:41 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/15/20, 8:33:17 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/15/20, 9:03:17 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/15/20, 9:33:18 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/15/20, 10:03:18 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/15/20, 10:33:18 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/15/20, 11:03:19 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/15/20, 11:33:19 PM ART
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 98 ms. Decreasing delay to 2098 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/16/20, 12:03:19 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/16/20, 12:33:20 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/16/20, 1:03:20 AM ART
// WARNING: HEventQueue.dispatchEvent() is taking  26431881 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1428 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/16/20, 8:29:56 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/16/20, 8:59:53 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/16/20, 9:29:53 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/16/20, 9:59:53 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/16/20, 10:29:54 AM ART
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1203 ms. Increasing delay to 3609 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3096 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7957 ms. Increasing delay to 23871 ms.
// WARNING: HTimer (StateMonitor Timer) is taking 1431ms to process. Increasing delay to 5000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1440 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 611 ms. Decreasing delay to 2611 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1373 ms. Increasing delay to 4119 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3333 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 8046 ms. Increasing delay to 24138 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1147 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 173 ms. Decreasing delay to 2173 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1760 ms. Increasing delay to 5280 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  17594 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/16/20, 11:00:19 AM ART
// WARNING: HTimer (ActiveMsgMonitor Process Messages Timer) is taking 829ms to process. Increasing delay to 3000 ms.
// WARNING: HTimer (FileMgr Design Graph Update Timer) is taking 423ms to process. Increasing delay to 3000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  10071 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 12001 ms. Increasing delay to 36003 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 778 ms. Decreasing delay to 2778 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2651 ms. Increasing delay to 7953 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6171 ms. Increasing delay to 18513 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5573 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 310 ms. Decreasing delay to 2310 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1310 ms. Increasing delay to 3930 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2981 ms. Increasing delay to 8943 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 3071 ms to process. Increasing delay to 6000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 3123 ms to process. Increasing delay to 6000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6340 ms. Increasing delay to 19020 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 3106 ms to process. Increasing delay to 4000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 51 ms. Decreasing delay to 2051 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1086 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6121 ms. Increasing delay to 18363 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5171 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3377 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3230 ms. Increasing delay to 9690 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2678 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1328 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2264 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 8036 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 31 ms. Decreasing delay to 2031 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4922 ms. Increasing delay to 14766 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6839 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 246 ms. Decreasing delay to 2246 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 20844 ms. Increasing delay to 62532 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  15449 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 16327 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2857 ms to process. Increasing delay to 6000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1007 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5757 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5751 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 197 ms. Decreasing delay to 2197 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1413 ms. Increasing delay to 4239 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 9514 ms. Increasing delay to 28542 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  8005 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 39 ms. Decreasing delay to 2039 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1831 ms. Increasing delay to 5493 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3208 ms. Increasing delay to 9624 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1045 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1886 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1159 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1160 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1531 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1122 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1036 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7399 ms. Increasing delay to 22197 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1454 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 12958 ms. Increasing delay to 38874 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1021 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1231 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1043 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2988 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 3102 ms to process. Increasing delay to 5000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 4395 ms to process. Increasing delay to 7000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 4395 ms to process. Increasing delay to 7000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 4403 ms to process. Increasing delay to 7000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3141 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1125 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1309 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2755 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5198 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1106 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2902 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5031 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1137 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1828 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1163 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1674 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2083 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1523 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 272 ms. Decreasing delay to 2272 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4819 ms. Increasing delay to 14457 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1786 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1174 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1127 ms. Decreasing delay to 3127 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3880 ms. Increasing delay to 11640 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1118 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 118 ms. Decreasing delay to 2118 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1399 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1298 ms. Increasing delay to 3894 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1090 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 6321 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6579 ms. Increasing delay to 19737 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1105 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1258 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3255 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2295 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1026 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1227 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1301 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1123 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1173 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1394 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1181 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1897 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4397 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 10849 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1855 ms. Decreasing delay to 3855 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6265 ms. Increasing delay to 18795 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2078 ms. Increasing delay to 6234 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 11316 ms. Increasing delay to 33948 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5163 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1823 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 3897 ms to process. Increasing delay to 7000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 50 ms. Decreasing delay to 2050 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1200 ms. Increasing delay to 3600 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2287 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4022 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4493 ms. Increasing delay to 13479 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 7803 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1223 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1199 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1037 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 468 ms. Decreasing delay to 2468 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1021 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1142 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1490 ms. Increasing delay to 4470 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1973 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1201 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6052 ms. Increasing delay to 18156 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 10391 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6382 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/16/20, 11:30:24 AM ART
// WARNING: HEventQueue.dispatchEvent() is taking  10948 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 9 ms. Decreasing delay to 2009 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1201 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5195 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1727 ms. Increasing delay to 5181 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3386 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1055 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1622 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1250 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1052 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1027 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5963 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4113 ms. Increasing delay to 12339 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 87 ms. Decreasing delay to 2087 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1919 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 372 ms. Decreasing delay to 2372 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2526 ms. Increasing delay to 7578 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1133 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1407 ms. Increasing delay to 4221 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2866 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1048 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3796 ms. Increasing delay to 11388 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1169 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 50 ms. Decreasing delay to 2050 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1018 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1022 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1142 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6018 ms. Increasing delay to 18054 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1022 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1108 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1261 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2627 ms. Increasing delay to 7881 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1103 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1039 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 699 ms. Decreasing delay to 2699 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1722 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3387 ms. Increasing delay to 10161 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 125 ms. Decreasing delay to 2125 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2266 ms. Increasing delay to 6798 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1025 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2238 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3457 ms. Increasing delay to 10371 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 53 ms. Decreasing delay to 2053 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1099 ms. Increasing delay to 3297 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3713 ms. Increasing delay to 11139 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 434 ms. Decreasing delay to 2434 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1326 ms. Increasing delay to 3978 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3252 ms. Increasing delay to 9756 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1081 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1181 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1185 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1052 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1147 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6690 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 8628 ms. Increasing delay to 25884 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  12415 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3945 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 27002 ms. Increasing delay to 81006 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1362 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1004 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1119 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1597 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 6891 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3727 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1639 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 9519 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6474 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 10377 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 10 ms. Decreasing delay to 2010 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1033 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2227 ms. Increasing delay to 6681 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1462 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3950 ms. Increasing delay to 11850 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1191 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 15 ms. Decreasing delay to 2015 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1419 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 11792 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1210 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 6944 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3620 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1372 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2824 ms. Increasing delay to 8472 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5751 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1596 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2399 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1196 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1555 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1838 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1107 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1019 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 15197 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 5488 ms to process. Increasing delay to 7000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 15470 ms. Increasing delay to 46410 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 9960 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1073 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1126 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1176 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1194 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1040 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 4401 ms to process. Increasing delay to 8000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1170 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1030 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1093 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1820 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1061 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2737 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 82 ms. Decreasing delay to 2082 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1515 ms. Increasing delay to 4545 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 576 ms. Decreasing delay to 2576 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6194 ms. Increasing delay to 18582 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1058 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1280 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1779 ms. Decreasing delay to 3779 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1073 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1202 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1380 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1064 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3706 ms. Increasing delay to 11118 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5120 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6745 ms. Increasing delay to 20235 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 6543 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1365 ms. Decreasing delay to 3365 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4475 ms. Increasing delay to 13425 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 55 ms. Decreasing delay to 2055 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 3666 ms to process. Increasing delay to 7000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6978 ms. Increasing delay to 20934 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1028 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2979 ms. Increasing delay to 8937 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 317 ms. Decreasing delay to 2317 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2147 ms. Increasing delay to 6441 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1181 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 9027 ms. Increasing delay to 27081 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1370 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 23 ms. Decreasing delay to 2023 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2030 ms. Increasing delay to 6090 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5328 ms. Increasing delay to 15984 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 9 ms. Decreasing delay to 2009 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  9525 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/16/20, 12:00:12 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1258 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/16/20, 12:30:04 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/16/20, 1:00:05 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1228 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5582 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7758 ms. Increasing delay to 23274 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 8267 ms. Increasing delay to 24801 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 10 ms. Decreasing delay to 2010 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 64 ms. Decreasing delay to 2064 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2161 ms. Increasing delay to 6483 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  9040 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/16/20, 1:30:14 PM ART
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3875 ms. Increasing delay to 11625 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 71 ms. Decreasing delay to 2071 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1856 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1664 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2486 ms. Increasing delay to 7458 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1183 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1214 ms. Increasing delay to 3642 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2042 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1310 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4249 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4248 ms. Increasing delay to 12744 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1196 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 4718 ms to process. Increasing delay to 8000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 696 ms. Decreasing delay to 2696 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1125 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2859 ms. Increasing delay to 8577 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 10068 ms. Increasing delay to 30204 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1428 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1267 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1767 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 7073 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7072 ms. Increasing delay to 21216 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 6097 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 364 ms. Decreasing delay to 2364 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 971 ms. Decreasing delay to 2971 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2934 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 12809 ms. Increasing delay to 38427 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3883 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4158 ms. Increasing delay to 12474 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 318 ms. Decreasing delay to 2318 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1450 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 295 ms. Decreasing delay to 2295 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1480 ms. Increasing delay to 4440 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3015 ms. Increasing delay to 9045 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3072 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7781 ms. Increasing delay to 23343 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1391 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4713 ms. Increasing delay to 14139 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1162 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  15386 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 18383 ms. Increasing delay to 55149 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 235 ms. Decreasing delay to 2235 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/16/20, 2:00:35 PM ART
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2889 ms. Increasing delay to 8667 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1102 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1168 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3003 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1091 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1191 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 297 ms. Decreasing delay to 2297 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1751 ms. Increasing delay to 5253 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2960 ms. Increasing delay to 8880 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3385 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1441 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1351 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1489 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1013 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5114 ms. Increasing delay to 15342 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 9684 ms. Increasing delay to 29052 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 457 ms. Decreasing delay to 2457 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 144 ms. Decreasing delay to 2144 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1874 ms. Increasing delay to 5622 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1278 ms. Increasing delay to 3834 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5212 ms. Increasing delay to 15636 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1992 ms. Increasing delay to 5976 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 90 ms. Decreasing delay to 2090 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1389 ms. Increasing delay to 4167 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6037 ms. Increasing delay to 18111 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3923 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5936 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4421 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 9360 ms. Increasing delay to 28080 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6379 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 19873 ms. Increasing delay to 59619 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3896 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 10 ms. Decreasing delay to 2010 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  10683 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1238 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1055 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3652 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6641 ms. Increasing delay to 19923 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 7139 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3957 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1156 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1237 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1279 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5078 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1845 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 11 ms. Decreasing delay to 2011 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5067 ms. Increasing delay to 15201 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4779 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1411 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1118 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 9 ms. Decreasing delay to 2009 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4675 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7904 ms. Increasing delay to 23712 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5631 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4022 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1178 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1156 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1105 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1154 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1345 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4290 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 8309 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7 ms. Decreasing delay to 2007 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  8121 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1048 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1358 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1128 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5012 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1362 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 10220 ms. Increasing delay to 30660 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7196 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2055 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1442 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1344 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6654 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1246 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1629 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5755 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1933 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1303 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1186 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 12 ms. Decreasing delay to 2012 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5961 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1774 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 8675 ms. Increasing delay to 26025 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4914 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1145 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5057 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1580 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1215 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6461 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1057 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1338 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 13 ms. Decreasing delay to 2013 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 10703 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5834 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1374 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3575 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1451 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1235 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 13006 ms. Increasing delay to 39018 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  13147 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1504 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4857 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1039 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1070 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5229 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1239 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1166 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1162 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2989 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1407 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1237 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 12 ms. Decreasing delay to 2012 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1824 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1546 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5224 ms. Increasing delay to 15672 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4716 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1016 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1074 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6210 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1026 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1307 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 12 ms. Decreasing delay to 2012 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7289 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3096 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1658 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 13416 ms. Increasing delay to 40248 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3946 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1200 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1288 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1326 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4082 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1256 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5080 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 8288 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 8288 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7501 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1033 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1166 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1106 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1269 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1564 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 11 ms. Decreasing delay to 2011 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1499 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1176 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3056 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1314 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6753 ms. Increasing delay to 20259 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1378 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1173 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5120 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2187 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1593 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2967 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1212 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 12 ms. Decreasing delay to 2012 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1191 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7422 ms. Increasing delay to 22266 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4372 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6382 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4559 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 13 ms. Decreasing delay to 2013 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 8336 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2857 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7137 ms. Increasing delay to 21411 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4843 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6577 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1021 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3775 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 12 ms. Decreasing delay to 2012 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5436 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5058 ms. Increasing delay to 15174 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4625 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 10622 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5338 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 15 ms. Decreasing delay to 2015 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5337 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4706 ms. Increasing delay to 14118 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5612 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1220 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1095 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1096 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 12 ms. Decreasing delay to 2012 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5246 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1560 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7825 ms. Increasing delay to 23475 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5102 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1036 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6613 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3725 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 11 ms. Decreasing delay to 2011 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6243 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4086 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6269 ms. Increasing delay to 18807 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1142 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 13 ms. Decreasing delay to 2013 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7424 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3848 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 9726 ms. Increasing delay to 29178 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3535 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 9 ms. Decreasing delay to 2009 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 184 ms. Decreasing delay to 2184 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1279 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1201 ms. Increasing delay to 3603 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1141 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1226 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1735 ms. Increasing delay to 5205 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1208 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 8081 ms. Increasing delay to 24243 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2861 ms. Increasing delay to 8583 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1050 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 656 ms. Decreasing delay to 2656 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1979 ms. Increasing delay to 5937 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1171 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 10783 ms. Increasing delay to 32349 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6391 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1219 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 325 ms. Decreasing delay to 2325 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1917 ms. Increasing delay to 5751 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3657 ms. Increasing delay to 10971 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2365 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1029 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1168 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1009 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1392 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6787 ms. Increasing delay to 20361 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 183 ms. Decreasing delay to 2183 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2847 ms. Increasing delay to 8541 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  9900 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1061 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/16/20, 2:30:23 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1423 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1277 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1878 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1013 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2379 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1097 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1406 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4891 ms. Increasing delay to 14673 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1890 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 3014 ms to process. Increasing delay to 7000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1080 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1105 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1224 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1362 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4764 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1031 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1073 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1315 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4303 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7692 ms. Increasing delay to 23076 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1391 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1093 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2065 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2827 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1075 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 334 ms. Decreasing delay to 2334 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3010 ms. Increasing delay to 9030 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3151 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5212 ms. Increasing delay to 15636 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1166 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 679 ms. Decreasing delay to 2679 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3813 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4610 ms. Increasing delay to 13830 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 948 ms. Decreasing delay to 2948 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4298 ms. Increasing delay to 12894 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 358 ms. Decreasing delay to 2358 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1770 ms. Increasing delay to 5310 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2663 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 9182 ms. Increasing delay to 27546 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1013 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1805 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 564 ms. Decreasing delay to 2564 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  8342 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/16/20, 3:00:21 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/16/20, 3:30:17 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/16/20, 4:00:17 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/16/20, 4:30:18 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/16/20, 5:00:18 PM ART
// Elapsed time: 334874 seconds
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("alu_control.v", 11, 166); // ch (w, cr)
selectCodeEditor("alu_control.v", 190, 259); // ch (w, cr)
// Elapsed time: 52 seconds
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
selectCodeEditor("alu_control.v", 112, 133); // ch (w, cr)
// Elapsed time: 12 seconds
selectCodeEditor("alu_control.v", 270, 121); // ch (w, cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
// Elapsed time: 20 seconds
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
selectCodeEditor("IFETCH.v", 176, 213); // ch (w, cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("IFETCH.v", 242, 82); // ch (w, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, CONTROL_SIGNALS (CONTROL_SIGNALS.v), ALU_CONTROL : ALU_CONTROL (ALU_CONTROL.v)]", 3, false); // B (F, cr)
// Elapsed time: 10 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, CONTROL_SIGNALS (CONTROL_SIGNALS.v), ALU_CONTROL : ALU_CONTROL (ALU_CONTROL.v)]", 3, false); // B (F, cr)
selectCodeEditor("IFETCH.v", 209, 76); // ch (w, cr)
selectCodeEditor("IFETCH.v", 79, 76); // ch (w, cr)
selectCodeEditor("IFETCH.v", 100, 63); // ch (w, cr)
selectCodeEditor("IFETCH.v", 182, 97); // ch (w, cr)
selectCodeEditor("IFETCH.v", 155, 81); // ch (w, cr)
selectCodeEditor("IFETCH.v", 42, 93); // ch (w, cr)
selectCodeEditor("IFETCH.v", 42, 93); // ch (w, cr)
selectCodeEditor("IFETCH.v", 56, 127); // ch (w, cr)
selectCodeEditor("IFETCH.v", 86, 93); // ch (w, cr)
selectCodeEditor("IFETCH.v", 96, 92); // ch (w, cr)
selectCodeEditor("IFETCH.v", 139, 127); // ch (w, cr)
// Elapsed time: 20 seconds
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, CONTROL_SIGNALS (CONTROL_SIGNALS.v), ALU_CONTROL : ALU_CONTROL (ALU_CONTROL.v)]", 3, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, CONTROL_SIGNALS (CONTROL_SIGNALS.v), ALU_CONTROL : ALU_CONTROL (ALU_CONTROL.v)]", 3, false, false, false, false, false, true); // B (F, cr) - Double Click
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("alu_control.v", 278, 90); // ch (w, cr)
// PAPropertyPanels.initPanels (registers.v) elapsed time: 0.2s
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_registers : registers (registers.v)]", 7, false); // B (F, cr)
// Tcl Message: current_project {Tp Final 2020} 
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_registers : registers (registers.v)]", 7, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_registers : registers (registers.v)]", 7, false, false, false, false, false, true); // B (F, cr) - Double Click
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v)]", 5, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_registers : registers (registers.v)]", 7, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v)]", 4, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v)]", 5, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_registers : registers (registers.v)]", 7, false); // B (F, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
// Elapsed time: 11 seconds
selectCodeEditor("registers.v", 26, 112); // ch (w, cr)
selectCodeEditor("registers.v", 116, 210); // ch (w, cr)
selectCodeEditor("registers.v", 116, 210, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 13 seconds
selectCodeEditor("registers.v", 49, 180); // ch (w, cr)
selectCodeEditor("registers.v", 111, 233); // ch (w, cr)
selectCodeEditor("registers.v", 111, 233, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 95, 179); // ch (w, cr)
selectCodeEditor("registers.v", 81, 334); // ch (w, cr)
selectCodeEditor("registers.v", 79, 215); // ch (w, cr)
selectCodeEditor("registers.v", 112, 264); // ch (w, cr)
selectCodeEditor("registers.v", 302, 281); // ch (w, cr)
selectCodeEditor("registers.v", 302, 281, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 334, 300); // ch (w, cr)
selectCodeEditor("registers.v", 334, 300, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 325, 274); // ch (w, cr)
selectCodeEditor("registers.v", 326, 274, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 330, 300); // ch (w, cr)
selectCodeEditor("registers.v", 330, 300, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 124, 279); // ch (w, cr)
selectCodeEditor("registers.v", 124, 279, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 136, 303); // ch (w, cr)
selectCodeEditor("registers.v", 136, 303, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 134, 254); // ch (w, cr)
selectCodeEditor("registers.v", 191, 235); // ch (w, cr)
selectCodeEditor("registers.v", 200, 265); // ch (w, cr)
selectCodeEditor("registers.v", 200, 265, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 118, 285); // ch (w, cr)
selectCodeEditor("registers.v", 118, 285, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 322, 282); // ch (w, cr)
selectCodeEditor("registers.v", 196, 285); // ch (w, cr)
selectCodeEditor("registers.v", 139, 298); // ch (w, cr)
selectCodeEditor("registers.v", 164, 211); // ch (w, cr)
selectCodeEditor("registers.v", 137, 280); // ch (w, cr)
selectCodeEditor("registers.v", 137, 280, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 213, 251); // ch (w, cr)
selectCodeEditor("registers.v", 213, 251, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 112, 109); // ch (w, cr)
selectCodeEditor("registers.v", 112, 109); // ch (w, cr)
selectCodeEditor("registers.v", 64, 244); // ch (w, cr)
selectCodeEditor("registers.v", 64, 244, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 89, 245); // ch (w, cr)
selectCodeEditor("registers.v", 89, 245, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 121, 58); // ch (w, cr)
selectCodeEditor("registers.v", 121, 58, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 125, 37); // ch (w, cr)
selectCodeEditor("registers.v", 125, 37, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 205, 366); // ch (w, cr)
selectCodeEditor("registers.v", 205, 366, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 249, 383); // ch (w, cr)
selectCodeEditor("registers.v", 249, 383, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 330, 385); // ch (w, cr)
selectCodeEditor("registers.v", 317, 396); // ch (w, cr)
selectCodeEditor("registers.v", 306, 382); // ch (w, cr)
selectCodeEditor("registers.v", 289, 382); // ch (w, cr)
selectCodeEditor("registers.v", 296, 384); // ch (w, cr)
selectCodeEditor("registers.v", 269, 400); // ch (w, cr)
selectCodeEditor("registers.v", 268, 382); // ch (w, cr)
selectCodeEditor("registers.v", 308, 381); // ch (w, cr)
// Elapsed time: 23 seconds
selectCodeEditor("registers.v", 298, 282); // ch (w, cr)
selectCodeEditor("registers.v", 146, 281); // ch (w, cr)
selectCodeEditor("registers.v", 146, 281); // ch (w, cr)
selectCodeEditor("registers.v", 250, 280); // ch (w, cr)
selectCodeEditor("registers.v", 250, 280, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 120, 297); // ch (w, cr)
// Elapsed time: 28 seconds
selectCodeEditor("registers.v", 153, 266); // ch (w, cr)
selectCodeEditor("registers.v", 150, 265, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 155, 265); // ch (w, cr)
selectCodeEditor("registers.v", 155, 265, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 88 seconds
selectCodeEditor("registers.v", 115, 92); // ch (w, cr)
selectCodeEditor("registers.v", 115, 92, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 114, 112); // ch (w, cr)
selectCodeEditor("registers.v", 114, 112, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 114, 95); // ch (w, cr)
selectCodeEditor("registers.v", 114, 95, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 120, 107); // ch (w, cr)
selectCodeEditor("registers.v", 120, 107, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 125, 106); // ch (w, cr)
selectCodeEditor("registers.v", 125, 106); // ch (w, cr)
selectCodeEditor("registers.v", 125, 108); // ch (w, cr)
selectCodeEditor("registers.v", 125, 108, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 264, 380); // ch (w, cr)
selectCodeEditor("registers.v", 242, 384); // ch (w, cr)
selectCodeEditor("registers.v", 242, 384, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 199, 364); // ch (w, cr)
selectCodeEditor("registers.v", 199, 364, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 236, 385); // ch (w, cr)
selectCodeEditor("registers.v", 236, 385, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 206, 362); // ch (w, cr)
selectCodeEditor("registers.v", 206, 362, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 303, 383); // ch (w, cr)
selectCodeEditor("registers.v", 314, 389); // ch (w, cr)
selectCodeEditor("registers.v", 314, 389, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 150, 275); // ch (w, cr)
selectCodeEditor("registers.v", 149, 275, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 155, 259); // ch (w, cr)
selectCodeEditor("registers.v", 155, 259, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 202, 260); // ch (w, cr)
selectCodeEditor("registers.v", 202, 260, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 244, 278); // ch (w, cr)
selectCodeEditor("registers.v", 244, 278, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 204, 282); // ch (w, cr)
selectCodeEditor("registers.v", 70, 277); // ch (w, cr)
selectCodeEditor("registers.v", 152, 279); // ch (w, cr)
selectCodeEditor("registers.v", 154, 278, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 194, 279); // ch (w, cr)
selectCodeEditor("registers.v", 65, 281); // ch (w, cr)
selectCodeEditor("registers.v", 91, 281); // ch (w, cr)
selectCodeEditor("registers.v", 71, 282); // ch (w, cr)
selectCodeEditor("registers.v", 224, 281); // ch (w, cr)
selectCodeEditor("registers.v", 252, 280); // ch (w, cr)
selectCodeEditor("registers.v", 252, 280, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 307, 284); // ch (w, cr)
selectCodeEditor("registers.v", 272, 277); // ch (w, cr)
selectCodeEditor("registers.v", 215, 283); // ch (w, cr)
selectCodeEditor("registers.v", 310, 282); // ch (w, cr)
selectCodeEditor("registers.v", 310, 282, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 315, 284); // ch (w, cr)
selectCodeEditor("registers.v", 315, 284, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 70, 282); // ch (w, cr)
selectCodeEditor("registers.v", 180, 275); // ch (w, cr)
selectCodeEditor("registers.v", 180, 275, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 327, 277); // ch (w, cr)
selectCodeEditor("registers.v", 327, 277); // ch (w, cr)
// Elapsed time: 12 seconds
selectCodeEditor("registers.v", 313, 284); // ch (w, cr)
// Elapsed time: 459 seconds
selectCodeEditor("registers.v", 65, 286); // ch (w, cr)
selectCodeEditor("registers.v", 212, 287); // ch (w, cr)
selectCodeEditor("registers.v", 217, 282); // ch (w, cr)
selectCodeEditor("registers.v", 364, 276); // ch (w, cr)
selectCodeEditor("registers.v", 457, 245); // ch (w, cr)
selectCodeEditor("registers.v", 0, 126); // ch (w, cr)
typeControlKey((HResource) null, "registers.v", 'c'); // ch (w, cr)
selectCodeEditor("registers.v", 91, 126); // ch (w, cr)
// Elapsed time: 23 seconds
selectCodeEditor("registers.v", 114, 282); // ch (w, cr)
selectCodeEditor("registers.v", 114, 282, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 123, 295); // ch (w, cr)
selectCodeEditor("registers.v", 123, 295, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 158, 351); // ch (w, cr)
selectCodeEditor("registers.v", 158, 351, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 324, 349); // ch (w, cr)
selectCodeEditor("registers.v", 435, 350); // ch (w, cr)
selectCodeEditor("registers.v", 87, 186); // ch (w, cr)
selectCodeEditor("registers.v", 428, 192); // ch (w, cr)
selectCodeEditor("registers.v", 123, 193); // ch (w, cr)
selectCodeEditor("registers.v", 114, 126); // ch (w, cr)
selectCodeEditor("registers.v", 114, 126, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 135, 232); // ch (w, cr)
selectCodeEditor("registers.v", 135, 232, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 449, 132); // ch (w, cr)
selectCodeEditor("registers.v", 217, 278); // ch (w, cr)
selectCodeEditor("registers.v", 150, 24); // ch (w, cr)
selectCodeEditor("registers.v", 150, 24, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 153, 55); // ch (w, cr)
selectCodeEditor("registers.v", 153, 55, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("registers.v", 133, 22); // ch (w, cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectButton(PAResourceCommand.PACommandNames_ADD_SOURCES, "Sources_add_sources"); // E (f, cr)
// Run Command: PAResourceCommand.PACommandNames_ADD_SOURCES
// c (cr): Add Sources: addNotify
selectButton("NEXT", "Next >"); // JButton (j, c)
selectButton(PAResourceQtoS.SrcChooserPanel_CREATE_FILE, "Create File"); // a (E, c)
// F (c): Create Source File: addNotify
// Elapsed time: 13 seconds
setText(PAResourceAtoD.CreateSrcFileDialog_FILE_NAME, "RW_REGISTERS"); // ac (Q, F)
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (F)
dismissDialog("Create Source File"); // F (c)
selectButton("FINISH", "Finish"); // JButton (j, c)
// 'h' command handler elapsed time: 21 seconds
dismissDialog("Add Sources"); // c (cr)
// Tcl Message: current_project MIPS_2020 
// bB (cr):  Add Sources  : addNotify
// Tcl Message: close [ open C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/RW_REGISTERS.v w ] 
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Tcl Message: add_files C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/RW_REGISTERS.v 
// I (cr): Define Module: addNotify
dismissDialog("Add Sources"); // bB (cr)
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (I)
// TclEventType: FILE_SET_CHANGE
selectButton("OptionPane.button", "Yes"); // JButton (A, H)
dismissDialog("Define Module"); // I (cr)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Tcl Message: update_compile_order -fileset sources_1 
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_registers : registers (registers.v)]", 7, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_registers : registers (registers.v)]", 7, false, false, false, false, false, true); // B (F, cr) - Double Click
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("registers.v", 1, 182); // ch (w, cr)
typeControlKey((HResource) null, "registers.v", 'c'); // ch (w, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, RW_REGISTERS (RW_REGISTERS.v)]", 4, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, RW_REGISTERS (RW_REGISTERS.v)]", 4, false, false, false, false, false, true); // B (F, cr) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, RW_REGISTERS (RW_REGISTERS.v)]", 4, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, RW_REGISTERS (RW_REGISTERS.v)]", 4, false, false, false, false, false, true); // B (F, cr) - Double Click
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("RW_REGISTERS.v", 4, 361); // ch (w, cr)
typeControlKey((HResource) null, "RW_REGISTERS.v", 'v'); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 77, 160); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 77, 160, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "RW_REGISTERS.v", 'c'); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 95, 175); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 95, 175, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "RW_REGISTERS.v", 'v'); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 153, 163); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 248, 221); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 94, 177); // ch (w, cr)
// Elapsed time: 11 seconds
selectCodeEditor("RW_REGISTERS.v", 99, 243); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "ALU_CONTROL.v", 5); // i (h, cr)
selectCodeEditor("ALU_CONTROL.v", 148, 315); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 148, 315, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ALU_CONTROL.v", 132, 334); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 132, 333, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ALU_CONTROL.v", 170, 365); // ch (w, cr)
selectCodeEditor("ALU_CONTROL.v", 170, 365, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "RW_REGISTERS.v", 6); // i (h, cr)
selectCodeEditor("RW_REGISTERS.v", 65, 233); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 83, 244); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 83, 233); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 83, 233, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 96, 249); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 96, 249, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 68, 247); // ch (w, cr)
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 83 MB. Current time: 6/16/20, 5:30:18 PM ART
// Elapsed time: 17 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "i_regWrite", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("RW_REGISTERS.v", 132, 297); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 54, 109); // ch (w, cr)
// Elapsed time: 33 seconds
selectCodeEditor("RW_REGISTERS.v", 89, 226); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 56, 59); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 55, 74); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 53, 178); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 90, 171); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 58, 261); // ch (w, cr)
// Elapsed time: 14 seconds
selectCodeEditor("RW_REGISTERS.v", 118, 196); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 118, 196, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 192, 212); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 192, 212, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 191, 214); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 200, 233); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 197, 248); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 133, 208); // ch (w, cr)
// Elapsed time: 18 seconds
selectComboBox("FindAndReplaceDialog.cr_Find what:", "i_readRegister1", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 17 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "i_readRegister1", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 16 seconds
selectCodeEditor("RW_REGISTERS.v", 28, 213); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 143, 212); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 143, 212, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 10 seconds
selectCodeEditor("RW_REGISTERS.v", 282, 179); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 280, 142); // ch (w, cr)
// Elapsed time: 11 seconds
selectCodeEditor("RW_REGISTERS.v", 206, 138); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 206, 138, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 144, 208); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 144, 208, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 214, 115); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 214, 115, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 127, 293); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 127, 293, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 136, 282); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 136, 282, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 139, 299); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 139, 299, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 39, 167); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 39, 167, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 64, 273); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 26, 264); // ch (w, cr)
// Elapsed time: 53 seconds
selectCodeEditor("RW_REGISTERS.v", 185, 197); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 183, 196, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 172, 170); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 172, 170, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 10 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "i_readRegister2", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("RW_REGISTERS.v", 309, 174); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 176, 242); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 176, 242, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 14 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "i_writeRegister", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("RW_REGISTERS.v", 191, 339); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 186, 314); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 186, 314, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 28 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "i_writeData", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("RW_REGISTERS.v", 284, 330); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 140, 158); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 233, 166); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 242, 168); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 165, 213); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 203, 161); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 203, 161, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 117, 146); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 117, 146, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 104, 162); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 104, 162, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 73, 266); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 185, 264); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 185, 264, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 204, 280); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 204, 280, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 211, 298); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 211, 294, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 222, 313); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 222, 313, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 167, 258); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 167, 258, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 218, 277); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 218, 277, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 275, 112); // ch (w, cr)
// Elapsed time: 41 seconds
selectCodeEditor("RW_REGISTERS.v", 306, 112); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 253, 134); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 169, 160); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 169, 160, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 196, 208); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 202, 193); // ch (w, cr)
// Elapsed time: 140 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_wireReadData1", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("RW_REGISTERS.v", 283, 152); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 24, 245); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 223, 245); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 223, 245, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 131, 248); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 131, 248, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 27, 247); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 226, 287); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 355, 248); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 355, 248, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 10 seconds
selectCodeEditor("RW_REGISTERS.v", 23, 244); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 36, 308); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 28, 297); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 143, 294); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 143, 294, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 277, 297); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 277, 297, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 140, 298); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 140, 298, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 244, 293); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 243, 293, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 373, 301); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 373, 301, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 267, 297); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 267, 297); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 369, 299); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 369, 299, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 144, 294); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 144, 294, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 261, 197); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 261, 197, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 351, 193); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 351, 193, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 261, 245); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 261, 245, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 361, 247); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 361, 247, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 154, 57); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 154, 57, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 160, 61); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 160, 61, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 161, 77); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 161, 77, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 168, 75); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 168, 75, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 103, 90); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 103, 90); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 103, 90); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 103, 90); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 201, 350); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 269, 352); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 269, 352, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 391, 245); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 391, 245, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 23 seconds
selectCodeEditor("RW_REGISTERS.v", 411, 297); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 410, 299); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 117, 78); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 117, 78, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 307, 400); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 201, 347); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 286, 343); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 202, 348); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 229, 344); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 346, 350); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 346, 350, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 10 seconds
selectCodeEditor("RW_REGISTERS.v", 345, 345); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 345, 345, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 379, 346); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 379, 346, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 157, 140); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 157, 140, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 17 seconds
selectCodeEditor("RW_REGISTERS.v", 362, 347); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 362, 347, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 184 seconds
selectCodeEditor("RW_REGISTERS.v", 262, 156); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 195, 188); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 195, 188, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 347, 345); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 347, 345, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 107, 213); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 107, 213, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 118, 228); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 118, 228, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 166, 233); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 166, 233, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 157, 208); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 157, 208, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 161, 214); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 161, 214, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 169, 228); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 169, 228, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 104, 45); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 104, 45, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 372, 348); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 372, 348, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 105, 354); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 105, 354, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 127, 350); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 127, 350, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 181, 351); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 181, 351, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 228, 352); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 224, 349); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 166, 353); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 139, 364); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 210, 364); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 210, 364, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 329, 362); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 329, 362, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 354, 381); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 354, 381, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 355, 365); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 355, 365, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 353, 386); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 353, 386, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 353, 368); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 353, 368, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 71, 142); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 337, 366); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 337, 366, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 348, 381); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 348, 381, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 351, 355); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 351, 355, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 354, 362); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 354, 362, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 13 seconds
selectCodeEditor("RW_REGISTERS.v", 178, 143); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 178, 143, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 64, 145); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 216, 145); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 114, 143); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 114, 143, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 249, 140); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 249, 140, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 149, 140); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 149, 140, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 256, 363); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 256, 363, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 339, 364); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 339, 364, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 206, 361); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 206, 361, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 326, 366); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 327, 367, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 360, 383); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 360, 383, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 333, 374); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 333, 374, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 336, 368); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 336, 368, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 258, 366); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 258, 366, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 125, 196); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 69, 192); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 299, 194); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 373, 195); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 161, 212); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 71, 148); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 338, 369); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 338, 369, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 347, 380); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 347, 380, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 352, 142); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 312, 144); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 312, 144, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 220, 147); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 364, 140); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 323, 182); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 360, 247); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 360, 247, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 139, 247); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 139, 247, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 341, 246); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 341, 246, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 241, 246); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 202, 248); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 394, 240); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 394, 240, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 204, 251); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 373, 245); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 373, 245, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 271, 245); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 271, 245, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 12 seconds
selectCodeEditor("RW_REGISTERS.v", 158, 117); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 144, 108); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 145, 266); // ch (w, cr)
// Elapsed time: 21 seconds
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
selectComboBox("FindAndReplaceDialog.cr_Find what:", "r_registersMips", -1); // JComboBox (cr, FindAndReplaceDialog)
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
selectButton("FindAndReplaceDialog.cr_Close", "Close"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 33 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "r_registersMips", -1); // JComboBox (cr, FindAndReplaceDialog)
selectCodeEditor("RW_REGISTERS.v", 82, 266); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 191, 263); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 202, 164); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 202, 164, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 64 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "r_dataRegistersMatrix", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("RW_REGISTERS.v", 153, 322); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 222, 302); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 222, 302, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 340, 308); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 61, 311); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 36, 282); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 36, 282, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 255, 313); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 255, 313, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 156, 317); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 156, 317, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 186, 347); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 205, 212); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 205, 212, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 30 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_readData1", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("RW_REGISTERS.v", 224, 228); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 224, 228, false, false, false, false, true); // ch (w, cr) - Double Click
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_readData2", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("RW_REGISTERS.v", 373, 250); // ch (w, cr)
selectButton(RDIResourceCommand.RDICommands_SAVE_FILE, (String) null); // E (f, cr)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, CONTROL_SIGNALS (CONTROL_SIGNALS.v)]", 2, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, CONTROL_SIGNALS (CONTROL_SIGNALS.v)]", 2, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, CONTROL_SIGNALS (CONTROL_SIGNALS.v)]", 2, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
// Elapsed time: 14 seconds
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, CONTROL_SIGNALS (CONTROL_SIGNALS.v)]", 2); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, CONTROL_SIGNALS (CONTROL_SIGNALS.v), ALU_CONTROL : ALU_CONTROL (ALU_CONTROL.v)]", 3, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, RW_REGISTERS (RW_REGISTERS.v)]", 4, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, CONTROL_SIGNALS (CONTROL_SIGNALS.v)]", 2, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, RW_REGISTERS (RW_REGISTERS.v)]", 4, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, CONTROL_SIGNALS (CONTROL_SIGNALS.v)]", 2, true); // B (F, cr) - Node
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_hazard : hazard_detection_unit (hazard_detection_unit.v)]", 8, false); // B (F, cr)
// Tcl Message: current_project {Tp Final 2020} 
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_hazard : hazard_detection_unit (hazard_detection_unit.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_hazard : hazard_detection_unit (hazard_detection_unit.v)]", 8, false, false, false, false, false, true); // B (F, cr) - Double Click
selectCodeEditor("hazard_detection_unit.v", 135, 75); // ch (w, cr)
selectCodeEditor("hazard_detection_unit.v", 135, 75, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("hazard_detection_unit.v", 149, 81); // ch (w, cr)
selectCodeEditor("hazard_detection_unit.v", 160, 79); // ch (w, cr)
typeControlKey((HResource) null, "hazard_detection_unit.v", 'c'); // ch (w, cr)
selectButton(PAResourceCommand.PACommandNames_ADD_SOURCES, "Sources_add_sources"); // E (f, cr)
// Run Command: PAResourceCommand.PACommandNames_ADD_SOURCES
// c (cr): Add Sources: addNotify
selectButton("NEXT", "Next >"); // JButton (j, c)
selectButton(PAResourceQtoS.SrcChooserPanel_CREATE_FILE, "Create File"); // a (E, c)
// F (c): Create Source File: addNotify
// Elapsed time: 15 seconds
setText(PAResourceAtoD.CreateSrcFileDialog_FILE_NAME, "HAZARD_DETECTION"); // ac (Q, F)
// Elapsed time: 85 seconds
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (F)
dismissDialog("Create Source File"); // F (c)
selectButton("FINISH", "Finish"); // JButton (j, c)
// 'h' command handler elapsed time: 104 seconds
dismissDialog("Add Sources"); // c (cr)
// Tcl Message: current_project MIPS_2020 
// Tcl Message: close [ open C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/HAZARD_DETECTION.v w ] 
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// bB (cr):  Add Sources  : addNotify
// Tcl Message: add_files C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/HAZARD_DETECTION.v 
// I (cr): Define Module: addNotify
dismissDialog("Add Sources"); // bB (cr)
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (I)
// TclEventType: FILE_SET_CHANGE
selectButton("OptionPane.button", "Yes"); // JButton (A, H)
dismissDialog("Define Module"); // I (cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_hazard : hazard_detection_unit (hazard_detection_unit.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_hazard : hazard_detection_unit (hazard_detection_unit.v)]", 8, false, false, false, false, false, true); // B (F, cr) - Double Click
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Tcl Message: update_compile_order -fileset sources_1 
selectCodeEditor("hazard_detection_unit.v", 68, 82); // ch (w, cr)
selectCodeEditor("hazard_detection_unit.v", 0, 77); // ch (w, cr)
typeControlKey((HResource) null, "hazard_detection_unit.v", 'c'); // ch (w, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, HAZARD_DETECTION (HAZARD_DETECTION.v)]", 4, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, HAZARD_DETECTION (HAZARD_DETECTION.v)]", 4, false, false, false, false, false, true); // B (F, cr) - Double Click
selectCodeEditor("HAZARD_DETECTION.v", 65, 93); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 62, 108); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 3, 102); // ch (w, cr)
typeControlKey((HResource) null, "HAZARD_DETECTION.v", 'v'); // ch (w, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("HAZARD_DETECTION.v", 111, 112); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 111, 112, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "HAZARD_DETECTION.v", 'c'); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 122, 125); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 122, 125, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "HAZARD_DETECTION.v", 'v'); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 102, 197); // ch (w, cr)
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 86 MB. Current time: 6/16/20, 6:00:19 PM ART
// Elapsed time: 462 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "i_memRead_ID/EX", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("HAZARD_DETECTION.v", 169, 271); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 208, 308); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 165, 180); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 28, 177); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 196, 174); // ch (w, cr)
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
selectCodeEditor("HAZARD_DETECTION.v", 99, 180); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 99, 180, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 20 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "i_memRead_IDEX", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("HAZARD_DETECTION.v", 228, 283); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 223, 328); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 223, 328, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("HAZARD_DETECTION.v", 236, 346); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 236, 346); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 235, 329); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 235, 329, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("HAZARD_DETECTION.v", 323, 331); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 376, 330); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 376, 330, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("HAZARD_DETECTION.v", 375, 329); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 375, 329, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("HAZARD_DETECTION.v", 363, 335); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 363, 335, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("HAZARD_DETECTION.v", 356, 331); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 369, 333); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 369, 333, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("HAZARD_DETECTION.v", 429, 335); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 452, 330); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 452, 330, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("HAZARD_DETECTION.v", 515, 334); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 515, 334, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("HAZARD_DETECTION.v", 586, 334); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 585, 333, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("HAZARD_DETECTION.v", 630, 327); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 122, 328); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 122, 328, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 17 seconds
selectCodeEditor("HAZARD_DETECTION.v", 153, 199); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 153, 199, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 21 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "i_rt_IDEX", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("HAZARD_DETECTION.v", 141, 210); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 141, 210, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 57 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "i_rs_IFID", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("HAZARD_DETECTION.v", 157, 227); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 157, 227, false, false, false, false, true); // ch (w, cr) - Double Click
setText(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "rt_1_2"); // l (aP, cr)
selectCodeEditor("HAZARD_DETECTION.v", 238, 229); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 150, 231); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 150, 231, false, false, false, false, true); // ch (w, cr) - Double Click
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "i_rt_IFID", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("HAZARD_DETECTION.v", 494, 247); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 319, 308); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 259, 336); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 259, 336, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("HAZARD_DETECTION.v", 265, 339); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 254, 335); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 495, 335); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 495, 335, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("HAZARD_DETECTION.v", 489, 329); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 484, 335); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 582, 329); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 392, 332); // ch (w, cr)
// Elapsed time: 52 seconds
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v)]", 1); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, CONTROL_SIGNALS (CONTROL_SIGNALS.v)]", 6, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, CONTROL_SIGNALS (CONTROL_SIGNALS.v)]", 6, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 288, 227); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 288, 227, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 42 seconds
selectCodeEditor("CONTROL_SIGNALS.v", 370, 217); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 294, 232); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 293, 232, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 302, 224); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 302, 224, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 82, 233); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 82, 233, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 333, 228); // ch (w, cr)
// Elapsed time: 22 seconds
selectCodeEditor("CONTROL_SIGNALS.v", 269, 231); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 269, 231); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 274, 232); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 274, 232, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 265, 264); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 265, 264, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 274, 300); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 274, 300, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 271, 234); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 271, 234, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 286, 229); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 252, 230); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 263, 265); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 263, 265, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 279, 296); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 279, 296, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 290, 226); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 290, 226, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 33 seconds
selectCodeEditor("CONTROL_SIGNALS.v", 55, 229); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 55, 229, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 286, 231); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 286, 231, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 261, 262); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 261, 262, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 272, 297); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 272, 297, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 280, 223); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 280, 223, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 91, 75); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 91, 75, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 95, 127); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 95, 127, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 242, 278); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 242, 278, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 92, 273); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 92, 273, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 110, 278); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 110, 278, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 168, 280); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 214, 279); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 215, 278, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 172, 282); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 129, 337); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 129, 337, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 186, 317); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 186, 317, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 193, 324); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 199, 344); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 208, 374); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 209, 345); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 183, 330); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 225, 313); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 225, 313, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 206, 348); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 206, 348, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 291, 237); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 291, 237, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 225, 248); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 225, 248, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 396, 281); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 396, 281, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 575, 251); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 575, 251, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 504, 246); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 504, 245, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 451, 245); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 451, 245, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 379, 245); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 361, 245); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 361, 245, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 294, 249); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 294, 249, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 236, 247); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 236, 247, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 182, 246); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 182, 246, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 117, 251); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 117, 250, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 287, 264); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 287, 264, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 265, 263); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 265, 263, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 414, 278); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 414, 278, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 379, 282); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 374, 278); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 252, 234); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 638, 248); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 277, 232); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 277, 232, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 410, 248); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 410, 247, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 466, 253); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 466, 253, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 500, 254); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 500, 254, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 572, 248); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 572, 247, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 231, 244); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 231, 244, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 182, 244); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 182, 244, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 116, 242); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 116, 242, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 231, 247); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 231, 247, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 187, 248); // ch (w, cr)
// Elapsed time: 124 seconds
selectCodeEditor("CONTROL_SIGNALS.v", 280, 232); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 280, 232, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 278, 266); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 278, 266, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 290, 230); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 290, 230, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 259, 231); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 259, 231, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 234, 235); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 237, 233); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 274, 261); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 274, 261, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 284, 299); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 284, 299, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 293, 266); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 293, 266, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 321, 334); // ch (w, cr)
// Elapsed time: 15 seconds
selectCodeEditor("CONTROL_SIGNALS.v", 369, 271); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 230, 311); // ch (w, cr)
// Elapsed time: 30 seconds
selectCodeEditor("CONTROL_SIGNALS.v", 264, 298); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 264, 298, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 95, 318); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 95, 318, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 172, 319); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 172, 319, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 223, 317); // ch (w, cr)
// Elapsed time: 17 seconds
selectCodeEditor("CONTROL_SIGNALS.v", 248, 286); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 420, 279); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 420, 279, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 252, 280); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 74, 283); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 79, 249); // ch (w, cr)
// Elapsed time: 20 seconds
selectCodeEditor("CONTROL_SIGNALS.v", 563, 246); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 563, 246, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 302, 250); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 302, 250, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 350, 247); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 350, 247, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 350, 247); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 350, 247); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 305, 247); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 305, 247, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 370, 240); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 369, 240, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 297, 244); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 297, 244, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 366, 243); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 366, 243, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 304, 243); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 304, 243, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 249, 245); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 249, 245, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 408, 247); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 408, 247, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 452, 249); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 445, 247); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 399, 246); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 157, 250); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 115, 243); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 115, 243, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 77, 243); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 197, 277); // ch (w, cr)
// Elapsed time: 18 seconds
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, HAZARD_DETECTION (HAZARD_DETECTION.v)]", 7, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, HAZARD_DETECTION (HAZARD_DETECTION.v)]", 7, false, false, false, false, false, true); // B (F, cr) - Double Click
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("HAZARD_DETECTION.v", 177, 181); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 133, 181); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 149, 195); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 149, 195, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("HAZARD_DETECTION.v", 170, 213); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 170, 213, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("HAZARD_DETECTION.v", 174, 175); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 174, 175, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("HAZARD_DETECTION.v", 174, 192); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 173, 179); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 170, 197); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 183, 180); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 170, 180); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 192, 180); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 168, 196); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 184, 194); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 129, 361); // ch (w, cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, RW_REGISTERS (RW_REGISTERS.v)]", 8, false); // B (F, cr)
selectCodeEditor("HAZARD_DETECTION.v", 136, 105); // ch (w, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v)]", 4, true); // B (F, cr) - Node
// Tcl Message: current_project {Tp Final 2020} 
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v)]", 4, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
selectCodeEditor("decode.v", 1, 127); // ch (w, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("HAZARD_DETECTION.v", 105, 242); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 105, 242, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 54 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_stallFlag", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("HAZARD_DETECTION.v", 383, 201); // ch (w, cr)
selectButton(RDIResourceCommand.RDICommands_SAVE_FILE, (String) null); // E (f, cr)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
// Tcl Message: current_project MIPS_2020 
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, CONTROL_SIGNALS (CONTROL_SIGNALS.v)]", 6, true); // B (F, cr) - Node
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v)]", 4); // B (F, cr)
selectCodeEditor("decode.v", 31, 121); // ch (w, cr)
selectCodeEditor("decode.v", 0, 75); // ch (w, cr)
typeControlKey((HResource) null, "decode.v", 'c'); // ch (w, cr)
selectButton(PAResourceCommand.PACommandNames_ADD_SOURCES, "Sources_add_sources"); // E (f, cr)
// Run Command: PAResourceCommand.PACommandNames_ADD_SOURCES
// c (cr): Add Sources: addNotify
selectButton("NEXT", "Next >"); // JButton (j, c)
selectButton(PAResourceQtoS.SrcChooserPanel_CREATE_FILE, "Create File"); // a (E, c)
// F (c): Create Source File: addNotify
// Elapsed time: 12 seconds
setText(PAResourceAtoD.CreateSrcFileDialog_FILE_NAME, "DECODE"); // ac (Q, F)
selectButton(RDIResource.BaseDialog_CANCEL, "Cancel"); // a (F)
dismissDialog("Create Source File"); // F (c)
selectButton("CANCEL", "Cancel"); // JButton (j, c)
// 'h' command handler elapsed time: 15 seconds
dismissDialog("Add Sources"); // c (cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v)]", 1, true); // B (F, cr) - Node
// Elapsed time: 13 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 3, true); // B (F, cr) - Node
// Tcl Message: current_project {Tp Final 2020} 
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v)]", 4, true); // B (F, cr) - Node
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v)]", 4); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 3, true); // B (F, cr) - Node
// Elapsed time: 43 seconds
selectButton(PAResourceCommand.PACommandNames_ADD_SOURCES, "Sources_add_sources"); // E (f, cr)
// Run Command: PAResourceCommand.PACommandNames_ADD_SOURCES
// c (cr): Add Sources: addNotify
selectButton("NEXT", "Next >"); // JButton (j, c)
selectButton(PAResourceQtoS.SrcChooserPanel_CREATE_FILE, "Create File"); // a (E, c)
// F (c): Create Source File: addNotify
setText(PAResourceAtoD.CreateSrcFileDialog_FILE_NAME, "IDECODE"); // ac (Q, F)
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (F)
dismissDialog("Create Source File"); // F (c)
selectButton("FINISH", "Finish"); // JButton (j, c)
// 'h' command handler elapsed time: 10 seconds
dismissDialog("Add Sources"); // c (cr)
// Tcl Message: current_project MIPS_2020 
// Tcl Message: close [ open C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/IDECODE.v w ] 
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// bB (cr):  Add Sources  : addNotify
// Tcl Message: add_files C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.srcs/sources_1/new/IDECODE.v 
// I (cr): Define Module: addNotify
dismissDialog("Add Sources"); // bB (cr)
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (I)
// TclEventType: FILE_SET_CHANGE
selectButton("OptionPane.button", "Yes"); // JButton (A, H)
dismissDialog("Define Module"); // I (cr)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Tcl Message: update_compile_order -fileset sources_1 
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IDECODE (IDECODE.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IDECODE (IDECODE.v)]", 8, false, false, false, false, false, true); // B (F, cr) - Double Click
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
typeControlKey((HResource) null, "IDECODE.v", 'v'); // ch (w, cr)
selectCodeEditor("IDECODE.v", 106, 248); // ch (w, cr)
typeControlKey((HResource) null, "IDECODE.v", 'c'); // ch (w, cr)
selectCodeEditor("IDECODE.v", 67, 263); // ch (w, cr)
selectCodeEditor("IDECODE.v", 67, 263, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IDECODE.v", 'v'); // ch (w, cr)
selectCodeEditor("IDECODE.v", 213, 124); // ch (w, cr)
// Elapsed time: 10 seconds
selectCodeEditor("IDECODE.v", 157, 127); // ch (w, cr)
selectCodeEditor("IDECODE.v", 190, 153); // ch (w, cr)
selectCodeEditor("IDECODE.v", 177, 80); // ch (w, cr)
selectCodeEditor("IDECODE.v", 177, 80); // ch (w, cr)
selectCodeEditor("IDECODE.v", 194, 71); // ch (w, cr)
selectCodeEditor("IDECODE.v", 194, 71, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 24 seconds
selectCodeEditor("IDECODE.v", 29, 209); // ch (w, cr)
selectCodeEditor("IDECODE.v", 24, 164); // ch (w, cr)
selectCodeEditor("IDECODE.v", 36, 353); // ch (w, cr)
selectCodeEditor("IDECODE.v", 44, 107); // ch (w, cr)
selectCodeEditor("IDECODE.v", 44, 107, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 216, 131); // ch (w, cr)
selectCodeEditor("IDECODE.v", 216, 131, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 208, 145); // ch (w, cr)
selectCodeEditor("IDECODE.v", 208, 145, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 130, 150); // ch (w, cr)
selectCodeEditor("IDECODE.v", 200, 143); // ch (w, cr)
selectCodeEditor("IDECODE.v", 200, 143, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 55, 111); // ch (w, cr)
selectCodeEditor("IDECODE.v", 55, 111, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 14 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "CONTROL_SIGNALS.v", 7); // i (h, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 132, 126); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 132, 126, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 162, 144); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 162, 144, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 9); // i (h, cr)
selectCodeEditor("IDECODE.v", 209, 145); // ch (w, cr)
selectCodeEditor("IDECODE.v", 209, 145, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "ALU_CONTROL.v", 5); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "CONTROL_SIGNALS.v", 7); // i (h, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 135, 126); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 135, 126, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 182, 146); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 182, 146, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 9); // i (h, cr)
selectCodeEditor("IDECODE.v", 317, 217); // ch (w, cr)
selectCodeEditor("IDECODE.v", 87, 217); // ch (w, cr)
selectCodeEditor("IDECODE.v", 99, 146); // ch (w, cr)
selectCodeEditor("IDECODE.v", 99, 146, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 116, 167); // ch (w, cr)
selectCodeEditor("IDECODE.v", 110, 182); // ch (w, cr)
selectCodeEditor("IDECODE.v", 112, 197); // ch (w, cr)
selectCodeEditor("IDECODE.v", 121, 211); // ch (w, cr)
selectCodeEditor("IDECODE.v", 121, 211, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IDECODE.v", 'v'); // ch (w, cr)
// Elapsed time: 41 seconds
selectCodeEditor("IDECODE.v", 106, 110); // ch (w, cr)
selectCodeEditor("IDECODE.v", 105, 110, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 113, 107); // ch (w, cr)
selectCodeEditor("IDECODE.v", 113, 107, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IDECODE.v", 'c'); // ch (w, cr)
selectCodeEditor("IDECODE.v", 92, 126); // ch (w, cr)
selectCodeEditor("IDECODE.v", 92, 126, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IDECODE.v", 'v'); // ch (w, cr)
selectCodeEditor("IDECODE.v", 169, 158); // ch (w, cr)
// Elapsed time: 13 seconds
selectCodeEditor("IDECODE.v", 197, 192); // ch (w, cr)
selectCodeEditor("IDECODE.v", 197, 192, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 200, 210); // ch (w, cr)
selectCodeEditor("IDECODE.v", 200, 210, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 201, 223); // ch (w, cr)
selectCodeEditor("IDECODE.v", 201, 223, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 203, 252); // ch (w, cr)
selectCodeEditor("IDECODE.v", 203, 252, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 206, 262); // ch (w, cr)
selectCodeEditor("IDECODE.v", 206, 262, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 144, 278); // ch (w, cr)
selectCodeEditor("IDECODE.v", 189, 244); // ch (w, cr)
selectCodeEditor("IDECODE.v", 189, 244, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 205, 246); // ch (w, cr)
selectCodeEditor("IDECODE.v", 205, 246, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 229, 266); // ch (w, cr)
selectCodeEditor("IDECODE.v", 229, 266, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 208, 241); // ch (w, cr)
selectCodeEditor("IDECODE.v", 208, 241, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 204, 248); // ch (w, cr)
selectCodeEditor("IDECODE.v", 204, 248, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 219, 267); // ch (w, cr)
selectCodeEditor("IDECODE.v", 219, 267, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 209, 243); // ch (w, cr)
selectCodeEditor("IDECODE.v", 209, 243, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 160, 230); // ch (w, cr)
selectCodeEditor("IDECODE.v", 160, 230); // ch (w, cr)
selectCodeEditor("IDECODE.v", 189, 236); // ch (w, cr)
selectCodeEditor("IDECODE.v", 189, 236, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 169, 144); // ch (w, cr)
selectCodeEditor("IDECODE.v", 169, 144, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 288, 141); // ch (w, cr)
selectCodeEditor("IDECODE.v", 299, 162); // ch (w, cr)
selectCodeEditor("IDECODE.v", 112, 147); // ch (w, cr)
selectCodeEditor("IDECODE.v", 112, 147, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "CONTROL_SIGNALS.v", 8); // i (h, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 140, 126); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 140, 126, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "CONTROL_SIGNALS.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 9); // i (h, cr)
typeControlKey((HResource) null, "IDECODE.v", 'v'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "CONTROL_SIGNALS.v", 8); // i (h, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 153, 149); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 153, 149, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "CONTROL_SIGNALS.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 9); // i (h, cr)
selectCodeEditor("IDECODE.v", 111, 159); // ch (w, cr)
selectCodeEditor("IDECODE.v", 111, 159, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IDECODE.v", 'v'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "CONTROL_SIGNALS.v", 8); // i (h, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 279, 194); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 279, 194, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "CONTROL_SIGNALS.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 9); // i (h, cr)
selectCodeEditor("IDECODE.v", 113, 178); // ch (w, cr)
selectCodeEditor("IDECODE.v", 113, 178, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IDECODE.v", 'v'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "CONTROL_SIGNALS.v", 8); // i (h, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 264, 227); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 264, 227, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "CONTROL_SIGNALS.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 9); // i (h, cr)
selectCodeEditor("IDECODE.v", 128, 194); // ch (w, cr)
selectCodeEditor("IDECODE.v", 128, 194, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IDECODE.v", 'v'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "CONTROL_SIGNALS.v", 8); // i (h, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 262, 262); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 262, 262, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "CONTROL_SIGNALS.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 9); // i (h, cr)
selectCodeEditor("IDECODE.v", 132, 216); // ch (w, cr)
selectCodeEditor("IDECODE.v", 132, 216, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IDECODE.v", 'v'); // ch (w, cr)
selectCodeEditor("IDECODE.v", 147, 232); // ch (w, cr)
selectCodeEditor("IDECODE.v", 284, 137); // ch (w, cr)
selectCodeEditor("IDECODE.v", 213, 145); // ch (w, cr)
selectCodeEditor("IDECODE.v", 213, 145, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 226, 176); // ch (w, cr)
selectCodeEditor("IDECODE.v", 226, 175, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 219, 145); // ch (w, cr)
selectCodeEditor("IDECODE.v", 219, 145, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 27, 112); // ch (w, cr)
selectCodeEditor("IDECODE.v", 25, 262); // ch (w, cr)
selectCodeEditor("IDECODE.v", 207, 142); // ch (w, cr)
selectCodeEditor("IDECODE.v", 256, 149); // ch (w, cr)
selectCodeEditor("IDECODE.v", 231, 184); // ch (w, cr)
selectCodeEditor("IDECODE.v", 210, 194); // ch (w, cr)
selectCodeEditor("IDECODE.v", 228, 209); // ch (w, cr)
selectCodeEditor("IDECODE.v", 31, 214); // ch (w, cr)
selectCodeEditor("IDECODE.v", 59, 210); // ch (w, cr)
selectCodeEditor("IDECODE.v", 59, 209, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "RW_REGISTERS.v", 6); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 9); // i (h, cr)
selectCodeEditor("IDECODE.v", 235, 92); // ch (w, cr)
selectCodeEditor("IDECODE.v", 235, 92, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 266, 108); // ch (w, cr)
selectCodeEditor("IDECODE.v", 266, 108, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 234, 129); // ch (w, cr)
selectCodeEditor("IDECODE.v", 234, 128, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 209, 149); // ch (w, cr)
selectCodeEditor("IDECODE.v", 209, 149, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 226, 165); // ch (w, cr)
selectCodeEditor("IDECODE.v", 226, 164, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 36, 60); // ch (w, cr)
selectCodeEditor("IDECODE.v", 157, 161); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "RW_REGISTERS.v", 8); // i (h, cr)
selectCodeEditor("RW_REGISTERS.v", 89, 159); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 89, 159, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "RW_REGISTERS.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 9); // i (h, cr)
selectCodeEditor("IDECODE.v", 68, 210); // ch (w, cr)
selectCodeEditor("IDECODE.v", 68, 210, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IDECODE.v", 'v'); // ch (w, cr)
selectCodeEditor("IDECODE.v", 90, 293); // ch (w, cr)
selectCodeEditor("IDECODE.v", 90, 293, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IDECODE.v", 'v'); // ch (w, cr)
selectCodeEditor("IDECODE.v", 174, 315); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "RW_REGISTERS.v", 8); // i (h, cr)
selectCodeEditor("RW_REGISTERS.v", 101, 249); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 101, 248, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 105, 243); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 105, 243, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "RW_REGISTERS.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 9); // i (h, cr)
selectCodeEditor("IDECODE.v", 112, 276); // ch (w, cr)
selectCodeEditor("IDECODE.v", 87, 286); // ch (w, cr)
// Elapsed time: 30 seconds
selectCodeEditor("IDECODE.v", 121, 267); // ch (w, cr)
selectCodeEditor("IDECODE.v", 121, 267, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IDECODE.v", 'v'); // ch (w, cr)
selectCodeEditor("IDECODE.v", 117, 281); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "RW_REGISTERS.v", 8); // i (h, cr)
selectCodeEditor("RW_REGISTERS.v", 178, 258); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 178, 258, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "RW_REGISTERS.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 9); // i (h, cr)
selectCodeEditor("IDECODE.v", 137, 282); // ch (w, cr)
selectCodeEditor("IDECODE.v", 137, 282, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IDECODE.v", 'v'); // ch (w, cr)
selectCodeEditor("IDECODE.v", 137, 296); // ch (w, cr)
selectCodeEditor("IDECODE.v", 137, 296, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IDECODE.v", 'v'); // ch (w, cr)
selectCodeEditor("IDECODE.v", 158, 315); // ch (w, cr)
selectCodeEditor("IDECODE.v", 158, 315, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "RW_REGISTERS.v", 8); // i (h, cr)
selectCodeEditor("RW_REGISTERS.v", 181, 300); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 181, 300, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "RW_REGISTERS.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 9); // i (h, cr)
typeControlKey((HResource) null, "IDECODE.v", 'v'); // ch (w, cr)
selectCodeEditor("IDECODE.v", 137, 326); // ch (w, cr)
selectCodeEditor("IDECODE.v", 137, 326, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "RW_REGISTERS.v", 8); // i (h, cr)
selectCodeEditor("RW_REGISTERS.v", 209, 310); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 209, 310, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "RW_REGISTERS.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 9); // i (h, cr)
typeControlKey((HResource) null, "IDECODE.v", 'v'); // ch (w, cr)
// Elapsed time: 15 seconds
selectCodeEditor("IDECODE.v", 185, 343); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "RW_REGISTERS.v", 8); // i (h, cr)
selectCodeEditor("RW_REGISTERS.v", 208, 349); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 208, 349, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "RW_REGISTERS.v", 'c'); // ch (w, cr)
// Elapsed time: 31 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 9); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "RW_REGISTERS.v", 8); // i (h, cr)
typeControlKey((HResource) null, "RW_REGISTERS.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 9); // i (h, cr)
selectCodeEditor("IDECODE.v", 175, 262); // ch (w, cr)
selectCodeEditor("IDECODE.v", 175, 262, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "RW_REGISTERS.v", 8); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 9); // i (h, cr)
typeControlKey((HResource) null, "IDECODE.v", 'v'); // ch (w, cr)
typeControlKey(null, null, 'z');
selectCodeEditor("IDECODE.v", 154, 261); // ch (w, cr)
selectCodeEditor("IDECODE.v", 154, 261, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IDECODE.v", 'v'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "RW_REGISTERS.v", 8); // i (h, cr)
selectCodeEditor("RW_REGISTERS.v", 222, 365); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 222, 365, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "RW_REGISTERS.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 9); // i (h, cr)
selectCodeEditor("IDECODE.v", 127, 281); // ch (w, cr)
selectCodeEditor("IDECODE.v", 127, 281, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IDECODE.v", 'v'); // ch (w, cr)
selectCodeEditor("IDECODE.v", 136, 293); // ch (w, cr)
selectCodeEditor("IDECODE.v", 136, 293, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IDECODE.v", 'v'); // ch (w, cr)
typeControlKey(null, null, 'z');
selectCodeEditor("IDECODE.v", 139, 298); // ch (w, cr)
selectCodeEditor("IDECODE.v", 139, 298, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IDECODE.v", 'v'); // ch (w, cr)
// Elapsed time: 12 seconds
selectCodeEditor("IDECODE.v", 155, 328); // ch (w, cr)
selectCodeEditor("IDECODE.v", 135, 313); // ch (w, cr)
selectCodeEditor("IDECODE.v", 114, 226); // ch (w, cr)
selectCodeEditor("IDECODE.v", 114, 226, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 214, 230); // ch (w, cr)
selectCodeEditor("IDECODE.v", 214, 230, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 199, 285); // ch (w, cr)
selectCodeEditor("IDECODE.v", 139, 319); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "RW_REGISTERS.v", 8); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 9); // i (h, cr)
selectCodeEditor("IDECODE.v", 89, 318); // ch (w, cr)
selectCodeEditor("IDECODE.v", 106, 245); // ch (w, cr)
selectCodeEditor("IDECODE.v", 106, 245, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "HAZARD_DETECTION.v", 6); // i (h, cr)
selectCodeEditor("HAZARD_DETECTION.v", 118, 89); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 118, 88, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "HAZARD_DETECTION.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 9); // i (h, cr)
typeControlKey((HResource) null, "IDECODE.v", 'v'); // ch (w, cr)
selectCodeEditor("IDECODE.v", 82, 297); // ch (w, cr)
selectCodeEditor("IDECODE.v", 82, 297, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IDECODE.v", 'v'); // ch (w, cr)
selectCodeEditor("IDECODE.v", 157, 326); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "HAZARD_DETECTION.v", 8); // i (h, cr)
selectCodeEditor("HAZARD_DETECTION.v", 127, 156); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 127, 156, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "HAZARD_DETECTION.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 9); // i (h, cr)
selectCodeEditor("IDECODE.v", 133, 261); // ch (w, cr)
selectCodeEditor("IDECODE.v", 133, 261, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IDECODE.v", 'v'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "HAZARD_DETECTION.v", 8); // i (h, cr)
selectCodeEditor("HAZARD_DETECTION.v", 154, 174); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 154, 174); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 154, 174, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "HAZARD_DETECTION.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 9); // i (h, cr)
selectCodeEditor("IDECODE.v", 108, 279); // ch (w, cr)
selectCodeEditor("IDECODE.v", 108, 279, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IDECODE.v", 'v'); // ch (w, cr)
typeControlKey(null, null, 'z');
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "HAZARD_DETECTION.v", 8); // i (h, cr)
selectCodeEditor("HAZARD_DETECTION.v", 174, 193); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 174, 193, false, false, false, false, true); // ch (w, cr) - Double Click
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 86 MB. Current time: 6/16/20, 6:30:19 PM ART
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 9); // i (h, cr)
selectCodeEditor("IDECODE.v", 109, 282); // ch (w, cr)
selectCodeEditor("IDECODE.v", 109, 278, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 106, 299); // ch (w, cr)
selectCodeEditor("IDECODE.v", 106, 299, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 107, 316); // ch (w, cr)
selectCodeEditor("IDECODE.v", 107, 316, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "HAZARD_DETECTION.v", 8); // i (h, cr)
selectCodeEditor("HAZARD_DETECTION.v", 164, 180); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 164, 180, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "HAZARD_DETECTION.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 9); // i (h, cr)
selectCodeEditor("IDECODE.v", 106, 282); // ch (w, cr)
selectCodeEditor("IDECODE.v", 106, 282, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IDECODE.v", 'v'); // ch (w, cr)
selectCodeEditor("IDECODE.v", 114, 301); // ch (w, cr)
selectCodeEditor("IDECODE.v", 113, 301, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "HAZARD_DETECTION.v", 8); // i (h, cr)
selectCodeEditor("HAZARD_DETECTION.v", 167, 194); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 167, 194, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "HAZARD_DETECTION.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 9); // i (h, cr)
typeControlKey((HResource) null, "IDECODE.v", 'v'); // ch (w, cr)
selectCodeEditor("IDECODE.v", 111, 313); // ch (w, cr)
selectCodeEditor("IDECODE.v", 111, 313, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "HAZARD_DETECTION.v", 8); // i (h, cr)
selectCodeEditor("HAZARD_DETECTION.v", 172, 217); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 172, 217, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("HAZARD_DETECTION.v", 177, 217); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 177, 217, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "HAZARD_DETECTION.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 9); // i (h, cr)
selectCodeEditor("IDECODE.v", 127, 317); // ch (w, cr)
selectCodeEditor("IDECODE.v", 127, 316, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IDECODE.v", 'v'); // ch (w, cr)
selectCodeEditor("IDECODE.v", 207, 340); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "HAZARD_DETECTION.v", 8); // i (h, cr)
selectCodeEditor("HAZARD_DETECTION.v", 105, 250); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 106, 249, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("HAZARD_DETECTION.v", 127, 248); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 127, 248, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "HAZARD_DETECTION.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 9); // i (h, cr)
selectCodeEditor("IDECODE.v", 121, 300); // ch (w, cr)
selectCodeEditor("IDECODE.v", 121, 300, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 131, 300); // ch (w, cr)
selectCodeEditor("IDECODE.v", 132, 297, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 151, 302); // ch (w, cr)
selectCodeEditor("IDECODE.v", 151, 302, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IDECODE.v", 'v'); // ch (w, cr)
selectCodeEditor("IDECODE.v", 152, 344); // ch (w, cr)
selectCodeEditor("IDECODE.v", 380, 298); // ch (w, cr)
selectCodeEditor("IDECODE.v", 221, 242); // ch (w, cr)
selectCodeEditor("IDECODE.v", 221, 242); // ch (w, cr)
selectCodeEditor("IDECODE.v", 212, 243); // ch (w, cr)
selectCodeEditor("IDECODE.v", 212, 243, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 11 seconds
selectCodeEditor("IDECODE.v", 150, 224); // ch (w, cr)
selectCodeEditor("IDECODE.v", 186, 233); // ch (w, cr)
selectCodeEditor("IDECODE.v", 186, 232, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 20 seconds
selectComboBox("FindAndReplaceDialog.cr_Find what:", "i_Instruction", -1); // JComboBox (cr, FindAndReplaceDialog)
// Elapsed time: 25 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "i_instruction", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 73 seconds
selectCodeEditor("IDECODE.v", 423, 251); // ch (w, cr)
selectCodeEditor("IDECODE.v", 87, 366); // ch (w, cr)
selectCodeEditor("IDECODE.v", 87, 366, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 107, 211); // ch (w, cr)
selectCodeEditor("IDECODE.v", 107, 211, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 183, 233); // ch (w, cr)
selectCodeEditor("IDECODE.v", 186, 214); // ch (w, cr)
selectCodeEditor("IDECODE.v", 186, 214, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 30 seconds
selectCodeEditor("IDECODE.v", 289, 134); // ch (w, cr)
selectCodeEditor("IDECODE.v", 288, 140); // ch (w, cr)
selectCodeEditor("IDECODE.v", 189, 219); // ch (w, cr)
selectCodeEditor("IDECODE.v", 189, 219, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 91 seconds
selectComboBox("FindAndReplaceDialog.cr_Find what:", "i_pc_branch", -1); // JComboBox (cr, FindAndReplaceDialog)
selectCodeEditor("IDECODE.v", 160, 178); // ch (w, cr)
selectCodeEditor("IDECODE.v", 160, 178, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 273, 180); // ch (w, cr)
selectCodeEditor("IDECODE.v", 273, 180, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 182, 179); // ch (w, cr)
selectCodeEditor("IDECODE.v", 182, 179, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 13 seconds
selectCodeEditor("IDECODE.v", 226, 290); // ch (w, cr)
selectCodeEditor("IDECODE.v", 226, 290, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 188, 160); // ch (w, cr)
selectCodeEditor("IDECODE.v", 188, 160, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 45 seconds
selectCodeEditor("IDECODE.v", 109, 181); // ch (w, cr)
selectCodeEditor("IDECODE.v", 332, 180); // ch (w, cr)
selectCodeEditor("IDECODE.v", 346, 178); // ch (w, cr)
selectCodeEditor("IDECODE.v", 337, 287); // ch (w, cr)
selectCodeEditor("IDECODE.v", 340, 306); // ch (w, cr)
selectCodeEditor("IDECODE.v", 340, 306, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 345, 295); // ch (w, cr)
selectCodeEditor("IDECODE.v", 345, 295, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 133, 296); // ch (w, cr)
selectCodeEditor("IDECODE.v", 133, 296, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 177, 209); // ch (w, cr)
selectCodeEditor("IDECODE.v", 178, 209, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 185, 215); // ch (w, cr)
selectCodeEditor("IDECODE.v", 185, 215, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 210, 215); // ch (w, cr)
selectCodeEditor("IDECODE.v", 210, 215, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 132, 298); // ch (w, cr)
selectCodeEditor("IDECODE.v", 132, 298, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 132, 323); // ch (w, cr)
selectCodeEditor("IDECODE.v", 132, 323, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 134, 301); // ch (w, cr)
selectCodeEditor("IDECODE.v", 134, 301, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 296, 298); // ch (w, cr)
selectCodeEditor("IDECODE.v", 490, 302); // ch (w, cr)
selectCodeEditor("IDECODE.v", 490, 302, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 523, 299); // ch (w, cr)
selectCodeEditor("IDECODE.v", 603, 301); // ch (w, cr)
selectCodeEditor("IDECODE.v", 644, 301); // ch (w, cr)
selectCodeEditor("IDECODE.v", 302, 301); // ch (w, cr)
selectCodeEditor("IDECODE.v", 103, 295); // ch (w, cr)
selectCodeEditor("IDECODE.v", 103, 295, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 196, 262); // ch (w, cr)
selectCodeEditor("IDECODE.v", 196, 262); // ch (w, cr)
selectCodeEditor("IDECODE.v", 196, 262); // ch (w, cr)
selectCodeEditor("IDECODE.v", 196, 262, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 20 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "PC_MUX.v", 3); // i (h, cr)
selectCodeEditor("PC_MUX.v", 162, 276); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 235, 309); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 217, 278); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 273, 277); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 273, 277, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("PC_MUX.v", 288, 295); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 288, 295, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("PC_MUX.v", 271, 283); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 271, 283, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("PC_MUX.v", 283, 295); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 283, 295, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("PC_MUX.v", 276, 285); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 276, 285, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("PC_MUX.v", 283, 293); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 283, 293, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("PC_MUX.v", 273, 276); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 273, 276, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("PC_MUX.v", 286, 289); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 286, 289, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 9); // i (h, cr)
selectCodeEditor("IDECODE.v", 143, 243); // ch (w, cr)
selectCodeEditor("IDECODE.v", 143, 243); // ch (w, cr)
selectCodeEditor("IDECODE.v", 177, 265); // ch (w, cr)
selectCodeEditor("IDECODE.v", 177, 265, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 138, 250); // ch (w, cr)
selectCodeEditor("IDECODE.v", 138, 250, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 185, 265); // ch (w, cr)
selectCodeEditor("IDECODE.v", 185, 265, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 13 seconds
selectCodeEditor("IDECODE.v", 219, 129); // ch (w, cr)
selectCodeEditor("IDECODE.v", 219, 129, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 210, 178); // ch (w, cr)
selectCodeEditor("IDECODE.v", 210, 178, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 27, 177); // ch (w, cr)
selectCodeEditor("IDECODE.v", 202, 234); // ch (w, cr)
selectCodeEditor("IDECODE.v", 202, 234, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 201, 218); // ch (w, cr)
selectCodeEditor("IDECODE.v", 201, 218, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 116, 247); // ch (w, cr)
selectCodeEditor("IDECODE.v", 116, 247, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 11 seconds
selectCodeEditor("IDECODE.v", 127, 212); // ch (w, cr)
selectCodeEditor("IDECODE.v", 127, 212); // ch (w, cr)
selectCodeEditor("IDECODE.v", 112, 196); // ch (w, cr)
selectCodeEditor("IDECODE.v", 112, 196, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 181, 215); // ch (w, cr)
selectCodeEditor("IDECODE.v", 181, 215, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 206, 165); // ch (w, cr)
selectCodeEditor("IDECODE.v", 206, 165, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectCodeEditor("IFETCH.v", 219, 179); // ch (w, cr)
selectCodeEditor("IFETCH.v", 219, 179, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 221, 174); // ch (w, cr)
selectCodeEditor("IFETCH.v", 221, 174, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 235, 180); // ch (w, cr)
selectCodeEditor("IFETCH.v", 235, 180, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 9); // i (h, cr)
selectCodeEditor("IDECODE.v", 189, 112); // ch (w, cr)
selectCodeEditor("IDECODE.v", 189, 112, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 341, 246); // ch (w, cr)
selectCodeEditor("IDECODE.v", 341, 246, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 135, 243); // ch (w, cr)
selectCodeEditor("IDECODE.v", 135, 243, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 159, 261); // ch (w, cr)
selectCodeEditor("IDECODE.v", 159, 261, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 140, 246); // ch (w, cr)
selectCodeEditor("IDECODE.v", 140, 246, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 157, 264); // ch (w, cr)
selectCodeEditor("IDECODE.v", 157, 263, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 125, 253); // ch (w, cr)
selectCodeEditor("IDECODE.v", 125, 253, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 145, 264); // ch (w, cr)
selectCodeEditor("IDECODE.v", 145, 264, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 132, 251); // ch (w, cr)
selectCodeEditor("IDECODE.v", 132, 251, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 155, 263); // ch (w, cr)
selectCodeEditor("IDECODE.v", 155, 263, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 132, 246); // ch (w, cr)
selectCodeEditor("IDECODE.v", 132, 246, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 184, 114); // ch (w, cr)
selectCodeEditor("IDECODE.v", 184, 114, false, false, false, false, true); // ch (w, cr) - Double Click
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v)]", 2); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v)]", 1, true); // B (F, cr) - Node
// Tcl Message: current_project {Tp Final 2020} 
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v)]", 1, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
// Elapsed time: 13 seconds
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v)]", 1); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v)]", 2, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v)]", 2, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
// Elapsed time: 20 seconds
selectCodeEditor("top_mips.v", 134, 64); // ch (w, cr)
selectCodeEditor("top_mips.v", 134, 64, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 145, 214); // ch (w, cr)
selectCodeEditor("top_mips.v", 145, 214, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 139, 315); // ch (w, cr)
selectCodeEditor("top_mips.v", 139, 315, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 260, 315); // ch (w, cr)
selectCodeEditor("top_mips.v", 260, 315, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 140, 317); // ch (w, cr)
selectCodeEditor("top_mips.v", 140, 317, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 142, 159); // ch (w, cr)
selectCodeEditor("top_mips.v", 142, 159); // ch (w, cr)
selectCodeEditor("top_mips.v", 163, 159); // ch (w, cr)
selectCodeEditor("top_mips.v", 163, 159, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 269, 161); // ch (w, cr)
selectCodeEditor("top_mips.v", 269, 161, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 119, 157); // ch (w, cr)
selectCodeEditor("top_mips.v", 119, 157); // ch (w, cr)
selectCodeEditor("top_mips.v", 119, 157); // ch (w, cr)
selectCodeEditor("top_mips.v", 119, 157); // ch (w, cr)
selectCodeEditor("top_mips.v", 119, 157); // ch (w, cr)
selectCodeEditor("top_mips.v", 119, 157); // ch (w, cr)
selectCodeEditor("top_mips.v", 119, 157, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 141, 314); // ch (w, cr)
selectCodeEditor("top_mips.v", 141, 314, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 257, 159); // ch (w, cr)
selectCodeEditor("top_mips.v", 257, 159, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 219, 382); // ch (w, cr)
selectCodeEditor("top_mips.v", 219, 382, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 10 seconds
selectCodeEditor("top_mips.v", 150, 326); // ch (w, cr)
selectCodeEditor("top_mips.v", 150, 326, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 158, 348); // ch (w, cr)
selectCodeEditor("top_mips.v", 158, 348, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 139, 331); // ch (w, cr)
selectCodeEditor("top_mips.v", 139, 331, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 157, 346); // ch (w, cr)
selectCodeEditor("top_mips.v", 157, 346, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 136, 330); // ch (w, cr)
selectCodeEditor("top_mips.v", 136, 330, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 153, 345); // ch (w, cr)
selectCodeEditor("top_mips.v", 153, 345, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 159, 335); // ch (w, cr)
selectCodeEditor("top_mips.v", 159, 335, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 169, 348); // ch (w, cr)
selectCodeEditor("top_mips.v", 169, 348, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 151, 332); // ch (w, cr)
selectCodeEditor("top_mips.v", 151, 332, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 165, 351); // ch (w, cr)
selectCodeEditor("top_mips.v", 165, 351, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 140, 224); // ch (w, cr)
selectCodeEditor("top_mips.v", 140, 224, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 19 seconds
selectCodeEditor("top_mips.v", 135, 263); // ch (w, cr)
selectCodeEditor("top_mips.v", 135, 263, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 179, 157); // ch (w, cr)
selectCodeEditor("top_mips.v", 327, 155); // ch (w, cr)
selectCodeEditor("top_mips.v", 349, 160); // ch (w, cr)
// Elapsed time: 28 seconds
selectCodeEditor("top_mips.v", 281, 175); // ch (w, cr)
selectCodeEditor("top_mips.v", 281, 175, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 285, 165); // ch (w, cr)
selectCodeEditor("top_mips.v", 285, 165, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 150, 162); // ch (w, cr)
selectCodeEditor("top_mips.v", 150, 162, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 20 seconds
selectCodeEditor("top_mips.v", 136, 236); // ch (w, cr)
selectCodeEditor("top_mips.v", 136, 236); // ch (w, cr)
selectCodeEditor("top_mips.v", 145, 217); // ch (w, cr)
selectCodeEditor("top_mips.v", 145, 217, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 124, 174); // ch (w, cr)
selectCodeEditor("top_mips.v", 124, 174, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 13 seconds
selectCodeEditor("top_mips.v", 168, 57); // ch (w, cr)
selectCodeEditor("top_mips.v", 168, 57, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 137, 72); // ch (w, cr)
selectCodeEditor("top_mips.v", 137, 72, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 147, 212); // ch (w, cr)
selectCodeEditor("top_mips.v", 147, 212, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 151, 77); // ch (w, cr)
selectCodeEditor("top_mips.v", 151, 77, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 149, 226); // ch (w, cr)
selectCodeEditor("top_mips.v", 148, 226, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 152, 251); // ch (w, cr)
selectCodeEditor("top_mips.v", 152, 251, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 148, 232); // ch (w, cr)
selectCodeEditor("top_mips.v", 148, 232, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 159, 213); // ch (w, cr)
selectCodeEditor("top_mips.v", 159, 213, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 141, 77); // ch (w, cr)
selectCodeEditor("top_mips.v", 141, 77, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 141, 77); // ch (w, cr)
selectCodeEditor("top_mips.v", 137, 231); // ch (w, cr)
selectCodeEditor("top_mips.v", 137, 231, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 153, 248); // ch (w, cr)
selectCodeEditor("top_mips.v", 153, 248, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 296, 238); // ch (w, cr)
selectCodeEditor("top_mips.v", 296, 238, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 252, 216); // ch (w, cr)
selectCodeEditor("top_mips.v", 252, 216, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 293, 196); // ch (w, cr)
selectCodeEditor("top_mips.v", 293, 196, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 326, 144); // ch (w, cr)
selectCodeEditor("top_mips.v", 326, 144, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 300, 130); // ch (w, cr)
selectCodeEditor("top_mips.v", 339, 196); // ch (w, cr)
selectCodeEditor("top_mips.v", 323, 141); // ch (w, cr)
selectCodeEditor("top_mips.v", 336, 201); // ch (w, cr)
selectCodeEditor("top_mips.v", 317, 201); // ch (w, cr)
selectCodeEditor("top_mips.v", 333, 193); // ch (w, cr)
selectCodeEditor("top_mips.v", 319, 149); // ch (w, cr)
// Elapsed time: 36 seconds
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
// Elapsed time: 11 seconds
selectButton(RDIResourceCommand.RDICommands_SAVE_FILE, (String) null); // E (f, cr)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
selectCodeEditor("IDECODE.v", 188, 123); // ch (w, cr)
selectCodeEditor("IDECODE.v", 188, 123, false, false, false, false, true); // ch (w, cr) - Double Click
// Tcl Message: current_project MIPS_2020 
selectCodeEditor("IDECODE.v", 196, 129); // ch (w, cr)
selectCodeEditor("IDECODE.v", 196, 129, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 163, 266); // ch (w, cr)
selectCodeEditor("IDECODE.v", 163, 266, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 188, 285); // ch (w, cr)
selectCodeEditor("IDECODE.v", 188, 285, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 170, 266); // ch (w, cr)
selectCodeEditor("IDECODE.v", 170, 266, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 185, 287); // ch (w, cr)
selectCodeEditor("IDECODE.v", 185, 287, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 198, 266); // ch (w, cr)
selectCodeEditor("IDECODE.v", 198, 266, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 204, 289); // ch (w, cr)
selectCodeEditor("IDECODE.v", 204, 289, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 203, 264); // ch (w, cr)
selectCodeEditor("IDECODE.v", 203, 264, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 205, 275); // ch (w, cr)
selectCodeEditor("IDECODE.v", 205, 275, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "PC_MUX.v", 3); // i (h, cr)
selectCodeEditor("PC_MUX.v", 191, 127); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 190, 127, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("PC_MUX.v", 167, 92); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 167, 92, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("PC_MUX.v", 177, 130); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 177, 130, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("PC_MUX.v", 170, 101); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 170, 101, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("PC_MUX.v", 184, 127); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 184, 127, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("PC_MUX.v", 170, 90); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 170, 90, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("PC_MUX.v", 179, 119); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 50, 41); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 159, 94); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 159, 94, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("PC_MUX.v", 181, 126); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 181, 126, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("PC_MUX.v", 170, 95); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 170, 95, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("PC_MUX.v", 185, 131); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 185, 131, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 9); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "CONTROL_SIGNALS.v", 6); // i (h, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 163, 109); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 163, 109, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 199, 178); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 208, 246); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 208, 246, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 18 seconds
selectCodeEditor("CONTROL_SIGNALS.v", 280, 197); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 280, 197, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 156, 212); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 278, 199); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 278, 199, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 414, 212); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 422, 212); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 422, 212, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 443, 215); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 444, 213); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 353, 212); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 353, 212, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 291, 212); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 291, 212, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 355, 210); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 355, 210, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 230, 210); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 230, 210, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 555, 214); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 555, 214, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 157, 211); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 80, 214); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 85, 248); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 85, 248, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 110, 252); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 110, 252, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 139, 248); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 169, 248); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 175, 250); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 148, 246); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 148, 246, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 185, 264); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 149, 197); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 149, 197, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 145, 332); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 145, 332, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 14 seconds
selectCodeEditor("CONTROL_SIGNALS.v", 186, 248); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 397, 218); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 80, 212); // ch (w, cr)
// Elapsed time: 18 seconds
selectCodeEditor("CONTROL_SIGNALS.v", 285, 195); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 285, 195, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 268, 227); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 268, 227, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 280, 196); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 280, 196, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 299, 198); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 299, 198, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 24 seconds
selectCodeEditor("CONTROL_SIGNALS.v", 172, 168); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 160, 115); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 160, 115, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 213, 192); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 213, 192, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 145, 194); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 145, 194, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 144, 313); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 144, 313, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 20 seconds
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v)]", 5, true); // B (F, cr) - Node
// Tcl Message: current_project {Tp Final 2020} 
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_memory : memory (memory.v)]", 6, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v)]", 5, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v)]", 5, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_alu : alu (alu.v)]", 6, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_forwarding_unit : forwarding_unit (forwarding_unit.v)]", 7, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding1 : mux_forwarding (mux_forwarding.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding2 : mux_forwarding (mux_forwarding.v)]", 9, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding1 : mux_forwarding (mux_forwarding.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding2 : mux_forwarding (mux_forwarding.v)]", 9, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding1 : mux_forwarding (mux_forwarding.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding2 : mux_forwarding (mux_forwarding.v)]", 9, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding1 : mux_forwarding (mux_forwarding.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding2 : mux_forwarding (mux_forwarding.v)]", 9, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding1 : mux_forwarding (mux_forwarding.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_forwarding_unit : forwarding_unit (forwarding_unit.v)]", 7, false); // B (F, cr)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_memory : memory (memory.v)]", 10); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_memory : memory (memory.v), u_ram_datos : ram_datos (ram_datos.v)]", 11, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_recolector : recolector (recolector.v)]", 12, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_recolector : recolector (recolector.v)]", 12, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_recolector : recolector (recolector.v)]", 12, false, false, false, false, false, true); // B (F, cr) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_recolector : recolector (recolector.v)]", 12, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_recolector : recolector (recolector.v)]", 12, false, false, false, false, false, true); // B (F, cr) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_maquina_estados : maquina_estados (maquina_estados.v)]", 13, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_maquina_estados : maquina_estados (maquina_estados.v)]", 13, false, false, false, false, false, true); // B (F, cr) - Double Click
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_uart : uart (uart.v)]", 14); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_uart : uart (uart.v)]", 14, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_uart : uart (uart.v)]", 14, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_maquina_estados : maquina_estados (maquina_estados.v)]", 13, false); // B (F, cr)
// Elapsed time: 127 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "maquina_estados.v", 14); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "recolector.v", 13); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "execute.v", 12); // i (h, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "uart.v", 15); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "maquina_estados.v", 14); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "recolector.v", 13); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "execute.v", 12); // i (h, cr)
selectMenu(PAResourceItoN.MainMenuMgr_FILE, "File"); // aa (q, cr)
dismissMenu(PAResourceItoN.MainMenuMgr_FILE, "File"); // aa (q, cr)
selectMenu(PAResourceItoN.MainMenuMgr_EDIT, "Edit"); // aa (q, cr)
dismissMenu(PAResourceItoN.MainMenuMgr_EDIT, "Edit"); // aa (q, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "top_mips.v", 11); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "hazard_detection_unit.v", 10); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "registers.v", 9); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "decode.v", 8); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "control.v", 7); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "top_modular.v", 6); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "mux_PC.v", 5); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "instruction_fetch.v", 4); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "pc.v", 3); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "ram_instrucciones.v", 2); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "alu_control.v", 1); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "Project Summary", 0); // i (h, cr)
// WARNING: HEventQueue.dispatchEvent() is taking  1145262 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1472 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 89 MB. Current time: 6/16/20, 7:11:34 PM ART
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2855 ms. Increasing delay to 8565 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2086 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1111 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1933 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1201 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 17407 ms. Increasing delay to 52221 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1573 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1200 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 732 ms to process. Increasing delay to 2000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 659 ms to process. Increasing delay to 2000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 254 ms. Decreasing delay to 2254 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1039 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1113 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2996 ms. Increasing delay to 8988 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1055 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5029 ms. Increasing delay to 15087 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2599 ms to process. Increasing delay to 2000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1823 ms.
// WARNING: HTimer (ActiveMsgMonitor Process Messages Timer) is taking 3306ms to process. Increasing delay to 2000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3421 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1575 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1466 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 6614 ms to process. Increasing delay to 2000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 6598 ms to process. Increasing delay to 3000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 6598 ms to process. Increasing delay to 3000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7056 ms. Increasing delay to 21168 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 6526 ms to process. Increasing delay to 8000 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 8717 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 6723 ms to process. Increasing delay to 8000 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 6727 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3556 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 5628 ms to process. Increasing delay to 2000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 54 ms. Decreasing delay to 2054 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2476 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 3531 ms to process. Increasing delay to 4000 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5338 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2219 ms. Increasing delay to 6657 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 44 ms. Decreasing delay to 2044 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1820 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7282 ms. Increasing delay to 21846 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 887 ms to process. Increasing delay to 2000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 359 ms. Decreasing delay to 2359 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1360 ms. Increasing delay to 4080 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 1154 ms to process. Increasing delay to 2000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3156 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7202 ms. Increasing delay to 21606 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5601 ms. Increasing delay to 16803 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1150 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1356 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 423 ms. Decreasing delay to 2423 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 242 ms. Decreasing delay to 2242 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1966 ms. Increasing delay to 5898 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1050 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2776 ms. Increasing delay to 8328 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1027 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5893 ms. Increasing delay to 17679 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1065 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1004 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4845 ms. Increasing delay to 14535 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 9098 ms. Increasing delay to 27294 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 1208 ms to process. Increasing delay to 2000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1013 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1374 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 63 ms. Decreasing delay to 2063 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1270 ms. Increasing delay to 3810 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3478 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1003 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 4272 ms to process. Increasing delay to 9000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2750 ms. Increasing delay to 8250 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 1258 ms to process. Increasing delay to 3000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2430 ms to process. Increasing delay to 4000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2935 ms to process. Increasing delay to 3000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4631 ms. Increasing delay to 13893 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1609 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 4215 ms to process. Increasing delay to 7000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 482 ms. Decreasing delay to 2482 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1279 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3222 ms. Increasing delay to 9666 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 3567 ms to process. Increasing delay to 4000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1175 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1414 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 233 ms. Decreasing delay to 2233 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2805 ms to process. Increasing delay to 3000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1054 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3780 ms. Increasing delay to 11340 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1098 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 467 ms. Decreasing delay to 2467 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 4634 ms to process. Increasing delay to 5000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 12046 ms. Increasing delay to 36138 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4816 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5697 ms. Increasing delay to 17091 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4935 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1793 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 10 ms. Decreasing delay to 2010 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3241 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7050 ms. Increasing delay to 21150 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1058 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4962 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 7660 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 209 ms. Decreasing delay to 2209 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1380 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1504 ms. Increasing delay to 4512 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 3523 ms to process. Increasing delay to 5000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1174 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1281 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1185 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2623 ms. Increasing delay to 7869 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1510 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1118 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1062 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 8540 ms to process. Increasing delay to 6000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5854 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1360 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2933 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1777 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 11674 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 6619 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3494 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5914 ms. Increasing delay to 17742 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3296 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1158 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1150 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1161 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4979 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 69 ms. Decreasing delay to 2069 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 6159 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1164 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  8303 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5857 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1082 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5093 ms. Increasing delay to 15279 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2472 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1248 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2000 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 6159 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1123 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 16 ms. Decreasing delay to 2016 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1536 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1212 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1110 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6374 ms. Increasing delay to 19122 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2195 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 18 ms. Decreasing delay to 2018 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2233 ms. Increasing delay to 6699 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1775 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 8610 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 26515 ms. Increasing delay to 79545 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  15383 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1274 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 1569 ms to process. Increasing delay to 3000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1798 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6717 ms. Increasing delay to 20151 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 10199 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5502 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 131 ms. Decreasing delay to 2131 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3101 ms. Increasing delay to 9303 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1025 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1265 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2722 ms to process. Increasing delay to 4000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3226 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5780 ms. Increasing delay to 17340 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1966 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 623 ms. Decreasing delay to 2623 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2784 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 59 ms. Decreasing delay to 2059 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2401 ms. Increasing delay to 7203 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7541 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 84 MB. Current time: 6/16/20, 7:41:42 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  2771 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3461 ms. Increasing delay to 10383 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6255 ms. Increasing delay to 18765 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 11 ms. Decreasing delay to 2011 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 75 ms. Decreasing delay to 2075 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1715 ms. Increasing delay to 5145 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1200 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1156 ms. Increasing delay to 3468 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2138 ms. Increasing delay to 6414 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2581 ms. Increasing delay to 7743 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1346 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5807 ms. Increasing delay to 17421 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 9119 ms. Increasing delay to 27357 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2965 ms to process. Increasing delay to 3000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1214 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2133 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 525 ms. Decreasing delay to 2525 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 91 ms. Decreasing delay to 2091 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1029 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4706 ms. Increasing delay to 14118 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1984 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4519 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4705 ms. Increasing delay to 14115 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 3745 ms to process. Increasing delay to 8000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1851 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 5187 ms to process. Increasing delay to 5000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 131 ms. Decreasing delay to 2131 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4414 ms. Increasing delay to 13242 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 179 ms. Decreasing delay to 2179 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2317 ms. Increasing delay to 6951 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1120 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  15222 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 151 ms. Decreasing delay to 2151 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1008 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2811 ms. Increasing delay to 8433 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3607 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 15472 ms. Increasing delay to 46416 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5144 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1094 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1081 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1553 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 6169 ms to process. Increasing delay to 3000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 28 ms. Decreasing delay to 2028 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1511 ms. Increasing delay to 4533 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5650 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 84 MB. Current time: 6/16/20, 8:11:41 PM ART
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2406 ms. Increasing delay to 7218 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1645 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  9284 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 84 MB. Current time: 6/16/20, 8:41:46 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 85 MB. Current time: 6/16/20, 9:11:41 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 84 MB. Current time: 6/16/20, 9:41:42 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 84 MB. Current time: 6/16/20, 10:11:42 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 84 MB. Current time: 6/16/20, 10:41:43 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 85 MB. Current time: 6/16/20, 11:11:43 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1266 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  36198048 ms.
// WARNING: HTimer (StateMonitor Timer) is taking 729ms to process. Increasing delay to 4000 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 84 MB. Current time: 6/17/20, 9:38:48 AM ART
// WARNING: HEventQueue.dispatchEvent() is taking  6212 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  8591 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 85 MB. Current time: 6/17/20, 10:08:56 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 84 MB. Current time: 6/17/20, 10:38:52 AM ART
// WARNING: HEventQueue.dispatchEvent() is taking  10563 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 84 MB. Current time: 6/17/20, 11:09:03 AM ART
// WARNING: HEventQueue.dispatchEvent() is taking  8733 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 85 MB. Current time: 6/17/20, 11:39:02 AM ART
// WARNING: HEventQueue.dispatchEvent() is taking  6797 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7822 ms. Increasing delay to 23466 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5029 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1977 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 156 ms. Decreasing delay to 2156 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2714 ms. Increasing delay to 8142 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1166 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1525 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  11243 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 84 MB. Current time: 6/17/20, 12:09:07 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 84 MB. Current time: 6/17/20, 12:38:58 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 84 MB. Current time: 6/17/20, 1:08:58 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1117 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3360 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 11394 ms. Increasing delay to 34182 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 80 ms. Decreasing delay to 2080 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  10011 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 85 MB. Current time: 6/17/20, 1:39:09 PM ART
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1114 ms. Increasing delay to 3342 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2248 ms. Increasing delay to 6744 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2629 ms to process. Increasing delay to 4000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2478 ms to process. Increasing delay to 4000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6336 ms. Increasing delay to 19008 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5720 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1806 ms. Decreasing delay to 3806 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2688 ms. Increasing delay to 8064 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1254 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1153 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 8161 ms. Increasing delay to 24483 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2068 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 396 ms. Decreasing delay to 2396 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5430 ms. Increasing delay to 16290 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1027 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1413 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 588 ms. Decreasing delay to 2588 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1664 ms. Increasing delay to 4992 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2619 ms. Increasing delay to 7857 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 8876 ms. Increasing delay to 26628 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 6840 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2596 ms to process. Increasing delay to 4000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2139 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 786 ms. Decreasing delay to 2786 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2458 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 20275 ms. Increasing delay to 60825 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2210 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 7148 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 49 ms. Decreasing delay to 2049 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2122 ms. Increasing delay to 6366 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3462 ms. Increasing delay to 10386 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 165 ms. Decreasing delay to 2165 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1826 ms. Increasing delay to 5478 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3215 ms. Increasing delay to 9645 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 10704 ms. Increasing delay to 32112 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 205 ms. Decreasing delay to 2205 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1821 ms. Increasing delay to 5463 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3709 ms. Increasing delay to 11127 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5262 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1219 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1207 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 3568 ms to process. Increasing delay to 5000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6063 ms. Increasing delay to 18189 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 3568 ms to process. Increasing delay to 4000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1219 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 8481 ms to process. Increasing delay to 8000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2519 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1491 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5924 ms. Increasing delay to 17772 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6066 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 14 ms. Decreasing delay to 2014 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 9426 ms. Increasing delay to 28278 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2067 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7 ms. Decreasing delay to 2007 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2938 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2728 ms. Increasing delay to 8184 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4213 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3657 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 33146 ms. Increasing delay to 99438 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3337 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 12468 ms. Increasing delay to 37404 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1203 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1487 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1547 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 556 ms. Decreasing delay to 2556 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  8982 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 9399 ms. Increasing delay to 10000 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 84 MB. Current time: 6/17/20, 2:09:21 PM ART
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2585 ms. Increasing delay to 7755 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4945 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1343 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1083 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1115 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1074 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1685 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4012 ms. Increasing delay to 12036 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3890 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1139 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 3095 ms to process. Increasing delay to 5000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1044 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1100 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1554 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 10 ms. Decreasing delay to 2010 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4609 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2765 ms. Increasing delay to 8295 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1121 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3427 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1044 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1068 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3716 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 6097 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1349 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5037 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1817 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 3257 ms to process. Increasing delay to 6000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1632 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1267 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 8340 ms. Increasing delay to 25020 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3179 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 15 ms. Decreasing delay to 2015 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3693 ms. Increasing delay to 11079 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2378 ms to process. Increasing delay to 5000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 411 ms. Decreasing delay to 2411 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 34 ms. Decreasing delay to 2034 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1734 ms. Increasing delay to 5202 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1352 ms. Increasing delay to 4056 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3182 ms. Increasing delay to 9546 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6020 ms. Increasing delay to 18060 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4691 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 26601 ms. Increasing delay to 79803 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  10028 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1608 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5300 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4900 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 23 ms. Decreasing delay to 2023 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4646 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1627 ms. Increasing delay to 4881 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 67 ms. Decreasing delay to 2067 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1947 ms. Increasing delay to 5841 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3535 ms. Increasing delay to 10605 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3629 ms. Increasing delay to 10887 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 50 ms. Decreasing delay to 2050 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 84 ms. Decreasing delay to 2084 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1114 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1023 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2161 ms. Increasing delay to 6483 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2068 ms. Increasing delay to 6204 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1661 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5954 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1205 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1678 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7818 ms. Increasing delay to 23454 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1138 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6173 ms. Increasing delay to 18519 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5315 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 297 ms. Decreasing delay to 2297 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 14 ms. Decreasing delay to 2014 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6755 ms. Increasing delay to 20265 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4947 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 9355 ms. Increasing delay to 28065 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 348 ms. Decreasing delay to 2348 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3404 ms. Increasing delay to 10212 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1479 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 107 ms. Decreasing delay to 2107 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 13 ms. Decreasing delay to 2013 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  12851 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 84 MB. Current time: 6/17/20, 2:39:19 PM ART
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1066 ms. Increasing delay to 3198 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3277 ms. Increasing delay to 9831 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1090 ms. Increasing delay to 3270 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1751 ms. Increasing delay to 5253 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1068 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 4571 ms to process. Increasing delay to 6000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  8971 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 10538 ms to process. Increasing delay to 9000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  8355 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4605 ms. Increasing delay to 13815 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1994 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 4910 ms to process. Increasing delay to 8000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2511 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 180 ms. Decreasing delay to 2180 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4260 ms. Increasing delay to 12780 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 735 ms. Decreasing delay to 2735 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 9313 ms. Increasing delay to 27939 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4117 ms. Increasing delay to 12351 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 153 ms. Decreasing delay to 2153 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1306 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1761 ms. Increasing delay to 5283 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1139 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1549 ms. Decreasing delay to 3549 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2211 ms. Increasing delay to 6633 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1387 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2865 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5220 ms. Increasing delay to 15660 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2028 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1546 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 62 ms. Decreasing delay to 2062 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2473 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4381 ms. Increasing delay to 13143 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1805 ms. Decreasing delay to 3805 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4472 ms. Increasing delay to 13416 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 22 ms. Decreasing delay to 2022 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1197 ms. Increasing delay to 3591 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1853 ms. Increasing delay to 5559 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2929 ms. Increasing delay to 8787 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2889 ms. Increasing delay to 8667 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1454 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6026 ms. Increasing delay to 18078 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1308 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1245 ms. Decreasing delay to 3245 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3115 ms. Increasing delay to 9345 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5255 ms. Increasing delay to 15765 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 572 ms. Decreasing delay to 2572 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2290 ms. Increasing delay to 6870 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1561 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4223 ms. Increasing delay to 12669 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 611 ms. Decreasing delay to 2611 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1379 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2165 ms. Increasing delay to 6495 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1183 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1371 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3889 ms. Increasing delay to 11667 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1215 ms. Decreasing delay to 3215 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2921 ms. Increasing delay to 8763 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3138 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1085 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2753 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1512 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1130 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  12696 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 84 MB. Current time: 6/17/20, 3:09:20 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  2525 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4919 ms. Increasing delay to 14757 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 9845 ms. Increasing delay to 29535 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1850 ms. Decreasing delay to 3850 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2535 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1715 ms. Decreasing delay to 3715 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2314 ms. Increasing delay to 6942 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3858 ms. Increasing delay to 11574 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1393 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 806 ms. Decreasing delay to 2806 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1436 ms. Increasing delay to 4308 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1202 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2763 ms. Increasing delay to 8289 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2468 ms. Increasing delay to 7404 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1321 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1110 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1639 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 8049 ms. Increasing delay to 24147 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1346 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 7059 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1484 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5806 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 877 ms. Decreasing delay to 2877 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2853 ms. Increasing delay to 8559 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5983 ms. Increasing delay to 17949 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1496 ms. Decreasing delay to 3496 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2591 ms. Increasing delay to 7773 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2593 ms to process. Increasing delay to 6000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1890 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  14881 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 84 MB. Current time: 6/17/20, 3:39:24 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  34987 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 84 MB. Current time: 6/17/20, 4:09:10 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 85 MB. Current time: 6/17/20, 4:39:10 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 84 MB. Current time: 6/17/20, 5:09:10 PM ART
// Elapsed time: 80525 seconds
selectCodeEditor("CONTROL_SIGNALS.v", 236, 120); // ch (w, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 9); // i (h, cr)
selectCodeEditor("IDECODE.v", 193, 208); // ch (w, cr)
selectCodeEditor("IDECODE.v", 193, 208, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 227, 233); // ch (w, cr)
selectCodeEditor("IDECODE.v", 227, 233, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 192, 215); // ch (w, cr)
selectCodeEditor("IDECODE.v", 192, 215, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 214, 223); // ch (w, cr)
selectCodeEditor("IDECODE.v", 214, 223, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 158, 213); // ch (w, cr)
selectCodeEditor("IDECODE.v", 158, 213, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 159, 157); // ch (w, cr)
selectCodeEditor("IDECODE.v", 159, 157, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 165, 61); // ch (w, cr)
selectCodeEditor("IDECODE.v", 165, 61, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 196, 255); // ch (w, cr)
selectCodeEditor("IDECODE.v", 196, 255, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 211, 278); // ch (w, cr)
selectCodeEditor("IDECODE.v", 211, 278, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 200, 260); // ch (w, cr)
selectCodeEditor("IDECODE.v", 200, 259, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 194, 111); // ch (w, cr)
selectCodeEditor("IDECODE.v", 194, 111, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 21 seconds
selectComboBox("FindAndReplaceDialog.cr_Find what:", "i_pcBranch", -1); // JComboBox (cr, FindAndReplaceDialog)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), PC_MUX : PC_MUX (PC_MUX.v)]", 2, false); // B (F, cr)
// Tcl Message: current_project MIPS_2020 
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), PC_MUX : PC_MUX (PC_MUX.v)]", 2, false, false, false, false, false, true); // B (F, cr) - Double Click
selectCodeEditor("PC_MUX.v", 170, 61); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 170, 61, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("PC_MUX.v", 208, 130); // ch (w, cr)
selectCodeEditor("PC_MUX.v", 208, 130, false, false, false, false, true); // ch (w, cr) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v)]", 1, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v)]", 1, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v)]", 1, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
selectCodeEditor("IFETCH.v", 89, 90); // ch (w, cr)
selectCodeEditor("IFETCH.v", 89, 90, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 188, 128); // ch (w, cr)
selectCodeEditor("IFETCH.v", 188, 128, false, false, false, false, true); // ch (w, cr) - Double Click
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("IFETCH.v", 166, 142); // ch (w, cr)
selectCodeEditor("IFETCH.v", 159, 131); // ch (w, cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 9); // i (h, cr)
// Elapsed time: 10 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "i_pcBranch", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("IDECODE.v", 232, 218); // ch (w, cr)
selectCodeEditor("IDECODE.v", 182, 73); // ch (w, cr)
selectCodeEditor("IDECODE.v", 182, 73, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 92, 89); // ch (w, cr)
selectCodeEditor("IDECODE.v", 92, 89, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 19 seconds
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("IDECODE.v", 85, 92); // ch (w, cr)
selectCodeEditor("IDECODE.v", 85, 92, false, false, false, false, true); // ch (w, cr) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v)]", 1, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v)]", 1, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
selectCodeEditor("IFETCH.v", 143, 95); // ch (w, cr)
selectCodeEditor("IFETCH.v", 143, 95, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 12 seconds
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IDECODE (IDECODE.v)]", 6); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IDECODE (IDECODE.v), CONTROL_SIGNAL : xil_defaultlib.CONTROL_SIGNAL]", 7, false); // B (F, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
closeView(PAResourceOtoP.PAViews_CODE, "Code"); // B
closeView(PAResourceOtoP.PAViews_CODE, "Code"); // B
closeView(PAResourceOtoP.PAViews_CODE, "Code"); // B
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "ALU_CONTROL.v", 2); // i (h, cr)
closeView(PAResourceOtoP.PAViews_CODE, "Code"); // B
selectCodeEditor("CONTROL_SIGNALS.v", 146, 182); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 146, 182, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 158, 196); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 158, 196, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "RW_REGISTERS.v", 3); // i (h, cr)
selectCodeEditor("RW_REGISTERS.v", 201, 164); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 201, 164, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 122, 199); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 122, 199, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "RW_REGISTERS.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 5); // i (h, cr)
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "i_regWrite", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 13 seconds
selectCodeEditor("IDECODE.v", 118, 208); // ch (w, cr)
selectCodeEditor("IDECODE.v", 259, 198); // ch (w, cr)
selectCodeEditor("IDECODE.v", 213, 190); // ch (w, cr)
selectCodeEditor("IDECODE.v", 213, 190, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 104, 196); // ch (w, cr)
selectCodeEditor("IDECODE.v", 104, 196, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 215, 201); // ch (w, cr)
selectCodeEditor("IDECODE.v", 215, 201, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 135, 203); // ch (w, cr)
selectCodeEditor("IDECODE.v", 135, 203, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 210, 195); // ch (w, cr)
selectCodeEditor("IDECODE.v", 210, 195, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 166, 147); // ch (w, cr)
selectCodeEditor("IDECODE.v", 166, 147, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "RW_REGISTERS.v", 3); // i (h, cr)
selectCodeEditor("RW_REGISTERS.v", 198, 268); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 198, 268, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "RW_REGISTERS.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "HAZARD_DETECTION.v", 4); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 5); // i (h, cr)
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "i_writeData", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("IDECODE.v", 266, 281); // ch (w, cr)
selectCodeEditor("IDECODE.v", 152, 193); // ch (w, cr)
selectCodeEditor("IDECODE.v", 152, 193, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "RW_REGISTERS.v", 3); // i (h, cr)
selectCodeEditor("RW_REGISTERS.v", 227, 297); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 227, 297, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 161, 213); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 161, 213, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 178, 247); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 178, 247, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "RW_REGISTERS.v", 'c'); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 5); // i (h, cr)
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "i_writeRegister", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("IDECODE.v", 89, 124); // ch (w, cr)
selectCodeEditor("IDECODE.v", 89, 124, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 29 seconds
selectCodeEditor("IDECODE.v", 124, 248); // ch (w, cr)
selectCodeEditor("IDECODE.v", 124, 248, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 10 seconds
selectCodeEditor("IDECODE.v", 197, 231); // ch (w, cr)
selectCodeEditor("IDECODE.v", 197, 231, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 176, 188); // ch (w, cr)
selectCodeEditor("IDECODE.v", 176, 188, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 84, 145); // ch (w, cr)
selectCodeEditor("IDECODE.v", 84, 145, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 10 seconds
selectCodeEditor("IDECODE.v", 69, 297); // ch (w, cr)
selectCodeEditor("IDECODE.v", 89, 301); // ch (w, cr)
selectCodeEditor("IDECODE.v", 89, 301, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 17 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "i_flush", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("IDECODE.v", 226, 281); // ch (w, cr)
selectCodeEditor("IDECODE.v", 48, 134); // ch (w, cr)
selectCodeEditor("IDECODE.v", 56, 144); // ch (w, cr)
selectCodeEditor("IDECODE.v", 90, 300); // ch (w, cr)
selectCodeEditor("IDECODE.v", 58, 299); // ch (w, cr)
typeControlKey((HResource) null, "IDECODE.v", 'c'); // ch (w, cr)
typeControlKey((HResource) null, "IDECODE.v", 'v'); // ch (w, cr)
// Elapsed time: 15 seconds
selectCodeEditor("IDECODE.v", 111, 194); // ch (w, cr)
selectCodeEditor("IDECODE.v", 111, 194, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "RW_REGISTERS.v", 4); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "HAZARD_DETECTION.v", 3); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 5); // i (h, cr)
// Elapsed time: 18 seconds
selectCodeEditor("IDECODE.v", 260, 199); // ch (w, cr)
selectCodeEditor("IDECODE.v", 260, 199, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 267, 218); // ch (w, cr)
selectCodeEditor("IDECODE.v", 267, 218, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 146, 213); // ch (w, cr)
selectCodeEditor("IDECODE.v", 146, 213); // ch (w, cr)
selectCodeEditor("IDECODE.v", 233, 214); // ch (w, cr)
selectCodeEditor("IDECODE.v", 233, 214, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 145, 219); // ch (w, cr)
selectCodeEditor("IDECODE.v", 145, 219, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 259, 215); // ch (w, cr)
selectCodeEditor("IDECODE.v", 259, 215, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 166, 232); // ch (w, cr)
selectCodeEditor("IDECODE.v", 166, 232, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 147, 315); // ch (w, cr)
selectCodeEditor("IDECODE.v", 147, 315, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 263, 314); // ch (w, cr)
selectCodeEditor("IDECODE.v", 263, 314, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 142, 315); // ch (w, cr)
selectCodeEditor("IDECODE.v", 142, 315, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 233, 315); // ch (w, cr)
selectCodeEditor("IDECODE.v", 233, 315, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 144, 321); // ch (w, cr)
selectCodeEditor("IDECODE.v", 146, 321, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 196, 316); // ch (w, cr)
selectCodeEditor("IDECODE.v", 233, 315); // ch (w, cr)
selectCodeEditor("IDECODE.v", 233, 315, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 140, 314); // ch (w, cr)
selectCodeEditor("IDECODE.v", 140, 314, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 202, 216); // ch (w, cr)
selectCodeEditor("IDECODE.v", 142, 161); // ch (w, cr)
selectCodeEditor("IDECODE.v", 142, 161, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 163, 219); // ch (w, cr)
selectCodeEditor("IDECODE.v", 163, 219, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 151, 78); // ch (w, cr)
selectCodeEditor("IDECODE.v", 151, 78, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 264, 365); // ch (w, cr)
selectCodeEditor("IDECODE.v", 266, 361, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 135, 360); // ch (w, cr)
selectCodeEditor("IDECODE.v", 135, 360, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 254, 368); // ch (w, cr)
selectCodeEditor("IDECODE.v", 254, 368, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 176, 371); // ch (w, cr)
selectCodeEditor("IDECODE.v", 176, 371, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 255, 359); // ch (w, cr)
selectCodeEditor("IDECODE.v", 255, 359, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 101, 246); // ch (w, cr)
selectCodeEditor("IDECODE.v", 101, 246, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectCodeEditor("IFETCH.v", 156, 280); // ch (w, cr)
selectCodeEditor("IFETCH.v", 156, 280, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 284, 282); // ch (w, cr)
selectCodeEditor("IFETCH.v", 284, 282, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 156, 278); // ch (w, cr)
selectCodeEditor("IFETCH.v", 156, 278, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 307, 281); // ch (w, cr)
selectCodeEditor("IFETCH.v", 284, 281); // ch (w, cr)
selectCodeEditor("IFETCH.v", 284, 281, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 185, 277); // ch (w, cr)
selectCodeEditor("IFETCH.v", 185, 277, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 139, 123); // ch (w, cr)
selectCodeEditor("IFETCH.v", 139, 123, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 10 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 5); // i (h, cr)
// Elapsed time: 12 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IFETCH.v", 1); // i (h, cr)
selectCodeEditor("IFETCH.v", 197, 132); // ch (w, cr)
selectCodeEditor("IFETCH.v", 197, 132, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IFETCH.v", 194, 134); // ch (w, cr)
selectCodeEditor("IFETCH.v", 189, 128); // ch (w, cr)
selectCodeEditor("IFETCH.v", 99, 132); // ch (w, cr)
selectCodeEditor("IFETCH.v", 201, 126); // ch (w, cr)
selectCodeEditor("IFETCH.v", 202, 126); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 5); // i (h, cr)
// Elapsed time: 32 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "i_haltFlag_ID", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
selectCodeEditor("IDECODE.v", 172, 112); // ch (w, cr)
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
selectCodeEditor("IDECODE.v", 93, 229); // ch (w, cr)
selectCodeEditor("IDECODE.v", 93, 229, false, false, false, false, true); // ch (w, cr) - Double Click
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("IDECODE.v", 235, 139); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "HAZARD_DETECTION.v", 3); // i (h, cr)
selectCodeEditor("HAZARD_DETECTION.v", 159, 184); // ch (w, cr)
selectCodeEditor("HAZARD_DETECTION.v", 171, 182); // ch (w, cr)
// Elapsed time: 267 seconds
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("HAZARD_DETECTION.v", 182, 220); // ch (w, cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 5); // i (h, cr)
selectCodeEditor("IDECODE.v", 173, 91); // ch (w, cr)
selectCodeEditor("IDECODE.v", 173, 91, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 186, 102); // ch (w, cr)
selectCodeEditor("IDECODE.v", 178, 174); // ch (w, cr)
selectCodeEditor("IDECODE.v", 147, 145); // ch (w, cr)
selectCodeEditor("IDECODE.v", 175, 182); // ch (w, cr)
selectCodeEditor("IDECODE.v", 175, 162); // ch (w, cr)
selectCodeEditor("IDECODE.v", 267, 163); // ch (w, cr)
// Elapsed time: 13 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_pcBranch", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 12 seconds
selectCodeEditor("IDECODE.v", 178, 157); // ch (w, cr)
selectCodeEditor("IDECODE.v", 178, 157, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 16 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_pcJump", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 24 seconds
selectCodeEditor("IDECODE.v", 234, 279); // ch (w, cr)
selectCodeEditor("IDECODE.v", 234, 279, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 22 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_pcJumpRegister", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("IDECODE.v", 166, 277); // ch (w, cr)
selectCodeEditor("IDECODE.v", 166, 277, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "RW_REGISTERS.v", 4); // i (h, cr)
selectCodeEditor("RW_REGISTERS.v", 205, 164); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 205, 164, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 5); // i (h, cr)
// Elapsed time: 25 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_register1", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Close", "Close"); // JButton (cr, FindAndReplaceDialog)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "RW_REGISTERS.v", 4); // i (h, cr)
selectCodeEditor("RW_REGISTERS.v", 193, 181); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 193, 181, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 5); // i (h, cr)
selectCodeEditor("IDECODE.v", 163, 183); // ch (w, cr)
selectCodeEditor("IDECODE.v", 163, 183, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 179, 79); // ch (w, cr)
selectCodeEditor("IDECODE.v", 148, 79); // ch (w, cr)
// Elapsed time: 21 seconds
selectCodeEditor("IDECODE.v", 352, 106); // ch (w, cr)
selectCodeEditor("IDECODE.v", 352, 106, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 218, 164); // ch (w, cr)
selectCodeEditor("IDECODE.v", 218, 164, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 138, 167); // ch (w, cr)
selectCodeEditor("IDECODE.v", 138, 167, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 223, 166); // ch (w, cr)
selectCodeEditor("IDECODE.v", 223, 166, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 102, 62); // ch (w, cr)
selectCodeEditor("IDECODE.v", 102, 62, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 188, 62); // ch (w, cr)
selectCodeEditor("IDECODE.v", 188, 62, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 194, 59); // ch (w, cr)
selectCodeEditor("IDECODE.v", 194, 59, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 247, 61); // ch (w, cr)
selectCodeEditor("IDECODE.v", 247, 61, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 184, 61); // ch (w, cr)
selectCodeEditor("IDECODE.v", 184, 61, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 324, 62); // ch (w, cr)
selectCodeEditor("IDECODE.v", 324, 62, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 161, 64); // ch (w, cr)
selectCodeEditor("IDECODE.v", 161, 64, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 245, 57); // ch (w, cr)
selectCodeEditor("IDECODE.v", 245, 57, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 256, 75); // ch (w, cr)
selectCodeEditor("IDECODE.v", 256, 75, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 158, 81); // ch (w, cr)
selectCodeEditor("IDECODE.v", 158, 81, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 110, 129); // ch (w, cr)
selectCodeEditor("IDECODE.v", 110, 129, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 105, 108); // ch (w, cr)
selectCodeEditor("IDECODE.v", 105, 108, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 11 seconds
selectCodeEditor("IDECODE.v", 334, 217); // ch (w, cr)
selectCodeEditor("IDECODE.v", 334, 217, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 132, 217); // ch (w, cr)
selectCodeEditor("IDECODE.v", 132, 217, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 11 seconds
selectCodeEditor("IDECODE.v", 179, 105); // ch (w, cr)
selectCodeEditor("IDECODE.v", 179, 105, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 162, 106); // ch (w, cr)
selectCodeEditor("IDECODE.v", 134, 110); // ch (w, cr)
selectCodeEditor("IDECODE.v", 151, 217); // ch (w, cr)
selectCodeEditor("IDECODE.v", 151, 217, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 132, 210); // ch (w, cr)
selectCodeEditor("IDECODE.v", 132, 210, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 208, 210); // ch (w, cr)
selectCodeEditor("IDECODE.v", 208, 210, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 103, 56); // ch (w, cr)
selectCodeEditor("IDECODE.v", 103, 56, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 108, 79); // ch (w, cr)
selectCodeEditor("IDECODE.v", 108, 79, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 330, 59); // ch (w, cr)
selectCodeEditor("IDECODE.v", 330, 59, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 325, 75); // ch (w, cr)
selectCodeEditor("IDECODE.v", 325, 75, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 114, 57); // ch (w, cr)
selectCodeEditor("IDECODE.v", 114, 57, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 136, 367); // ch (w, cr)
selectCodeEditor("IDECODE.v", 136, 367, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 135, 379); // ch (w, cr)
selectCodeEditor("IDECODE.v", 135, 379, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 140, 368); // ch (w, cr)
selectCodeEditor("IDECODE.v", 140, 368, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 234, 369); // ch (w, cr)
selectCodeEditor("IDECODE.v", 234, 369, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 136, 367); // ch (w, cr)
selectCodeEditor("IDECODE.v", 136, 367, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 23 seconds
selectCodeEditor("IDECODE.v", 167, 127); // ch (w, cr)
selectCodeEditor("IDECODE.v", 167, 127, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 90, 127); // ch (w, cr)
selectCodeEditor("IDECODE.v", 90, 127, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 177, 182); // ch (w, cr)
selectCodeEditor("IDECODE.v", 177, 182); // ch (w, cr)
selectCodeEditor("IDECODE.v", 178, 197); // ch (w, cr)
selectCodeEditor("IDECODE.v", 178, 197, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 180, 181); // ch (w, cr)
selectCodeEditor("IDECODE.v", 180, 181, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 107, 175); // ch (w, cr)
selectCodeEditor("IDECODE.v", 177, 179); // ch (w, cr)
selectCodeEditor("IDECODE.v", 177, 179, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 192, 197); // ch (w, cr)
selectCodeEditor("IDECODE.v", 192, 197, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 191, 217); // ch (w, cr)
selectCodeEditor("IDECODE.v", 191, 217, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 183, 128); // ch (w, cr)
selectCodeEditor("IDECODE.v", 183, 128, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 19 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_registerData1", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 16 seconds
selectCodeEditor("IDECODE.v", 182, 126); // ch (w, cr)
selectCodeEditor("IDECODE.v", 182, 126, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 10 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_registerData2", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("IDECODE.v", 208, 191); // ch (w, cr)
selectCodeEditor("IDECODE.v", 208, 191, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 223, 176); // ch (w, cr)
selectCodeEditor("IDECODE.v", 226, 180); // ch (w, cr)
selectCodeEditor("IDECODE.v", 226, 180, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 240, 177); // ch (w, cr)
selectCodeEditor("IDECODE.v", 240, 177, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 10 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_signExtend", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 23 seconds
selectCodeEditor("IDECODE.v", 231, 267); // ch (w, cr)
selectCodeEditor("IDECODE.v", 185, 281); // ch (w, cr)
selectCodeEditor("IDECODE.v", 185, 281, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 164, 288); // ch (w, cr)
selectCodeEditor("IDECODE.v", 164, 282); // ch (w, cr)
selectCodeEditor("IDECODE.v", 210, 282); // ch (w, cr)
// Elapsed time: 11 seconds
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
selectComboBox("FindAndReplaceDialog.cr_Find what:", "o_rt", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Close", "Close"); // JButton (cr, FindAndReplaceDialog)
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_rt", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 10 seconds
selectCodeEditor("IDECODE.v", 186, 124); // ch (w, cr)
selectCodeEditor("IDECODE.v", 186, 124, false, false, false, false, true); // ch (w, cr) - Double Click
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_rd", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("IDECODE.v", 182, 178); // ch (w, cr)
selectCodeEditor("IDECODE.v", 182, 178, false, false, false, false, true); // ch (w, cr) - Double Click
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_rs", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("IDECODE.v", 185, 178); // ch (w, cr)
selectCodeEditor("IDECODE.v", 185, 178, false, false, false, false, true); // ch (w, cr) - Double Click
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_shamt", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 57 seconds
selectCodeEditor("IDECODE.v", 203, 160); // ch (w, cr)
selectCodeEditor("IDECODE.v", 203, 160, false, false, false, false, true); // ch (w, cr) - Double Click
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 90 MB. Current time: 6/17/20, 5:39:11 PM ART
// Elapsed time: 43 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_register1Recolector", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("IDECODE.v", 108, 190); // ch (w, cr)
selectCodeEditor("IDECODE.v", 108, 190, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 274, 195); // ch (w, cr)
selectCodeEditor("IDECODE.v", 274, 195, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 147, 249); // ch (w, cr)
selectCodeEditor("IDECODE.v", 147, 249, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 121, 114); // ch (w, cr)
selectCodeEditor("IDECODE.v", 121, 114, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IDECODE.v", 'c'); // ch (w, cr)
selectCodeEditor("IDECODE.v", 142, 246); // ch (w, cr)
selectCodeEditor("IDECODE.v", 142, 246, false, false, false, false, true); // ch (w, cr) - Double Click
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_haltFlag_ID", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("IDECODE.v", 114, 168); // ch (w, cr)
selectCodeEditor("IDECODE.v", 263, 248); // ch (w, cr)
selectCodeEditor("IDECODE.v", 263, 248, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 254, 265); // ch (w, cr)
selectCodeEditor("IDECODE.v", 254, 265, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 263, 288); // ch (w, cr)
selectCodeEditor("IDECODE.v", 263, 288, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 100, 213); // ch (w, cr)
selectCodeEditor("IDECODE.v", 100, 213, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 12 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_flagJump", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("IDECODE.v", 125, 196); // ch (w, cr)
selectCodeEditor("IDECODE.v", 141, 321); // ch (w, cr)
selectCodeEditor("IDECODE.v", 141, 321, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 143, 321); // ch (w, cr)
selectCodeEditor("IDECODE.v", 143, 321, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 11 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_flagJumpRegister", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("IDECODE.v", 161, 316); // ch (w, cr)
selectCodeEditor("IDECODE.v", 161, 316, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 275, 320); // ch (w, cr)
selectCodeEditor("IDECODE.v", 275, 320, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 160, 311); // ch (w, cr)
selectCodeEditor("IDECODE.v", 160, 311, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 131, 91); // ch (w, cr)
selectCodeEditor("IDECODE.v", 131, 91, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 124, 112); // ch (w, cr)
selectCodeEditor("IDECODE.v", 124, 112, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 273, 311); // ch (w, cr)
selectCodeEditor("IDECODE.v", 273, 311, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 12 seconds
selectCodeEditor("IDECODE.v", 141, 284); // ch (w, cr)
selectCodeEditor("IDECODE.v", 141, 284, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 22 seconds
selectCodeEditor("IDECODE.v", 158, 267); // ch (w, cr)
selectCodeEditor("IDECODE.v", 158, 267, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 151, 285); // ch (w, cr)
selectCodeEditor("IDECODE.v", 151, 285, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 151, 300); // ch (w, cr)
selectCodeEditor("IDECODE.v", 151, 300, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 148, 262); // ch (w, cr)
selectCodeEditor("IDECODE.v", 148, 262, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 268, 46); // ch (w, cr)
selectCodeEditor("IDECODE.v", 268, 46, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 27, 45); // ch (w, cr)
selectCodeEditor("IDECODE.v", 236, 45); // ch (w, cr)
selectCodeEditor("IDECODE.v", 236, 45, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 262, 60); // ch (w, cr)
selectCodeEditor("IDECODE.v", 262, 60); // ch (w, cr)
selectCodeEditor("IDECODE.v", 263, 61); // ch (w, cr)
selectCodeEditor("IDECODE.v", 263, 61, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 126, 214); // ch (w, cr)
selectCodeEditor("IDECODE.v", 126, 214, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 270, 262); // ch (w, cr)
selectCodeEditor("IDECODE.v", 270, 262, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 10 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_executeBus", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 27 seconds
selectCodeEditor("IDECODE.v", 259, 250); // ch (w, cr)
selectCodeEditor("IDECODE.v", 259, 250, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 10 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_memoryBus", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 22 seconds
selectCodeEditor("IDECODE.v", 157, 318); // ch (w, cr)
selectCodeEditor("IDECODE.v", 152, 294); // ch (w, cr)
selectCodeEditor("IDECODE.v", 152, 294, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 223, 102); // ch (w, cr)
selectCodeEditor("IDECODE.v", 86, 94); // ch (w, cr)
selectCodeEditor("IDECODE.v", 231, 94); // ch (w, cr)
selectCodeEditor("IDECODE.v", 231, 94, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 278, 95); // ch (w, cr)
selectCodeEditor("IDECODE.v", 285, 94); // ch (w, cr)
selectCodeEditor("IDECODE.v", 293, 93); // ch (w, cr)
selectCodeEditor("IDECODE.v", 139, 93); // ch (w, cr)
selectCodeEditor("IDECODE.v", 139, 93, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 13 seconds
selectCodeEditor("IDECODE.v", 283, 143); // ch (w, cr)
selectCodeEditor("IDECODE.v", 283, 143, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 14 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_writeBackBus", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 12 seconds
selectCodeEditor("IDECODE.v", 213, 343); // ch (w, cr)
selectCodeEditor("IDECODE.v", 213, 343, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 234, 350); // ch (w, cr)
selectCodeEditor("IDECODE.v", 184, 327); // ch (w, cr)
selectCodeEditor("IDECODE.v", 184, 327); // ch (w, cr)
selectCodeEditor("IDECODE.v", 198, 319); // ch (w, cr)
selectCodeEditor("IDECODE.v", 198, 319, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 214, 352); // ch (w, cr)
selectCodeEditor("IDECODE.v", 214, 352, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 12 seconds
selectCodeEditor("IDECODE.v", 396, 282); // ch (w, cr)
selectCodeEditor("IDECODE.v", 396, 282, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 75, 283); // ch (w, cr)
selectCodeEditor("IDECODE.v", 372, 282); // ch (w, cr)
selectCodeEditor("IDECODE.v", 372, 282, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 386, 279); // ch (w, cr)
selectCodeEditor("IDECODE.v", 386, 279, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 62, 288); // ch (w, cr)
// Elapsed time: 15 seconds
selectCodeEditor("IDECODE.v", 324, 309); // ch (w, cr)
selectCodeEditor("IDECODE.v", 168, 285); // ch (w, cr)
selectCodeEditor("IDECODE.v", 254, 282); // ch (w, cr)
selectCodeEditor("IDECODE.v", 358, 282); // ch (w, cr)
selectCodeEditor("IDECODE.v", 365, 282); // ch (w, cr)
selectCodeEditor("IDECODE.v", 457, 279); // ch (w, cr)
selectCodeEditor("IDECODE.v", 457, 279, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 543, 282); // ch (w, cr)
selectCodeEditor("IDECODE.v", 543, 282); // ch (w, cr)
selectCodeEditor("IDECODE.v", 578, 286); // ch (w, cr)
selectCodeEditor("IDECODE.v", 468, 291); // ch (w, cr)
selectCodeEditor("IDECODE.v", 481, 282); // ch (w, cr)
selectCodeEditor("IDECODE.v", 481, 282, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 96, 263); // ch (w, cr)
selectCodeEditor("IDECODE.v", 96, 263, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 477, 283); // ch (w, cr)
selectCodeEditor("IDECODE.v", 477, 283, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 152, 158); // ch (w, cr)
selectCodeEditor("IDECODE.v", 152, 158, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 233, 213); // ch (w, cr)
selectCodeEditor("IDECODE.v", 233, 213, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 136, 209); // ch (w, cr)
selectCodeEditor("IDECODE.v", 136, 209, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 205, 214); // ch (w, cr)
selectCodeEditor("IDECODE.v", 205, 214, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 491, 83); // ch (w, cr)
selectCodeEditor("IDECODE.v", 491, 83, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 496, 77); // ch (w, cr)
selectCodeEditor("IDECODE.v", 496, 77, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 117, 63); // ch (w, cr)
selectCodeEditor("IDECODE.v", 117, 63, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 27 seconds
selectCodeEditor("IDECODE.v", 487, 71); // ch (w, cr)
selectCodeEditor("IDECODE.v", 487, 71, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 477, 78); // ch (w, cr)
selectCodeEditor("IDECODE.v", 477, 78, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 131, 53); // ch (w, cr)
selectCodeEditor("IDECODE.v", 131, 53, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 184, 64); // ch (w, cr)
selectCodeEditor("IDECODE.v", 185, 64, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 224, 60); // ch (w, cr)
selectCodeEditor("IDECODE.v", 224, 60, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 25, 131); // ch (w, cr)
selectCodeEditor("IDECODE.v", 108, 113); // ch (w, cr)
selectCodeEditor("IDECODE.v", 108, 113, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 143 seconds
selectComboBox("FindAndReplaceDialog.cr_Find what:", "w_muxControl", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Close", "Close"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 13 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "w_muxControl", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 37 seconds
selectCodeEditor("IDECODE.v", 211, 251); // ch (w, cr)
// Elapsed time: 17 seconds
selectCodeEditor("IDECODE.v", 126, 247); // ch (w, cr)
selectCodeEditor("IDECODE.v", 126, 247, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 440, 244); // ch (w, cr)
selectCodeEditor("IDECODE.v", 483, 259); // ch (w, cr)
selectCodeEditor("IDECODE.v", 483, 259, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 293, 248); // ch (w, cr)
// Elapsed time: 11 seconds
selectCodeEditor("IDECODE.v", 380, 244); // ch (w, cr)
selectCodeEditor("IDECODE.v", 380, 244, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 171, 178); // ch (w, cr)
selectCodeEditor("IDECODE.v", 171, 178, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 236, 109); // ch (w, cr)
selectCodeEditor("IDECODE.v", 236, 109, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 252, 123); // ch (w, cr)
selectCodeEditor("IDECODE.v", 252, 123, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 252, 147); // ch (w, cr)
selectCodeEditor("IDECODE.v", 252, 147, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 235, 177); // ch (w, cr)
selectCodeEditor("IDECODE.v", 235, 177, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 191, 198); // ch (w, cr)
selectCodeEditor("IDECODE.v", 191, 198, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 200, 217); // ch (w, cr)
selectCodeEditor("IDECODE.v", 200, 217, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 38, 154); // ch (w, cr)
selectCodeEditor("IDECODE.v", 527, 352); // ch (w, cr)
selectCodeEditor("IDECODE.v", 266, 3); // ch (w, cr)
selectCodeEditor("IDECODE.v", 266, 3, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 455, 193); // ch (w, cr)
selectCodeEditor("IDECODE.v", 263, 7); // ch (w, cr)
selectCodeEditor("IDECODE.v", 263, 7, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 13 seconds
selectCodeEditor("IDECODE.v", 381, 144); // ch (w, cr)
selectCodeEditor("IDECODE.v", 381, 144, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 23, 158); // ch (w, cr)
selectCodeEditor("IDECODE.v", 263, 232); // ch (w, cr)
selectCodeEditor("IDECODE.v", 263, 232, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 263, 128); // ch (w, cr)
selectCodeEditor("IDECODE.v", 263, 128, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 28, 43); // ch (w, cr)
selectCodeEditor("IDECODE.v", 273, 333); // ch (w, cr)
selectCodeEditor("IDECODE.v", 273, 333, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 278, 207); // ch (w, cr)
selectCodeEditor("IDECODE.v", 278, 207, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 276, 206); // ch (w, cr)
selectCodeEditor("IDECODE.v", 276, 206, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 281, 215); // ch (w, cr)
selectCodeEditor("IDECODE.v", 281, 215, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 290, 73); // ch (w, cr)
selectCodeEditor("IDECODE.v", 290, 73, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 291, 73); // ch (w, cr)
selectCodeEditor("IDECODE.v", 291, 73, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 269, 216); // ch (w, cr)
selectCodeEditor("IDECODE.v", 269, 216, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 202, 176); // ch (w, cr)
selectCodeEditor("IDECODE.v", 202, 176, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 10 seconds
selectCodeEditor("IDECODE.v", 269, 242); // ch (w, cr)
selectCodeEditor("IDECODE.v", 277, 250); // ch (w, cr)
selectCodeEditor("IDECODE.v", 277, 250, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 290, 110); // ch (w, cr)
selectCodeEditor("IDECODE.v", 290, 110, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 34 seconds
selectCodeEditor("IDECODE.v", 159, 283); // ch (w, cr)
selectCodeEditor("IDECODE.v", 159, 283, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 138, 213); // ch (w, cr)
selectCodeEditor("IDECODE.v", 138, 213, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 71, 151); // ch (w, cr)
selectCodeEditor("IDECODE.v", 71, 151, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 126, 208); // ch (w, cr)
selectCodeEditor("IDECODE.v", 126, 208, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 106, 207); // ch (w, cr)
selectCodeEditor("IDECODE.v", 106, 207, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 11 seconds
selectCodeEditor("IDECODE.v", 27, 134); // ch (w, cr)
selectCodeEditor("IDECODE.v", 119, 147); // ch (w, cr)
selectCodeEditor("IDECODE.v", 119, 147, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 138, 209); // ch (w, cr)
selectCodeEditor("IDECODE.v", 138, 209); // ch (w, cr)
selectCodeEditor("IDECODE.v", 139, 216); // ch (w, cr)
selectCodeEditor("IDECODE.v", 139, 216, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 278, 118); // ch (w, cr)
selectCodeEditor("IDECODE.v", 278, 118, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 221, 335); // ch (w, cr)
selectCodeEditor("IDECODE.v", 317, 334); // ch (w, cr)
selectCodeEditor("IDECODE.v", 151, 331); // ch (w, cr)
selectCodeEditor("IDECODE.v", 152, 331, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 10 seconds
selectCodeEditor("IDECODE.v", 255, 329); // ch (w, cr)
selectCodeEditor("IDECODE.v", 255, 329, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 283, 334); // ch (w, cr)
selectCodeEditor("IDECODE.v", 564, 334); // ch (w, cr)
selectCodeEditor("IDECODE.v", 739, 328); // ch (w, cr)
selectCodeEditor("IDECODE.v", 761, 331); // ch (w, cr)
selectCodeEditor("IDECODE.v", 177, 331); // ch (w, cr)
selectCodeEditor("IDECODE.v", 177, 331, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 11 seconds
selectCodeEditor("IDECODE.v", 206, 230); // ch (w, cr)
selectCodeEditor("IDECODE.v", 207, 231, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 284, 311); // ch (w, cr)
selectCodeEditor("IDECODE.v", 284, 311, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 296, 333); // ch (w, cr)
selectCodeEditor("IDECODE.v", 285, 333); // ch (w, cr)
// Elapsed time: 14 seconds
selectCodeEditor("IDECODE.v", 206, 79); // ch (w, cr)
selectCodeEditor("IDECODE.v", 206, 79, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 201, 90); // ch (w, cr)
selectCodeEditor("IDECODE.v", 201, 90, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 194, 111); // ch (w, cr)
selectCodeEditor("IDECODE.v", 194, 111, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 289, 282); // ch (w, cr)
selectCodeEditor("IDECODE.v", 281, 281); // ch (w, cr)
selectCodeEditor("IDECODE.v", 560, 281); // ch (w, cr)
selectCodeEditor("IDECODE.v", 337, 284); // ch (w, cr)
selectCodeEditor("IDECODE.v", 284, 283); // ch (w, cr)
selectCodeEditor("IDECODE.v", 562, 283); // ch (w, cr)
// Elapsed time: 19 seconds
selectCodeEditor("IDECODE.v", 250, 281); // ch (w, cr)
selectCodeEditor("IDECODE.v", 250, 281, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 282, 283); // ch (w, cr)
selectCodeEditor("IDECODE.v", 161, 298); // ch (w, cr)
selectCodeEditor("IDECODE.v", 161, 298, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 778, 279); // ch (w, cr)
// Elapsed time: 21 seconds
selectCodeEditor("IDECODE.v", 330, 289); // ch (w, cr)
selectCodeEditor("IDECODE.v", 331, 295); // ch (w, cr)
selectCodeEditor("IDECODE.v", 331, 295, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 393, 298); // ch (w, cr)
selectCodeEditor("IDECODE.v", 393, 298, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 282, 299); // ch (w, cr)
selectCodeEditor("IDECODE.v", 464, 299); // ch (w, cr)
selectCodeEditor("IDECODE.v", 590, 299); // ch (w, cr)
// Elapsed time: 47 seconds
selectCodeEditor("IDECODE.v", 329, 298); // ch (w, cr)
selectCodeEditor("IDECODE.v", 329, 298, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 502, 299); // ch (w, cr)
selectCodeEditor("IDECODE.v", 502, 299, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 319, 301); // ch (w, cr)
selectCodeEditor("IDECODE.v", 319, 301, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 411, 296); // ch (w, cr)
selectCodeEditor("IDECODE.v", 411, 296, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 467, 302); // ch (w, cr)
selectCodeEditor("IDECODE.v", 459, 297); // ch (w, cr)
selectCodeEditor("IDECODE.v", 458, 302); // ch (w, cr)
selectCodeEditor("IDECODE.v", 375, 306); // ch (w, cr)
selectCodeEditor("IDECODE.v", 454, 300); // ch (w, cr)
selectCodeEditor("IDECODE.v", 464, 300); // ch (w, cr)
selectCodeEditor("IDECODE.v", 515, 324); // ch (w, cr)
selectCodeEditor("IDECODE.v", 732, 295); // ch (w, cr)
selectCodeEditor("IDECODE.v", 155, 297); // ch (w, cr)
selectCodeEditor("IDECODE.v", 155, 297, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 512, 298); // ch (w, cr)
selectCodeEditor("IDECODE.v", 512, 298); // ch (w, cr)
selectCodeEditor("IDECODE.v", 715, 298); // ch (w, cr)
selectCodeEditor("IDECODE.v", 732, 300); // ch (w, cr)
selectCodeEditor("IDECODE.v", 354, 305); // ch (w, cr)
selectCodeEditor("IDECODE.v", 485, 300); // ch (w, cr)
selectCodeEditor("IDECODE.v", 485, 300, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 511, 296); // ch (w, cr)
selectCodeEditor("IDECODE.v", 511, 296); // ch (w, cr)
selectCodeEditor("IDECODE.v", 511, 296, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 489, 303); // ch (w, cr)
selectCodeEditor("IDECODE.v", 462, 298); // ch (w, cr)
selectCodeEditor("IDECODE.v", 308, 302); // ch (w, cr)
selectCodeEditor("IDECODE.v", 308, 302); // ch (w, cr)
selectCodeEditor("IDECODE.v", 388, 298); // ch (w, cr)
selectCodeEditor("IDECODE.v", 388, 298, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 341, 296); // ch (w, cr)
selectCodeEditor("IDECODE.v", 341, 296, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 381, 294); // ch (w, cr)
selectCodeEditor("IDECODE.v", 381, 294, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 328, 304); // ch (w, cr)
selectCodeEditor("IDECODE.v", 389, 302); // ch (w, cr)
selectCodeEditor("IDECODE.v", 627, 300); // ch (w, cr)
selectCodeEditor("IDECODE.v", 627, 300, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 10 seconds
selectCodeEditor("IDECODE.v", 241, 280); // ch (w, cr)
selectCodeEditor("IDECODE.v", 241, 280, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 400, 199); // ch (w, cr)
selectCodeEditor("IDECODE.v", 400, 199, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 545, 198); // ch (w, cr)
selectCodeEditor("IDECODE.v", 588, 193); // ch (w, cr)
selectCodeEditor("IDECODE.v", 549, 195); // ch (w, cr)
selectCodeEditor("IDECODE.v", 549, 195, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 555, 200); // ch (w, cr)
// Elapsed time: 45 seconds
selectCodeEditor("IDECODE.v", 508, 208); // ch (w, cr)
selectCodeEditor("IDECODE.v", 508, 198); // ch (w, cr)
selectCodeEditor("IDECODE.v", 542, 198); // ch (w, cr)
selectCodeEditor("IDECODE.v", 243, 148); // ch (w, cr)
selectCodeEditor("IDECODE.v", 243, 148, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 46 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "w_connectExecuteBus", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 19 seconds
selectCodeEditor("IDECODE.v", 248, 295); // ch (w, cr)
selectCodeEditor("IDECODE.v", 248, 295, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 14 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "w_connectMemoryBus", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 10 seconds
selectCodeEditor("IDECODE.v", 278, 108); // ch (w, cr)
selectCodeEditor("IDECODE.v", 278, 108, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 240, 246); // ch (w, cr)
selectCodeEditor("IDECODE.v", 240, 246, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 293, 72); // ch (w, cr)
selectCodeEditor("IDECODE.v", 293, 72, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 283, 90); // ch (w, cr)
selectCodeEditor("IDECODE.v", 283, 90, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 305, 105); // ch (w, cr)
selectCodeEditor("IDECODE.v", 305, 105, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 293, 85); // ch (w, cr)
selectCodeEditor("IDECODE.v", 293, 83, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 15 seconds
selectCodeEditor("IDECODE.v", 270, 97); // ch (w, cr)
selectCodeEditor("IDECODE.v", 270, 97, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 298, 72); // ch (w, cr)
selectCodeEditor("IDECODE.v", 298, 71, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 284, 96); // ch (w, cr)
selectCodeEditor("IDECODE.v", 284, 96, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 291, 114); // ch (w, cr)
selectCodeEditor("IDECODE.v", 291, 114, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 18 seconds
selectCodeEditor("IDECODE.v", 295, 74); // ch (w, cr)
selectCodeEditor("IDECODE.v", 295, 74, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 286, 93); // ch (w, cr)
selectCodeEditor("IDECODE.v", 286, 93, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 289, 111); // ch (w, cr)
selectCodeEditor("IDECODE.v", 289, 111, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 305, 78); // ch (w, cr)
selectCodeEditor("IDECODE.v", 305, 80, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 276, 82); // ch (w, cr)
selectCodeEditor("IDECODE.v", 250, 80); // ch (w, cr)
selectCodeEditor("IDECODE.v", 247, 91); // ch (w, cr)
selectCodeEditor("IDECODE.v", 240, 113); // ch (w, cr)
selectCodeEditor("IDECODE.v", 287, 167); // ch (w, cr)
selectCodeEditor("IDECODE.v", 253, 168); // ch (w, cr)
selectCodeEditor("IDECODE.v", 253, 168, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 264, 178); // ch (w, cr)
selectCodeEditor("IDECODE.v", 264, 178, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 258, 160); // ch (w, cr)
selectCodeEditor("IDECODE.v", 258, 160, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 282, 164); // ch (w, cr)
selectCodeEditor("IDECODE.v", 282, 164); // ch (w, cr)
selectCodeEditor("IDECODE.v", 274, 165); // ch (w, cr)
selectCodeEditor("IDECODE.v", 274, 165, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 290, 78); // ch (w, cr)
selectCodeEditor("IDECODE.v", 290, 78, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "CONTROL_SIGNALS.v", 2); // i (h, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 273, 98); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 273, 98, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 285, 127); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 285, 127, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 285, 163); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 285, 164); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 274, 95); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 274, 95, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 266, 90); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 236, 201); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 261, 235); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 261, 235, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 277, 267); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 277, 267, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "RW_REGISTERS.v", 4); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "HAZARD_DETECTION.v", 3); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "CONTROL_SIGNALS.v", 2); // i (h, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 274, 145); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 274, 145, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 35 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_signalControlEX", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 22 seconds
selectCodeEditor("CONTROL_SIGNALS.v", 262, 319); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 264, 144); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 264, 144, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 11 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_signalControlME", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("CONTROL_SIGNALS.v", 263, 172); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 263, 172, false, false, false, false, true); // ch (w, cr) - Double Click
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_signalControlWB", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("CONTROL_SIGNALS.v", 230, 265); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 295, 81); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 295, 81, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "HAZARD_DETECTION.v", 3); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "RW_REGISTERS.v", 4); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 5); // i (h, cr)
// Elapsed time: 24 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_signalControlEX", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 13 seconds
selectCodeEditor("IDECODE.v", 267, 249); // ch (w, cr)
selectCodeEditor("IDECODE.v", 267, 249, false, false, false, false, true); // ch (w, cr) - Double Click
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_signalControlME", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 21 seconds
selectCodeEditor("IDECODE.v", 164, 120); // ch (w, cr)
selectCodeEditor("IDECODE.v", 164, 120, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 140, 114); // ch (w, cr)
selectCodeEditor("IDECODE.v", 140, 114, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 153, 125); // ch (w, cr)
selectCodeEditor("IDECODE.v", 153, 125, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "CONTROL_SIGNALS.v", 2); // i (h, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 308, 74); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 308, 74, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 295, 150); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 295, 150, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 315, 122); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 315, 108); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 315, 108, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 5); // i (h, cr)
selectCodeEditor("IDECODE.v", 272, 84); // ch (w, cr)
selectCodeEditor("IDECODE.v", 279, 93); // ch (w, cr)
selectCodeEditor("IDECODE.v", 279, 93, false, false, false, false, true); // ch (w, cr) - Double Click
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "o_signalControlWB", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("IDECODE.v", 260, 224); // ch (w, cr)
selectCodeEditor("IDECODE.v", 260, 224, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 77 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "w_signalControlWB", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 14 seconds
selectCodeEditor("IDECODE.v", 254, 232); // ch (w, cr)
selectCodeEditor("IDECODE.v", 254, 232, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 254, 232); // ch (w, cr)
selectCodeEditor("IDECODE.v", 254, 232, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 10 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "w_signalControlME", -1); // JComboBox (cr, FindAndReplaceDialog)
selectCodeEditor("IDECODE.v", 303, 216); // ch (w, cr)
// Elapsed time: 32 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "w_signalControlEX", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 18 seconds
selectCodeEditor("IDECODE.v", 280, 227); // ch (w, cr)
selectCodeEditor("IDECODE.v", 280, 227, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 258, 298); // ch (w, cr)
selectCodeEditor("IDECODE.v", 258, 298, false, false, false, false, true); // ch (w, cr) - Double Click
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 93 MB. Current time: 6/17/20, 6:09:11 PM ART
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "w_signalControlME", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("IDECODE.v", 280, 322); // ch (w, cr)
selectCodeEditor("IDECODE.v", 280, 322, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 258, 300); // ch (w, cr)
selectCodeEditor("IDECODE.v", 258, 300, false, false, false, false, true); // ch (w, cr) - Double Click
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "w_signalControlWB", 2); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("IDECODE.v", 225, 249); // ch (w, cr)
selectCodeEditor("IDECODE.v", 144, 211); // ch (w, cr)
selectCodeEditor("IDECODE.v", 144, 211, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 160, 230); // ch (w, cr)
selectCodeEditor("IDECODE.v", 160, 230, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 178, 248); // ch (w, cr)
selectCodeEditor("IDECODE.v", 178, 248, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 213, 216); // ch (w, cr)
selectCodeEditor("IDECODE.v", 213, 216, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 188, 228); // ch (w, cr)
selectCodeEditor("IDECODE.v", 188, 228, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 160, 251); // ch (w, cr)
selectCodeEditor("IDECODE.v", 160, 251, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 186, 163); // ch (w, cr)
selectCodeEditor("IDECODE.v", 186, 162, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 136, 181); // ch (w, cr)
selectCodeEditor("IDECODE.v", 136, 181, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 121, 164); // ch (w, cr)
selectCodeEditor("IDECODE.v", 121, 164, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 135, 185); // ch (w, cr)
selectCodeEditor("IDECODE.v", 135, 185, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 135, 201); // ch (w, cr)
selectCodeEditor("IDECODE.v", 134, 202, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 146, 167); // ch (w, cr)
selectCodeEditor("IDECODE.v", 146, 167, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 240, 181); // ch (w, cr)
selectCodeEditor("IDECODE.v", 114, 177); // ch (w, cr)
selectCodeEditor("IDECODE.v", 170, 178); // ch (w, cr)
selectCodeEditor("IDECODE.v", 171, 183); // ch (w, cr)
selectCodeEditor("IDECODE.v", 140, 182); // ch (w, cr)
selectCodeEditor("IDECODE.v", 140, 182, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 140, 168); // ch (w, cr)
selectCodeEditor("IDECODE.v", 140, 168, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 111, 179); // ch (w, cr)
selectCodeEditor("IDECODE.v", 243, 200); // ch (w, cr)
selectCodeEditor("IDECODE.v", 306, 96); // ch (w, cr)
selectCodeEditor("IDECODE.v", 292, 112); // ch (w, cr)
selectCodeEditor("IDECODE.v", 288, 132); // ch (w, cr)
selectCodeEditor("IDECODE.v", 270, 163); // ch (w, cr)
selectCodeEditor("IDECODE.v", 146, 178); // ch (w, cr)
selectCodeEditor("IDECODE.v", 150, 160); // ch (w, cr)
selectCodeEditor("IDECODE.v", 150, 160, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 151, 182); // ch (w, cr)
selectCodeEditor("IDECODE.v", 151, 180, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 155, 199); // ch (w, cr)
selectCodeEditor("IDECODE.v", 155, 199, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 155, 193); // ch (w, cr)
selectCodeEditor("IDECODE.v", 150, 182); // ch (w, cr)
selectCodeEditor("IDECODE.v", 150, 182, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 155, 204); // ch (w, cr)
selectCodeEditor("IDECODE.v", 197, 163); // ch (w, cr)
selectCodeEditor("IDECODE.v", 184, 179); // ch (w, cr)
selectCodeEditor("IDECODE.v", 184, 179, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 202, 200); // ch (w, cr)
selectCodeEditor("IDECODE.v", 202, 200, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "RW_REGISTERS.v", 4); // i (h, cr)
selectCodeEditor("RW_REGISTERS.v", 213, 250); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 213, 250, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 229, 268); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 229, 268, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 228, 287); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 228, 287, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 218, 265); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 218, 265, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 225, 249); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 225, 249, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 221, 261); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 221, 261, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 226, 280); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 226, 280, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 179, 250); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 238, 266); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 238, 266, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 243, 287); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 5); // i (h, cr)
selectCodeEditor("IDECODE.v", 230, 162); // ch (w, cr)
selectCodeEditor("IDECODE.v", 230, 162, false, false, false, false, true); // ch (w, cr) - Double Click
selectComboBox("FindAndReplaceDialog.cr_Find what:", "w_out_wire_reg1", -1); // JComboBox (cr, FindAndReplaceDialog)
// Elapsed time: 25 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "w_outWireRegister1", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Close", "Close"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("IDECODE.v", 197, 159); // ch (w, cr)
selectCodeEditor("IDECODE.v", 197, 159, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 119, 242); // ch (w, cr)
selectCodeEditor("IDECODE.v", 119, 242, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 199, 244); // ch (w, cr)
selectCodeEditor("IDECODE.v", 199, 244, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 150, 245); // ch (w, cr)
selectCodeEditor("IDECODE.v", 150, 245, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 213, 243); // ch (w, cr)
selectCodeEditor("IDECODE.v", 213, 243, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 133, 243); // ch (w, cr)
selectCodeEditor("IDECODE.v", 133, 243, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 112, 264); // ch (w, cr)
selectCodeEditor("IDECODE.v", 112, 264, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 113, 283); // ch (w, cr)
selectCodeEditor("IDECODE.v", 113, 283, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 112, 271); // ch (w, cr)
selectCodeEditor("IDECODE.v", 112, 271, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 117, 256); // ch (w, cr)
selectCodeEditor("IDECODE.v", 117, 256, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 121, 243); // ch (w, cr)
selectCodeEditor("IDECODE.v", 121, 243, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 106, 261); // ch (w, cr)
selectCodeEditor("IDECODE.v", 106, 261, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "RW_REGISTERS.v", 4); // i (h, cr)
selectCodeEditor("RW_REGISTERS.v", 217, 247); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 217, 247, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 257, 164); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 257, 164, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 222, 146); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 222, 146, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 193, 265); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 497, 270); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 499, 269); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 399, 266); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 399, 266, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 199, 62); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 199, 62, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 205, 80); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 205, 80, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 202, 66); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 202, 66, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 200, 81); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 200, 81, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 204, 60); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 204, 60, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 201, 78); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 82, 81); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 82, 81, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 202, 139); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 202, 139, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 22, 265); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 217, 162); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 217, 162, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 216, 175); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 216, 175, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 214, 167); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 214, 167, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 188, 331); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 242, 18); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 200, 23); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 130, 25); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 130, 25, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 186, 351); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 121, 27); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 121, 28, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 120, 351); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 120, 351, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 144, 24); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 144, 24, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 131, 349); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 131, 349, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 183, 33); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 78, 350); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 486, 371); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 108, 351); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 108, 351, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 495, 302); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 82, 298); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 28, 179); // ch (w, cr)
// Elapsed time: 12 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 5); // i (h, cr)
selectCodeEditor("IDECODE.v", 111, 277); // ch (w, cr)
selectCodeEditor("IDECODE.v", 111, 277, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 256, 246); // ch (w, cr)
selectCodeEditor("IDECODE.v", 256, 246, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 14 seconds
selectCodeEditor("IDECODE.v", 620, 282); // ch (w, cr)
selectCodeEditor("IDECODE.v", 318, 284); // ch (w, cr)
selectCodeEditor("IDECODE.v", 318, 284, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 627, 290); // ch (w, cr)
selectCodeEditor("IDECODE.v", 323, 278); // ch (w, cr)
selectCodeEditor("IDECODE.v", 323, 278, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 132, 246); // ch (w, cr)
selectCodeEditor("IDECODE.v", 132, 246, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 379, 249); // ch (w, cr)
selectCodeEditor("IDECODE.v", 379, 249, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 110, 252); // ch (w, cr)
selectCodeEditor("IDECODE.v", 110, 252, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 376, 248); // ch (w, cr)
selectCodeEditor("IDECODE.v", 376, 248, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 105, 248); // ch (w, cr)
selectCodeEditor("IDECODE.v", 165, 246); // ch (w, cr)
selectCodeEditor("IDECODE.v", 130, 244); // ch (w, cr)
selectCodeEditor("IDECODE.v", 130, 244, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 409, 246); // ch (w, cr)
selectCodeEditor("IDECODE.v", 409, 246, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 21 seconds
selectCodeEditor("IDECODE.v", 103, 247); // ch (w, cr)
selectCodeEditor("IDECODE.v", 103, 247, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 23 seconds
selectCodeEditor("IDECODE.v", 126, 353); // ch (w, cr)
selectCodeEditor("IDECODE.v", 126, 352, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 483, 353); // ch (w, cr)
selectCodeEditor("IDECODE.v", 101, 349); // ch (w, cr)
selectCodeEditor("IDECODE.v", 101, 349, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 11 seconds
selectCodeEditor("IDECODE.v", 77, 286); // ch (w, cr)
selectCodeEditor("IDECODE.v", 77, 286, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 97, 295); // ch (w, cr)
selectCodeEditor("IDECODE.v", 97, 295, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 58 seconds
selectCodeEditor("IDECODE.v", 154, 212); // ch (w, cr)
selectCodeEditor("IDECODE.v", 154, 212, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 32 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "w_outWireRegister1", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
// Elapsed time: 24 seconds
selectCodeEditor("IDECODE.v", 183, 228); // ch (w, cr)
selectCodeEditor("IDECODE.v", 153, 232); // ch (w, cr)
selectCodeEditor("IDECODE.v", 153, 232, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 10 seconds
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
selectComboBox("FindAndReplaceDialog.cr_Find what:", "t_out_reg1", -1); // JComboBox (cr, FindAndReplaceDialog)
// Elapsed time: 29 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "w_outRegister1", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Close", "Close"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("IDECODE.v", 158, 230); // ch (w, cr)
selectCodeEditor("IDECODE.v", 158, 230, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 101, 162); // ch (w, cr)
selectCodeEditor("IDECODE.v", 101, 162, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 212, 161); // ch (w, cr)
selectCodeEditor("IDECODE.v", 212, 161, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 203, 175); // ch (w, cr)
selectCodeEditor("IDECODE.v", 203, 175, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 212, 155); // ch (w, cr)
selectCodeEditor("IDECODE.v", 212, 155, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 12 seconds
selectCodeEditor("IDECODE.v", 173, 329); // ch (w, cr)
selectCodeEditor("IDECODE.v", 103, 213); // ch (w, cr)
selectCodeEditor("IDECODE.v", 103, 213, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 107, 229); // ch (w, cr)
selectCodeEditor("IDECODE.v", 107, 229, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 109, 217); // ch (w, cr)
selectCodeEditor("IDECODE.v", 109, 217, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 113, 216); // ch (w, cr)
selectCodeEditor("IDECODE.v", 107, 215); // ch (w, cr)
selectCodeEditor("IDECODE.v", 80, 213); // ch (w, cr)
selectCodeEditor("IDECODE.v", 108, 211); // ch (w, cr)
selectCodeEditor("IDECODE.v", 108, 211, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 114, 163); // ch (w, cr)
selectCodeEditor("IDECODE.v", 114, 163, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 111, 263); // ch (w, cr)
selectCodeEditor("IDECODE.v", 111, 263, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 125, 274); // ch (w, cr)
selectCodeEditor("IDECODE.v", 125, 274, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 128, 255); // ch (w, cr)
selectCodeEditor("IDECODE.v", 128, 255, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 125, 244); // ch (w, cr)
selectCodeEditor("IDECODE.v", 125, 244, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 316, 246); // ch (w, cr)
selectCodeEditor("IDECODE.v", 67, 269); // ch (w, cr)
selectCodeEditor("IDECODE.v", 69, 268, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 106, 285); // ch (w, cr)
selectCodeEditor("IDECODE.v", 106, 285, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 118, 270); // ch (w, cr)
selectCodeEditor("IDECODE.v", 118, 270, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 119, 286); // ch (w, cr)
selectCodeEditor("IDECODE.v", 119, 286, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 117, 260); // ch (w, cr)
selectCodeEditor("IDECODE.v", 117, 260, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 116, 278); // ch (w, cr)
selectCodeEditor("IDECODE.v", 116, 278, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 184, 267); // ch (w, cr)
selectCodeEditor("IDECODE.v", 184, 267, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 187, 282); // ch (w, cr)
selectCodeEditor("IDECODE.v", 187, 282, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 219, 259); // ch (w, cr)
selectCodeEditor("IDECODE.v", 219, 259, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 12 seconds
selectCodeEditor("IDECODE.v", 65, 265); // ch (w, cr)
selectCodeEditor("IDECODE.v", 52, 266); // ch (w, cr)
selectCodeEditor("IDECODE.v", 49, 267); // ch (w, cr)
selectCodeEditor("IDECODE.v", 53, 262); // ch (w, cr)
selectCodeEditor("IDECODE.v", 163, 179); // ch (w, cr)
selectCodeEditor("IDECODE.v", 163, 179, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 16 seconds
selectCodeEditor("IDECODE.v", 19, 61); // ch (w, cr)
selectCodeEditor("IDECODE.v", 19, 61, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 150, 78); // ch (w, cr)
selectCodeEditor("IDECODE.v", 150, 78, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 177, 265); // ch (w, cr)
selectCodeEditor("IDECODE.v", 177, 265, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 33, 72); // ch (w, cr)
selectCodeEditor("IDECODE.v", 50, 132); // ch (w, cr)
selectCodeEditor("IDECODE.v", 4, 41); // ch (w, cr)
selectCodeEditor("IDECODE.v", 206, 312); // ch (w, cr)
selectCodeEditor("IDECODE.v", 4, 46); // ch (w, cr)
selectCodeEditor("IDECODE.v", 158, 361); // ch (w, cr)
selectCodeEditor("IDECODE.v", 136, 315); // ch (w, cr)
selectCodeEditor("IDECODE.v", 137, 315, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 216, 308); // ch (w, cr)
selectCodeEditor("IDECODE.v", 216, 308, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 38, 216); // ch (w, cr)
selectCodeEditor("IDECODE.v", 111, 211); // ch (w, cr)
selectCodeEditor("IDECODE.v", 111, 211, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 233, 215); // ch (w, cr)
selectCodeEditor("IDECODE.v", 233, 215, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 396, 216); // ch (w, cr)
selectCodeEditor("IDECODE.v", 396, 216, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 170, 128); // ch (w, cr)
selectCodeEditor("IDECODE.v", 170, 128, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 206, 36); // ch (w, cr)
selectCodeEditor("IDECODE.v", 205, 23); // ch (w, cr)
selectCodeEditor("IDECODE.v", 205, 23, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "IDECODE.v", 'c'); // ch (w, cr)
selectCodeEditor("IDECODE.v", 183, 225); // ch (w, cr)
selectCodeEditor("IDECODE.v", 183, 225, false, false, false, false, true); // ch (w, cr) - Double Click
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "w_registerData1", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("IDECODE.v", 187, 179); // ch (w, cr)
selectCodeEditor("IDECODE.v", 187, 179, false, false, false, false, true); // ch (w, cr) - Double Click
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "w_registerData2", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("IDECODE.v", 231, 160); // ch (w, cr)
selectCodeEditor("IDECODE.v", 232, 159, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 203, 183); // ch (w, cr)
selectCodeEditor("IDECODE.v", 203, 183, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 18 seconds
selectCodeEditor("IDECODE.v", 215, 351); // ch (w, cr)
selectCodeEditor("IDECODE.v", 215, 351, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 212, 363); // ch (w, cr)
selectCodeEditor("IDECODE.v", 212, 363, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 212, 346); // ch (w, cr)
selectCodeEditor("IDECODE.v", 212, 346, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 212, 359); // ch (w, cr)
selectCodeEditor("IDECODE.v", 212, 359, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 214, 99); // ch (w, cr)
selectCodeEditor("IDECODE.v", 214, 99, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 224, 114); // ch (w, cr)
selectCodeEditor("IDECODE.v", 224, 114, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 201, 175); // ch (w, cr)
selectCodeEditor("IDECODE.v", 201, 175, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 83, 261); // ch (w, cr)
selectCodeEditor("IDECODE.v", 308, 300); // ch (w, cr)
selectCodeEditor("IDECODE.v", 137, 301); // ch (w, cr)
selectCodeEditor("IDECODE.v", 137, 301, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 273, 299); // ch (w, cr)
selectCodeEditor("IDECODE.v", 273, 299, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 189, 299); // ch (w, cr)
selectCodeEditor("IDECODE.v", 189, 299, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 189, 81); // ch (w, cr)
selectCodeEditor("IDECODE.v", 189, 81, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 40 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "w_wireRegisterData1", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Close", "Close"); // JButton (cr, FindAndReplaceDialog)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "RW_REGISTERS.v", 4); // i (h, cr)
selectCodeEditor("RW_REGISTERS.v", 226, 177); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 205, 261); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 205, 261, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 171, 257); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 174, 263); // ch (w, cr)
// Elapsed time: 22 seconds
selectCodeEditor("RW_REGISTERS.v", 184, 265); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 177, 266); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 230, 262); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 230, 262, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 199, 271); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 203, 268); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 203, 268, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 188, 262); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 176, 258); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 177, 262); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 5); // i (h, cr)
selectCodeEditor("IDECODE.v", 184, 126); // ch (w, cr)
selectCodeEditor("IDECODE.v", 184, 126, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 208, 79); // ch (w, cr)
selectCodeEditor("IDECODE.v", 208, 79, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 287, 107); // ch (w, cr)
selectCodeEditor("IDECODE.v", 287, 107, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 138, 145); // ch (w, cr)
selectCodeEditor("IDECODE.v", 138, 145, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 121, 109); // ch (w, cr)
selectCodeEditor("IDECODE.v", 121, 109, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 199, 75); // ch (w, cr)
selectCodeEditor("IDECODE.v", 217, 67); // ch (w, cr)
selectCodeEditor("IDECODE.v", 217, 67, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 232, 71); // ch (w, cr)
selectCodeEditor("IDECODE.v", 232, 71, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 47 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "w_wireRegisterData1", -1); // JComboBox (cr, FindAndReplaceDialog)
selectCodeEditor("IDECODE.v", 187, 91); // ch (w, cr)
selectCodeEditor("IDECODE.v", 187, 91, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 192, 82); // ch (w, cr)
selectCodeEditor("IDECODE.v", 192, 82, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 194, 93); // ch (w, cr)
selectCodeEditor("IDECODE.v", 194, 93, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 199, 70); // ch (w, cr)
selectCodeEditor("IDECODE.v", 198, 78); // ch (w, cr)
selectCodeEditor("IDECODE.v", 198, 78, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 198, 95); // ch (w, cr)
selectCodeEditor("IDECODE.v", 198, 95, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 382, 335); // ch (w, cr)
selectCodeEditor("IDECODE.v", 382, 335, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 290, 299); // ch (w, cr)
selectCodeEditor("IDECODE.v", 290, 299, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 425, 265); // ch (w, cr)
selectCodeEditor("IDECODE.v", 425, 265, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 327, 296); // ch (w, cr)
selectCodeEditor("IDECODE.v", 327, 296, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 400, 336); // ch (w, cr)
selectCodeEditor("IDECODE.v", 400, 336, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 329, 300); // ch (w, cr)
selectCodeEditor("IDECODE.v", 329, 300, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 386, 337); // ch (w, cr)
selectCodeEditor("IDECODE.v", 386, 337, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 201, 75); // ch (w, cr)
selectCodeEditor("IDECODE.v", 201, 75, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 106, 41); // ch (w, cr)
selectCodeEditor("IDECODE.v", 106, 41, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 258, 218); // ch (w, cr)
selectCodeEditor("IDECODE.v", 258, 218, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 240, 232); // ch (w, cr)
selectCodeEditor("IDECODE.v", 240, 232, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 235, 216); // ch (w, cr)
selectCodeEditor("IDECODE.v", 235, 216, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 230, 227); // ch (w, cr)
selectCodeEditor("IDECODE.v", 230, 227, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 247, 216); // ch (w, cr)
selectCodeEditor("IDECODE.v", 247, 216, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 254, 212); // ch (w, cr)
selectCodeEditor("IDECODE.v", 254, 212, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 225, 228); // ch (w, cr)
selectCodeEditor("IDECODE.v", 225, 228, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 260, 211); // ch (w, cr)
selectCodeEditor("IDECODE.v", 260, 211, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 228, 228); // ch (w, cr)
selectCodeEditor("IDECODE.v", 228, 228, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 255, 217); // ch (w, cr)
selectCodeEditor("IDECODE.v", 255, 217); // ch (w, cr)
selectCodeEditor("IDECODE.v", 222, 239); // ch (w, cr)
selectCodeEditor("IDECODE.v", 219, 232); // ch (w, cr)
selectCodeEditor("IDECODE.v", 219, 232, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 260, 209); // ch (w, cr)
selectCodeEditor("IDECODE.v", 260, 209, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 262, 229); // ch (w, cr)
selectCodeEditor("IDECODE.v", 262, 229, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 276, 218); // ch (w, cr)
selectCodeEditor("IDECODE.v", 276, 218, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 240, 226); // ch (w, cr)
selectCodeEditor("IDECODE.v", 240, 226, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 297, 216); // ch (w, cr)
selectCodeEditor("IDECODE.v", 297, 216, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "RW_REGISTERS.v", 4); // i (h, cr)
selectCodeEditor("RW_REGISTERS.v", 242, 265); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 242, 265, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("RW_REGISTERS.v", 27, 235); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 82, 302); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 86, 135); // ch (w, cr)
selectCodeEditor("RW_REGISTERS.v", 18, 181); // ch (w, cr)
// Elapsed time: 10 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 5); // i (h, cr)
selectCodeEditor("IDECODE.v", 377, 315); // ch (w, cr)
selectCodeEditor("IDECODE.v", 278, 312); // ch (w, cr)
selectCodeEditor("IDECODE.v", 278, 312, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 138, 311); // ch (w, cr)
selectCodeEditor("IDECODE.v", 138, 311, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 227, 317); // ch (w, cr)
selectCodeEditor("IDECODE.v", 227, 317, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 227, 225); // ch (w, cr)
selectCodeEditor("IDECODE.v", 227, 225, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 32 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "w_wireRegisterData1", -1); // JComboBox (cr, FindAndReplaceDialog)
selectCodeEditor("IDECODE.v", 209, 247); // ch (w, cr)
selectCodeEditor("IDECODE.v", 208, 247, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 221, 224); // ch (w, cr)
selectCodeEditor("IDECODE.v", 221, 224, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 242, 225); // ch (w, cr)
selectCodeEditor("IDECODE.v", 242, 225, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 131, 232); // ch (w, cr)
selectCodeEditor("IDECODE.v", 131, 232, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 247, 231); // ch (w, cr)
selectCodeEditor("IDECODE.v", 247, 231, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 138, 284); // ch (w, cr)
selectCodeEditor("IDECODE.v", 138, 284, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 223, 278); // ch (w, cr)
selectCodeEditor("IDECODE.v", 223, 278, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 107, 335); // ch (w, cr)
selectCodeEditor("IDECODE.v", 107, 335, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 222, 335); // ch (w, cr)
selectCodeEditor("IDECODE.v", 222, 335, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 126, 332); // ch (w, cr)
selectCodeEditor("IDECODE.v", 126, 332, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 180, 314); // ch (w, cr)
selectCodeEditor("IDECODE.v", 180, 314, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 245, 315); // ch (w, cr)
selectCodeEditor("IDECODE.v", 245, 315, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 249, 330); // ch (w, cr)
selectCodeEditor("IDECODE.v", 249, 330, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 279, 318); // ch (w, cr)
selectCodeEditor("IDECODE.v", 279, 318, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 235, 346); // ch (w, cr)
selectCodeEditor("IDECODE.v", 239, 338); // ch (w, cr)
selectCodeEditor("IDECODE.v", 239, 338, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 277, 313); // ch (w, cr)
selectCodeEditor("IDECODE.v", 277, 313, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 251, 329); // ch (w, cr)
selectCodeEditor("IDECODE.v", 251, 329, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 273, 310); // ch (w, cr)
selectCodeEditor("IDECODE.v", 273, 310, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 246, 336); // ch (w, cr)
selectCodeEditor("IDECODE.v", 246, 336, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 275, 318); // ch (w, cr)
selectCodeEditor("IDECODE.v", 275, 318, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 251, 339); // ch (w, cr)
selectCodeEditor("IDECODE.v", 251, 339, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 268, 311); // ch (w, cr)
selectCodeEditor("IDECODE.v", 268, 311, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 236, 335); // ch (w, cr)
selectCodeEditor("IDECODE.v", 236, 335, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 259, 319); // ch (w, cr)
selectCodeEditor("IDECODE.v", 259, 319, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 247, 332); // ch (w, cr)
selectCodeEditor("IDECODE.v", 247, 332, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 276, 323); // ch (w, cr)
selectCodeEditor("IDECODE.v", 276, 323, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 259, 319); // ch (w, cr)
selectCodeEditor("IDECODE.v", 259, 319, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 244, 329); // ch (w, cr)
selectCodeEditor("IDECODE.v", 244, 329, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 264, 309); // ch (w, cr)
selectCodeEditor("IDECODE.v", 264, 309, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 245, 326); // ch (w, cr)
selectCodeEditor("IDECODE.v", 262, 307); // ch (w, cr)
selectCodeEditor("IDECODE.v", 252, 333); // ch (w, cr)
selectCodeEditor("IDECODE.v", 252, 333, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 259, 318); // ch (w, cr)
selectCodeEditor("IDECODE.v", 259, 318, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 90, 315); // ch (w, cr)
selectCodeEditor("IDECODE.v", 159, 310); // ch (w, cr)
selectCodeEditor("IDECODE.v", 159, 310, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 216, 127); // ch (w, cr)
selectCodeEditor("IDECODE.v", 216, 127, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 13 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "w_outRegisterData1", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("IDECODE.v", 310, 260); // ch (w, cr)
// Elapsed time: 50 seconds
selectCodeEditor("IDECODE.v", 188, 346); // ch (w, cr)
selectCodeEditor("IDECODE.v", 188, 346, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 108, 224); // ch (w, cr)
selectCodeEditor("IDECODE.v", 108, 224, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 496, 202); // ch (w, cr)
selectCodeEditor("IDECODE.v", 496, 202, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 387, 200); // ch (w, cr)
selectCodeEditor("IDECODE.v", 387, 200, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 87 seconds
selectComboBox("FindAndReplaceDialog.cr_Replace with:", "w_outMuxControl", -1); // JComboBox (cr, FindAndReplaceDialog)
selectButton("FindAndReplaceDialog.cr_Find", "Find"); // JButton (cr, FindAndReplaceDialog)
selectCodeEditor("IDECODE.v", 211, 366); // ch (w, cr)
selectButton(RDIResourceCommand.RDICommands_SAVE_FILE, (String) null); // E (f, cr)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IDECODE (IDECODE.v), RW_REGISTERS : RW_REGISTERS (RW_REGISTERS.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IDECODE (IDECODE.v), HAZARD_DETECTION : HAZARD_DETECTION (HAZARD_DETECTION.v)]", 9, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IDECODE (IDECODE.v), CONTROL_SIGNAL : xil_defaultlib.CONTROL_SIGNAL]", 7, false); // B (F, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("IDECODE.v", 250, 64); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "CONTROL_SIGNALS.v", 2); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 4); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "CONTROL_SIGNALS.v", 5); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 4); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "CONTROL_SIGNALS.v", 5); // i (h, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 4); // i (h, cr)
selectCodeEditor("IDECODE.v", 84, 146); // ch (w, cr)
selectCodeEditor("IDECODE.v", 84, 146, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "CONTROL_SIGNALS.v", 5); // i (h, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 213, 212); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 4); // i (h, cr)
selectCodeEditor("IDECODE.v", 165, 146); // ch (w, cr)
selectCodeEditor("IDECODE.v", 171, 161); // ch (w, cr)
selectCodeEditor("IDECODE.v", 168, 143); // ch (w, cr)
selectCodeEditor("IDECODE.v", 147, 144); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "CONTROL_SIGNALS.v", 5); // i (h, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 220, 172); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 204, 175); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 204, 175, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 149, 245); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 149, 245, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 4); // i (h, cr)
selectCodeEditor("IDECODE.v", 141, 175); // ch (w, cr)
selectCodeEditor("IDECODE.v", 141, 175, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "CONTROL_SIGNALS.v", 5); // i (h, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 177, 267); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 177, 267, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 4); // i (h, cr)
selectCodeEditor("IDECODE.v", 176, 200); // ch (w, cr)
selectCodeEditor("IDECODE.v", 179, 198, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 172, 217); // ch (w, cr)
selectCodeEditor("IDECODE.v", 172, 217, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "CONTROL_SIGNALS.v", 5); // i (h, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 287, 267); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 287, 267, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 307, 293); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 307, 292, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("CONTROL_SIGNALS.v", 292, 330); // ch (w, cr)
selectCodeEditor("CONTROL_SIGNALS.v", 292, 330, false, false, false, false, true); // ch (w, cr) - Double Click
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "IDECODE.v", 4); // i (h, cr)
selectCodeEditor("IDECODE.v", 172, 227); // ch (w, cr)
selectCodeEditor("IDECODE.v", 172, 227, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 162, 253); // ch (w, cr)
selectCodeEditor("IDECODE.v", 163, 251, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("IDECODE.v", 146, 282); // ch (w, cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("IDECODE.v", 233, 58); // ch (w, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
closeView(PAResourceOtoP.PAViews_CODE, "Code"); // B
selectButton(RDIResourceCommand.RDICommands_SAVE_FILE, (String) null); // E (f, cr)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "Project Summary", 0); // i (h, cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IDECODE (IDECODE.v), RW_REGISTERS : RW_REGISTERS (RW_REGISTERS.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources]", 0, true, false, false, false, true, false); // B (F, cr) - Popup Trigger - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IFETCH (IFETCH.v), INSTRUCTION_RAM : INSTRUCTION_RAM (INSTRUCTION_RAM.v)]", 4, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IDECODE (IDECODE.v), CONTROL_SIGNAL : xil_defaultlib.CONTROL_SIGNAL]", 7, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IDECODE (IDECODE.v), RW_REGISTERS : RW_REGISTERS (RW_REGISTERS.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IDECODE (IDECODE.v)]", 6, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IDECODE (IDECODE.v), RW_REGISTERS : RW_REGISTERS (RW_REGISTERS.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, IDECODE (IDECODE.v), HAZARD_DETECTION : HAZARD_DETECTION (HAZARD_DETECTION.v)]", 9, false); // B (F, cr)
closeMainWindow("MIPS_2020 - [C:/Arquitectura/TPFinal_Arqui2020/MIPS_2020/MIPS_2020.xpr] - Vivado 2019.2"); // cr
// Run Command: PAResourceCommand.PACommandNames_CLOSE_PROJECT
// A (cr): Close Project: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (A)
// bB (cr):  Close Project : addNotify
dismissDialog("Close Project"); // A (cr)
// TclEventType: PROJECT_CLOSE
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 87 MB. Current time: 6/17/20, 6:32:27 PM ART
// 'b' command handler elapsed time: 3 seconds
// WARNING: HEventQueue.dispatchEvent() is taking  1471 ms.
// Tcl Message: close_project 
dismissDialog("Close Project"); // bB (cr)
// WARNING: HEventQueue.dispatchEvent() is taking  1032 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1414 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1516 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  8866 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5042 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5119 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  9419 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  9735 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 31649 ms. Increasing delay to 94947 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7814 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1310 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4908 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6207 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6937 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4834 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1188 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1818 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2903 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1282 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  10555 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  11127 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4468 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7759 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  10126 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1036 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1871 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5684 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1138 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  10469 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  12223 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5800 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 93 ms. Decreasing delay to 2093 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1638 ms. Increasing delay to 4914 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1702 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 11385 ms. Increasing delay to 34155 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3047 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 967 ms. Decreasing delay to 2967 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1681 ms. Increasing delay to 5043 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1144 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5064 ms. Increasing delay to 15192 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 206 ms. Decreasing delay to 2206 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1077 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3272 ms. Increasing delay to 9816 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1522 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3746 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2397 ms to process. Increasing delay to 5000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2397 ms to process. Increasing delay to 5000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1065 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5027 ms. Increasing delay to 15081 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 48 ms. Decreasing delay to 2048 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1137 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1769 ms. Increasing delay to 5307 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 8642 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4608 ms. Increasing delay to 13824 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 135 ms. Decreasing delay to 2135 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1325 ms. Increasing delay to 3975 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2605 ms. Increasing delay to 7815 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1363 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4255 ms. Increasing delay to 12765 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1061 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1286 ms. Decreasing delay to 3286 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1889 ms. Increasing delay to 5667 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  9573 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 72 MB. Current time: 6/17/20, 7:02:41 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1055 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6033 ms. Increasing delay to 18099 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 200 ms. Decreasing delay to 2200 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1071 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1880 ms. Increasing delay to 5640 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2231 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1061 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5555 ms. Increasing delay to 16665 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  10675 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1129 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1602 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3567 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1678 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1107 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 40 ms. Decreasing delay to 2040 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3700 ms. Increasing delay to 11100 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 63 ms. Decreasing delay to 2063 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1802 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3481 ms. Increasing delay to 10443 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6678 ms. Increasing delay to 20034 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 60 ms. Decreasing delay to 2060 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2729 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6525 ms. Increasing delay to 19575 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 103 ms. Decreasing delay to 2103 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1536 ms. Increasing delay to 4608 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5956 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 70 MB. Current time: 6/17/20, 7:32:38 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1113 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3151 ms. Increasing delay to 9453 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1021 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1084 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1008 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3467 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 8215 ms to process. Increasing delay to 6000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 11473 ms. Increasing delay to 34419 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1911 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 3051 ms to process. Increasing delay to 6000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1158 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1006 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 33 ms. Decreasing delay to 2033 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1961 ms. Increasing delay to 5883 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3250 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7493 ms. Increasing delay to 22479 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1271 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1017 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 7460 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1017 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 6672 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 28 ms. Decreasing delay to 2028 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1208 ms. Increasing delay to 3624 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1244 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1095 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 10201 ms. Increasing delay to 30603 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 114 ms. Decreasing delay to 2114 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1653 ms. Increasing delay to 4959 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4974 ms. Increasing delay to 14922 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 505 ms. Decreasing delay to 2505 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2602 ms. Increasing delay to 7806 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4849 ms. Increasing delay to 14547 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1506 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1115 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1071 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 193 ms. Decreasing delay to 2193 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1006 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4055 ms. Increasing delay to 12165 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 27 ms. Decreasing delay to 2027 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1156 ms. Increasing delay to 3468 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7341 ms. Increasing delay to 22023 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1359 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1016 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 182 ms. Decreasing delay to 2182 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1757 ms. Increasing delay to 5271 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6518 ms. Increasing delay to 19554 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1668 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1062 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1705 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1428 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 7781 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3932 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2220 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 17907 ms. Increasing delay to 53721 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1490 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1833 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1121 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1985 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 6945 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6512 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2635 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1278 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4181 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7895 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7594 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3353 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 976 ms. Decreasing delay to 2976 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7514 ms. Increasing delay to 22542 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5067 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4927 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4849 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1120 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2527 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1191 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4057 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6888 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2293 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4052 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4817 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1553 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 14637 ms. Increasing delay to 43911 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1179 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1031 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7520 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5867 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5108 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1144 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1360 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1281 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1043 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1333 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3433 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5279 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1150 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2951 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2021 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1271 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1199 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2477 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1885 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 10761 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 19 ms. Decreasing delay to 2019 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1487 ms. Increasing delay to 4461 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2732 ms. Increasing delay to 8196 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  14761 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 71 MB. Current time: 6/17/20, 8:02:54 PM ART
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 12623 ms. Increasing delay to 37869 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1306 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 6199 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1137 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1542 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2236 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1332 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5382 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 4009 ms to process. Increasing delay to 6000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 4009 ms to process. Increasing delay to 9000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 4009 ms to process. Increasing delay to 9000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 4011 ms to process. Increasing delay to 9000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 4012 ms to process. Increasing delay to 9000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1303 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1158 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1009 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1400 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4270 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1314 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 13794 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1814 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1063 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1014 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1014 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1344 ms. Decreasing delay to 3344 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4400 ms. Increasing delay to 13200 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1104 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4064 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5482 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 10704 ms. Increasing delay to 32112 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1140 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1112 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1436 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  9443 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1352 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3106 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1341 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1533 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1141 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1326 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 36 ms. Decreasing delay to 2036 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1149 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3296 ms. Increasing delay to 9888 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  10851 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 70 MB. Current time: 6/17/20, 8:32:46 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  27832 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1691 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1054 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  11427 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 70 MB. Current time: 6/17/20, 9:02:47 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 70 MB. Current time: 6/17/20, 9:32:38 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 70 MB. Current time: 6/17/20, 10:02:38 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  10800584 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 71 MB. Current time: 6/18/20, 1:22:27 AM ART
// WARNING: HEventQueue.dispatchEvent() is taking  30750273 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 70 MB. Current time: 6/18/20, 9:55:02 AM ART
// WARNING: HEventQueue.dispatchEvent() is taking  2116 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 70 MB. Current time: 6/18/20, 10:25:01 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 69 MB. Current time: 6/18/20, 10:55:01 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 69 MB. Current time: 6/18/20, 11:25:01 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 69 MB. Current time: 6/18/20, 11:55:02 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 69 MB. Current time: 6/18/20, 12:25:02 PM ART
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7349 ms. Increasing delay to 22047 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 319 ms. Decreasing delay to 2319 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1543 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1027 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1053 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1058 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1355 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1005 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1181 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2148 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 4894 ms to process. Increasing delay to 6000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 11245 ms. Increasing delay to 33735 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2040 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1566 ms. Decreasing delay to 3566 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1794 ms. Increasing delay to 5382 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1289 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  31224 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 71 MB. Current time: 6/18/20, 12:55:37 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1139 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3580 ms. Increasing delay to 10740 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1249 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 233 ms. Decreasing delay to 2233 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1187 ms. Increasing delay to 3561 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1424 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 9900 ms. Increasing delay to 29700 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 197 ms. Decreasing delay to 2197 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1670 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5519 ms. Increasing delay to 16557 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1557 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 393 ms. Decreasing delay to 2393 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2832 ms. Increasing delay to 8496 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1132 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 10045 ms. Increasing delay to 30135 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1790 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1695 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3282 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1525 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1244 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1318 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1114 ms. Decreasing delay to 3114 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2233 ms. Increasing delay to 6699 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2198 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5076 ms. Increasing delay to 15228 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1605 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3449 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1005 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 946 ms. Decreasing delay to 2946 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1561 ms. Increasing delay to 4683 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1383 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1023 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1013 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7661 ms. Increasing delay to 22983 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1035 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 326 ms. Decreasing delay to 2326 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1733 ms. Increasing delay to 5199 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1161 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5137 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 10983 ms. Increasing delay to 32949 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1405 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1393 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1277 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 4772 ms to process. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1862 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1255 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1125 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1273 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 9030 ms to process. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1691 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 438 ms. Decreasing delay to 2438 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2176 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5676 ms. Increasing delay to 17028 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1374 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 3030 ms to process. Increasing delay to 7000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1113 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1081 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1775 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1480 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5098 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1351 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1162 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3327 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  8776 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 15385 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5870 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1793 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1219 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1018 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 6063 ms to process. Increasing delay to 7000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7379 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3859 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1299 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 15551 ms. Increasing delay to 46653 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 11136 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2582 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1377 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 3030 ms to process. Increasing delay to 7000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1075 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2239 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1163 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3415 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1039 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1045 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6953 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2532 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1643 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 6013 ms to process. Increasing delay to 8000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 169 ms. Decreasing delay to 2169 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1358 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 8608 ms. Increasing delay to 25824 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 19 ms. Decreasing delay to 2019 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1125 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2476 ms. Increasing delay to 7428 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1384 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1245 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1762 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6571 ms. Increasing delay to 19713 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1626 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1135 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1399 ms. Decreasing delay to 3399 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1003 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3882 ms. Increasing delay to 11646 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 3688 ms to process. Increasing delay to 7000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1315 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1410 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1198 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1531 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5671 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1508 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4400 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1846 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1289 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 3959 ms to process. Increasing delay to 7000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 8190 ms to process. Increasing delay to 8000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1030 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2074 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3322 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6964 ms. Increasing delay to 20892 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3170 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 10108 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1109 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3059 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1054 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 12930 ms. Increasing delay to 38790 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3503 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3680 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2332 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  16944 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 71 MB. Current time: 6/18/20, 1:25:52 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1013 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1259 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 8585 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 963 ms. Decreasing delay to 2963 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4941 ms. Increasing delay to 14823 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1645 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 9183 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1303 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1194 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1189 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5977 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1025 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1450 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 8197 ms. Increasing delay to 24591 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1159 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 3986 ms to process. Increasing delay to 7000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1343 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2621 ms to process. Increasing delay to 6000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 3014 ms to process. Increasing delay to 7000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 607 ms. Decreasing delay to 2607 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1315 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1322 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5407 ms. Increasing delay to 16221 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3101 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2311 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1033 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1126 ms. Decreasing delay to 3126 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1573 ms. Increasing delay to 4719 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1306 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3894 ms. Increasing delay to 11682 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1830 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3977 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1071 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1112 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1620 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1126 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1012 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4187 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1805 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1021 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 12977 ms. Increasing delay to 38931 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 82 ms. Decreasing delay to 2082 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  15930 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 69 MB. Current time: 6/18/20, 1:55:29 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 71 MB. Current time: 6/18/20, 2:25:15 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 71 MB. Current time: 6/18/20, 2:55:15 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 70 MB. Current time: 6/18/20, 3:25:16 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 70 MB. Current time: 6/18/20, 3:55:16 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 71 MB. Current time: 6/18/20, 4:25:16 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 69 MB. Current time: 6/18/20, 4:55:16 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 69 MB. Current time: 6/18/20, 5:25:17 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 69 MB. Current time: 6/18/20, 5:55:17 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 69 MB. Current time: 6/18/20, 6:25:18 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 69 MB. Current time: 6/18/20, 6:55:18 PM ART
// Elapsed time: 88980 seconds
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v)]", 5); // B (F, cr)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v)]", 5); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_alu : alu (alu.v)]", 6, false); // B (F, cr)
// Elapsed time: 12 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_forwarding_unit : forwarding_unit (forwarding_unit.v)]", 7, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_alu : alu (alu.v)]", 6, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_forwarding_unit : forwarding_unit (forwarding_unit.v)]", 7, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding1 : mux_forwarding (mux_forwarding.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding2 : mux_forwarding (mux_forwarding.v)]", 9, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding1 : mux_forwarding (mux_forwarding.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding2 : mux_forwarding (mux_forwarding.v)]", 9, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding1 : mux_forwarding (mux_forwarding.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding2 : mux_forwarding (mux_forwarding.v)]", 9, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding1 : mux_forwarding (mux_forwarding.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_alu : alu (alu.v)]", 6, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_forwarding_unit : forwarding_unit (forwarding_unit.v)]", 7, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_alu : alu (alu.v)]", 6, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_forwarding_unit : forwarding_unit (forwarding_unit.v)]", 7, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_alu : alu (alu.v)]", 6, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_forwarding_unit : forwarding_unit (forwarding_unit.v)]", 7, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_alu : alu (alu.v)]", 6, false); // B (F, cr)
// Elapsed time: 23 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_forwarding_unit : forwarding_unit (forwarding_unit.v)]", 7, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_alu : alu (alu.v)]", 6, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_forwarding_unit : forwarding_unit (forwarding_unit.v)]", 7, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_forwarding_unit : forwarding_unit (forwarding_unit.v)]", 7, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_alu : alu (alu.v)]", 6, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_forwarding_unit : forwarding_unit (forwarding_unit.v)]", 7, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding1 : mux_forwarding (mux_forwarding.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_alu : alu (alu.v)]", 6, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_alu : alu (alu.v)]", 6, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_alu : alu (alu.v)]", 6, false, false, false, false, false, true); // B (F, cr) - Double Click
// Elapsed time: 22 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_alu : alu (alu.v)]", 6, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_forwarding_unit : forwarding_unit (forwarding_unit.v)]", 7, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_alu : alu (alu.v)]", 6, false); // B (F, cr)
// Elapsed time: 19 seconds
selectCodeEditor("alu.v", 223, 95); // ch (w, cr)
selectCodeEditor("alu.v", 296, 72); // ch (w, cr)
// Elapsed time: 34 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_alu : alu (alu.v)]", 6, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_alu : alu (alu.v)]", 6, false, false, false, false, false, true); // B (F, cr) - Double Click
selectCodeEditor("alu.v", 180, 73); // ch (w, cr)
selectCodeEditor("alu.v", 1, 29); // ch (w, cr)
typeControlKey((HResource) null, "alu.v", 'c'); // ch (w, cr)
// Elapsed time: 58 seconds
selectCodeEditor("alu.v", 276, 73); // ch (w, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("alu.v", 17, 142); // ch (w, cr)
selectCodeEditor("alu.v", 131, 259); // ch (w, cr)
selectCodeEditor("alu.v", 259, 248); // ch (w, cr)
selectCodeEditor("alu.v", 251, 266); // ch (w, cr)
selectCodeEditor("alu.v", 264, 284); // ch (w, cr)
selectCodeEditor("alu.v", 264, 284, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("alu.v", 241, 267); // ch (w, cr)
selectCodeEditor("alu.v", 241, 267, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("alu.v", 30, 96); // ch (w, cr)
selectCodeEditor("alu.v", 30, 96, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("alu.v", 32, 111); // ch (w, cr)
selectCodeEditor("alu.v", 32, 111, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("alu.v", 64, 132); // ch (w, cr)
selectCodeEditor("alu.v", 64, 132, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("alu.v", 39, 176); // ch (w, cr)
selectCodeEditor("alu.v", 39, 176, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("alu.v", 54, 194); // ch (w, cr)
selectCodeEditor("alu.v", 54, 194, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("alu.v", 183, 226); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "uart.v", 15); // i (h, cr)
selectCodeEditor("uart.v", 21, 111); // ch (w, cr)
selectCodeEditor("uart.v", 28, 218); // ch (w, cr)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "alu.v", 16); // i (h, cr)
selectCodeEditor("alu.v", 25, 248); // ch (w, cr)
selectCodeEditor("alu.v", 192, 330); // ch (w, cr)
selectCodeEditor("alu.v", 213, 335); // ch (w, cr)
selectCodeEditor("alu.v", 103, 197); // ch (w, cr)
selectCodeEditor("alu.v", 274, 237); // ch (w, cr)
// Elapsed time: 160 seconds
selectCodeEditor("alu.v", 111, 379); // ch (w, cr)
typeControlKey((HResource) null, "alu.v", 'c'); // ch (w, cr)
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 75 MB. Current time: 6/18/20, 7:25:18 PM ART
// Elapsed time: 363 seconds
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_forwarding_unit : forwarding_unit (forwarding_unit.v)]", 7, false); // B (F, cr)
// Elapsed time: 73 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_forwarding_unit : forwarding_unit (forwarding_unit.v)]", 7, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_forwarding_unit : forwarding_unit (forwarding_unit.v)]", 7, false, false, false, false, false, true); // B (F, cr) - Double Click
selectCodeEditor("forwarding_unit.v", 0, 75); // ch (w, cr)
typeControlKey((HResource) null, "forwarding_unit.v", 'c'); // ch (w, cr)
// Elapsed time: 475 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_alu : alu (alu.v)]", 6, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v)]", 5, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v)]", 5, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v)]", 5); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_alu : alu (alu.v)]", 6, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_forwarding_unit : forwarding_unit (forwarding_unit.v)]", 7, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding1 : mux_forwarding (mux_forwarding.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding2 : mux_forwarding (mux_forwarding.v)]", 9, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding1 : mux_forwarding (mux_forwarding.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding2 : mux_forwarding (mux_forwarding.v)]", 9, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding1 : mux_forwarding (mux_forwarding.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_forwarding_unit : forwarding_unit (forwarding_unit.v)]", 7, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v)]", 5, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_forwarding_unit : forwarding_unit (forwarding_unit.v)]", 7, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding1 : mux_forwarding (mux_forwarding.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding2 : mux_forwarding (mux_forwarding.v)]", 9, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding1 : mux_forwarding (mux_forwarding.v)]", 8, false); // B (F, cr)
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/18/20, 7:55:19 PM ART
// Elapsed time: 1584 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding1 : mux_forwarding (mux_forwarding.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding1 : mux_forwarding (mux_forwarding.v)]", 8, false, false, false, false, false, true); // B (F, cr) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding2 : mux_forwarding (mux_forwarding.v)]", 9, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding2 : mux_forwarding (mux_forwarding.v)]", 9, false, false, false, false, false, true); // B (F, cr) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding2 : mux_forwarding (mux_forwarding.v)]", 9, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding2 : mux_forwarding (mux_forwarding.v)]", 9, false, false, false, false, false, true); // B (F, cr) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding1 : mux_forwarding (mux_forwarding.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding1 : mux_forwarding (mux_forwarding.v)]", 8, false, false, false, false, false, true); // B (F, cr) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding2 : mux_forwarding (mux_forwarding.v)]", 9, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding2 : mux_forwarding (mux_forwarding.v)]", 9, false, false, false, false, false, true); // B (F, cr) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding1 : mux_forwarding (mux_forwarding.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding1 : mux_forwarding (mux_forwarding.v)]", 8, false, false, false, false, false, true); // B (F, cr) - Double Click
// Elapsed time: 14 seconds
selectCodeEditor("mux_forwarding.v", 111, 27); // ch (w, cr)
selectCodeEditor("mux_forwarding.v", 111, 27, false, false, false, false, true); // ch (w, cr) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding1 : mux_forwarding (mux_forwarding.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding2 : mux_forwarding (mux_forwarding.v)]", 9, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding1 : mux_forwarding (mux_forwarding.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding2 : mux_forwarding (mux_forwarding.v)]", 9, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding1 : mux_forwarding (mux_forwarding.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding2 : mux_forwarding (mux_forwarding.v)]", 9, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding1 : mux_forwarding (mux_forwarding.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding2 : mux_forwarding (mux_forwarding.v)]", 9, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_forwarding_unit : forwarding_unit (forwarding_unit.v)]", 7, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v)]", 5, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v)]", 5, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v)]", 5, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("execute.v", 45, 128); // ch (w, cr)
selectCodeEditor("execute.v", 45, 128, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 70, 145); // ch (w, cr)
selectCodeEditor("execute.v", 70, 145, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 72, 192); // ch (w, cr)
selectCodeEditor("execute.v", 72, 192, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 145, 210); // ch (w, cr)
selectCodeEditor("execute.v", 145, 210, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 89, 345); // ch (w, cr)
selectCodeEditor("execute.v", 89, 345, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 146, 364); // ch (w, cr)
selectCodeEditor("execute.v", 146, 364, false, false, false, false, true); // ch (w, cr) - Double Click
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v)]", 5); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding1 : mux_forwarding (mux_forwarding.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_forwarding_unit : forwarding_unit (forwarding_unit.v)]", 7, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding1 : mux_forwarding (mux_forwarding.v)]", 8, false); // B (F, cr)
// Elapsed time: 124 seconds
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("execute.v", 62, 97); // ch (w, cr)
selectCodeEditor("execute.v", 62, 97, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 79, 238); // ch (w, cr)
selectCodeEditor("execute.v", 79, 238, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 80, 98); // ch (w, cr)
selectCodeEditor("execute.v", 80, 98, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 63, 243); // ch (w, cr)
selectCodeEditor("execute.v", 62, 243, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 129, 107); // ch (w, cr)
selectCodeEditor("execute.v", 129, 107, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 119, 268); // ch (w, cr)
selectCodeEditor("execute.v", 119, 268, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 139, 107); // ch (w, cr)
selectCodeEditor("execute.v", 223, 125); // ch (w, cr)
selectCodeEditor("execute.v", 223, 125, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 256, 129); // ch (w, cr)
selectCodeEditor("execute.v", 196, 280); // ch (w, cr)
selectCodeEditor("execute.v", 196, 280, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 280, 137); // ch (w, cr)
selectCodeEditor("execute.v", 280, 137, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 210, 275); // ch (w, cr)
selectCodeEditor("execute.v", 210, 275, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 214, 282); // ch (w, cr)
selectCodeEditor("execute.v", 214, 282, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 210, 122); // ch (w, cr)
selectCodeEditor("execute.v", 210, 122, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 202, 284); // ch (w, cr)
selectCodeEditor("execute.v", 202, 284, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 225, 131); // ch (w, cr)
selectCodeEditor("execute.v", 225, 131, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 224, 285); // ch (w, cr)
selectCodeEditor("execute.v", 224, 285, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 39 seconds
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding1 : mux_forwarding (mux_forwarding.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_forwarding_unit : forwarding_unit (forwarding_unit.v)]", 7, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding1 : mux_forwarding (mux_forwarding.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding2 : mux_forwarding (mux_forwarding.v)]", 9, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding1 : mux_forwarding (mux_forwarding.v)]", 8, false); // B (F, cr)
// Elapsed time: 65 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding1 : mux_forwarding (mux_forwarding.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v), u_mux_forwarding1 : mux_forwarding (mux_forwarding.v)]", 8, false, false, false, false, false, true); // B (F, cr) - Double Click
selectCodeEditor("mux_forwarding.v", 2, 131); // ch (w, cr)
typeControlKey((HResource) null, "mux_forwarding.v", 'c'); // ch (w, cr)
// Elapsed time: 106 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v)]", 5, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v)]", 5, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v)]", 5, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
// Elapsed time: 10 seconds
selectCodeEditor("execute.v", 287, 211); // ch (w, cr)
selectCodeEditor("execute.v", 287, 211, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 265, 235); // ch (w, cr)
selectCodeEditor("execute.v", 265, 235, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 160, 147); // ch (w, cr)
selectCodeEditor("execute.v", 160, 147, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 160, 162); // ch (w, cr)
selectCodeEditor("execute.v", 160, 162, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 159, 183); // ch (w, cr)
selectCodeEditor("execute.v", 159, 183, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 162, 146); // ch (w, cr)
selectCodeEditor("execute.v", 162, 146, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 169, 166); // ch (w, cr)
selectCodeEditor("execute.v", 169, 166, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 160, 143); // ch (w, cr)
selectCodeEditor("execute.v", 160, 143, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 163, 169); // ch (w, cr)
selectCodeEditor("execute.v", 163, 169, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 154, 333); // ch (w, cr)
selectCodeEditor("execute.v", 154, 333, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 207, 347); // ch (w, cr)
selectCodeEditor("execute.v", 207, 347, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 182, 181); // ch (w, cr)
selectCodeEditor("execute.v", 182, 181, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 185, 125); // ch (w, cr)
selectCodeEditor("execute.v", 185, 125, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 10 seconds
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v)]", 2, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v)]", 2, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v)]", 2, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
// Elapsed time: 15 seconds
selectCodeEditor("top_mips.v", 145, 219); // ch (w, cr)
selectCodeEditor("top_mips.v", 145, 219, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 155, 238); // ch (w, cr)
selectCodeEditor("top_mips.v", 155, 237, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 152, 245); // ch (w, cr)
selectCodeEditor("top_mips.v", 152, 245, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 155, 258); // ch (w, cr)
selectCodeEditor("top_mips.v", 155, 258, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 160, 209); // ch (w, cr)
selectCodeEditor("top_mips.v", 160, 209, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 160, 241); // ch (w, cr)
selectCodeEditor("top_mips.v", 160, 241, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 175, 335); // ch (w, cr)
selectCodeEditor("top_mips.v", 175, 335, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 210, 351); // ch (w, cr)
selectCodeEditor("top_mips.v", 210, 351, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 207, 339); // ch (w, cr)
selectCodeEditor("top_mips.v", 207, 339, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 208, 355); // ch (w, cr)
selectCodeEditor("top_mips.v", 208, 355, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 212, 336); // ch (w, cr)
selectCodeEditor("top_mips.v", 211, 335, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 215, 352); // ch (w, cr)
selectCodeEditor("top_mips.v", 215, 352, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 216, 331); // ch (w, cr)
selectCodeEditor("top_mips.v", 216, 331, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 219, 345); // ch (w, cr)
selectCodeEditor("top_mips.v", 220, 344, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 18 seconds
selectCodeEditor("top_mips.v", 116, 226); // ch (w, cr)
selectCodeEditor("top_mips.v", 116, 226, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 16 seconds
selectCodeEditor("top_mips.v", 179, 279); // ch (w, cr)
selectCodeEditor("top_mips.v", 179, 279, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 179, 298); // ch (w, cr)
selectCodeEditor("top_mips.v", 179, 298, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 190, 283); // ch (w, cr)
selectCodeEditor("top_mips.v", 190, 283, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 10 seconds
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
// Elapsed time: 480 seconds
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v)]", 2); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v)]", 5, true); // B (F, cr) - Node
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v)]", 5); // B (F, cr)
// Elapsed time: 64 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v)]", 5, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v)]", 5, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("execute.v", 2, 179); // ch (w, cr)
typeControlKey((HResource) null, "execute.v", 'c'); // ch (w, cr)
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 75 MB. Current time: 6/18/20, 8:25:19 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 75 MB. Current time: 6/18/20, 8:55:19 PM ART
// Elapsed time: 1917 seconds
selectCodeEditor("execute.v", 212, 222); // ch (w, cr)
selectCodeEditor("execute.v", 149, 347); // ch (w, cr)
selectCodeEditor("execute.v", 149, 347, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 141, 368); // ch (w, cr)
selectCodeEditor("execute.v", 141, 368, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 37 seconds
selectCodeEditor("execute.v", 156, 382); // ch (w, cr)
selectCodeEditor("execute.v", 156, 382, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 158, 174); // ch (w, cr)
selectCodeEditor("execute.v", 158, 174, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 154, 160); // ch (w, cr)
selectCodeEditor("execute.v", 155, 161); // ch (w, cr)
selectCodeEditor("execute.v", 155, 162, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 146, 377); // ch (w, cr)
selectCodeEditor("execute.v", 146, 377, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 153, 212); // ch (w, cr)
selectCodeEditor("execute.v", 153, 212, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 109, 214); // ch (w, cr)
selectCodeEditor("execute.v", 109, 214, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("execute.v", 157, 210); // ch (w, cr)
selectCodeEditor("execute.v", 157, 210, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 1066 seconds
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v)]", 2, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v)]", 2, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("top_mips.v", 44, 202); // ch (w, cr)
selectCodeEditor("top_mips.v", 34, 163); // ch (w, cr)
selectCodeEditor("top_mips.v", 47, 112); // ch (w, cr)
selectCodeEditor("top_mips.v", 47, 112, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 53, 222); // ch (w, cr)
selectCodeEditor("top_mips.v", 53, 222, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 51, 62); // ch (w, cr)
selectCodeEditor("top_mips.v", 51, 62, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 34, 365); // ch (w, cr)
selectCodeEditor("top_mips.v", 132, 357); // ch (w, cr)
selectCodeEditor("top_mips.v", 198, 193); // ch (w, cr)
selectCodeEditor("top_mips.v", 185, 167); // ch (w, cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v)]", 2); // B (F, cr)
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_memory : memory (memory.v)]", 6); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_memory : memory (memory.v)]", 6, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_execute : execute (execute.v)]", 5, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_memory : memory (memory.v)]", 6, true); // B (F, cr) - Node
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 75 MB. Current time: 6/18/20, 9:25:20 PM ART
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 814 ms to process. Increasing delay to 2000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 1046 ms to process. Increasing delay to 2000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 975 ms to process. Increasing delay to 2000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1161 ms. Increasing delay to 3483 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 75 MB. Current time: 6/18/20, 9:55:20 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/18/20, 10:25:20 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/18/20, 10:55:21 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 75 MB. Current time: 6/18/20, 11:25:21 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 75 MB. Current time: 6/18/20, 11:55:22 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  10800171 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1396 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 75 MB. Current time: 6/19/20, 3:11:52 AM ART
// WARNING: HEventQueue.dispatchEvent() is taking  21131733 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 21131822 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2009 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/19/20, 9:04:09 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/19/20, 9:34:07 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 75 MB. Current time: 6/19/20, 10:04:07 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/19/20, 10:34:08 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/19/20, 11:04:08 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 75 MB. Current time: 6/19/20, 11:34:08 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 75 MB. Current time: 6/19/20, 12:04:09 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/19/20, 12:34:09 PM ART
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6102 ms. Increasing delay to 18306 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1036 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1054 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3382 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 160 ms. Decreasing delay to 2160 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1034 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  8199 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1251 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 11879 ms. Increasing delay to 35637 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3448 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1582 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1596 ms. Decreasing delay to 3596 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2397 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1056 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1143 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1607 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1740 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 8839 ms to process. Increasing delay to 8000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5510 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 8928 ms to process. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 9034 ms. Increasing delay to 27102 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 8723 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  9880 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1190 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7132 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3717 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6754 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1292 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1021 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 22530 ms. Increasing delay to 67590 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4807 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1148 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1295 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1055 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  11095 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1060 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 7126 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1168 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1124 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1213 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1076 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 1001 ms to process. Increasing delay to 3000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 1001 ms to process. Increasing delay to 3000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1184 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1268 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1247 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1031 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  10144 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 12096 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  11434 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 75 MB. Current time: 6/19/20, 1:05:00 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  31884 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4764 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 620 ms. Decreasing delay to 2620 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5455 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 8458 ms. Increasing delay to 25374 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2879 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1009 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1164 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5809 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 3260 ms to process. Increasing delay to 3000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 17363 ms. Increasing delay to 52089 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6162 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1145 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1407 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 10598 ms to process. Increasing delay to 4000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 10601 ms to process. Increasing delay to 8000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 10600 ms to process. Increasing delay to 8000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 10601 ms to process. Increasing delay to 8000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 10600 ms to process. Increasing delay to 8000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2213 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1023 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1014 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1245 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7603 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6815 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1213 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  8873 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1130 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1134 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  52046 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1047 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4723 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1042 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1092 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1081 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1039 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5379 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 10046 ms to process. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2956 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1141 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1867 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1063 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5411 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1397 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7731 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3839 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1169 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1329 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 6433 ms to process. Increasing delay to 9000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1570 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5993 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1076 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1778 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5417 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1566 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1070 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6769 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2305 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4800 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1179 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1035 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1163 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1638 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6532 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3785 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1053 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1104 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3112 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 424 ms. Decreasing delay to 2424 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1074 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1561 ms. Increasing delay to 4683 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3564 ms. Increasing delay to 10692 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1318 ms. Decreasing delay to 3318 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1101 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4330 ms. Increasing delay to 12990 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1288 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 7608 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3252 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1146 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1015 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 8390 ms. Increasing delay to 25170 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1007 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1305 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1923 ms.
// WARNING: HTimer (WrapperUtils Delayed Delete Timer) is taking 1564ms to process. Increasing delay to 3000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1728 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1083 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5826 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1703 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1294 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1003 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1611 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1352 ms. Decreasing delay to 3352 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  8130 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1071 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1061 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1353 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1132 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 13182 ms. Increasing delay to 39546 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6142 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1771 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7872 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1014 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5724 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1173 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1412 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1509 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1186 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2090 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2412 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  25169 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1160 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 5192 ms to process. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 23135 ms. Increasing delay to 69405 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1385 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1059 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1480 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1148 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1193 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1025 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2524 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1041 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1268 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1686 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1455 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1605 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1492 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1394 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1024 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1135 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1264 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1422 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1080 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6488 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5373 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  8785 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1275 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1205 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5600 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  13603 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 8483 ms to process. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 8482 ms to process. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  8063 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1260 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3966 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1020 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1168 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1197 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 8389 ms to process. Increasing delay to 4000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7865 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 24493 ms to process. Increasing delay to 9000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  22985 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1006 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6547 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  8887 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1043 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5858 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1860 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1118 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2522 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2650 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 8132 ms to process. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7636 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5568 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1018 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3950 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1290 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1012 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5578 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5631 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1101 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1947 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1112 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1365 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1181 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1516 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1013 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1230 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1470 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7568 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  9729 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2903 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7454 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6338 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5333 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1074 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1328 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7272 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1139 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7992 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2316 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1556 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1098 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  8801 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1897 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3505 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4420 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4493 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1161 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 11584 ms to process. Increasing delay to 7000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7545 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1491 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1132 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5771 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1140 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5686 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5407 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1271 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1167 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1123 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4579 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1021 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1191 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1248 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6303 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6140 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6869 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2234 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1040 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6350 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6560 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1048 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1368 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1898 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1095 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2600 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1758 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5135 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2428 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7394 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6440 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1004 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1053 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6131 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6269 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1022 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3769 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1138 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1030 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1290 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  9504 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3929 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1007 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7407 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3860 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 42 ms. Decreasing delay to 2042 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1320 ms. Increasing delay to 3960 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2504 ms. Increasing delay to 7512 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4964 ms. Increasing delay to 14892 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 381 ms. Decreasing delay to 2381 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3687 ms. Increasing delay to 11061 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 37 ms. Decreasing delay to 2037 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  15119 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/19/20, 1:34:31 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 75 MB. Current time: 6/19/20, 2:04:17 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 75 MB. Current time: 6/19/20, 2:34:18 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/19/20, 3:04:18 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 75 MB. Current time: 6/19/20, 3:34:18 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 75 MB. Current time: 6/19/20, 4:04:19 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/19/20, 4:34:19 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 75 MB. Current time: 6/19/20, 5:04:20 PM ART
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1602 ms. Increasing delay to 4806 ms.
// Elapsed time: 71939 seconds
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_memory : memory (memory.v)]", 6); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_memory : memory (memory.v), u_ram_datos : ram_datos (ram_datos.v)]", 7, false); // B (F, cr)
// Elapsed time: 25 seconds
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 3); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v), u_ram_instrucciones : ram_instrucciones (ram_instrucciones.v)]", 6, false); // B (F, cr)
// Elapsed time: 40 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_memory : memory (memory.v), u_ram_datos : ram_datos (ram_datos.v)]", 11, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_memory : memory (memory.v), u_ram_datos : ram_datos (ram_datos.v)]", 11, false, false, false, false, false, true); // B (F, cr) - Double Click
selectCodeEditor("ram_datos.v", 2, 114); // ch (w, cr)
typeControlKey((HResource) null, "ram_datos.v", 'c'); // ch (w, cr)
// Elapsed time: 69 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_memory : memory (memory.v), u_ram_datos : ram_datos (ram_datos.v)]", 11, false); // B (F, cr)
selectCodeEditor("ram_datos.v", 144, 72); // ch (w, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("ram_datos.v", 320, 217); // ch (w, cr)
selectCodeEditor("ram_datos.v", 667, 216); // ch (w, cr)
selectCodeEditor("ram_datos.v", 653, 215); // ch (w, cr)
selectCodeEditor("ram_datos.v", 432, 234); // ch (w, cr)
selectCodeEditor("ram_datos.v", 627, 208); // ch (w, cr)
selectCodeEditor("ram_datos.v", 133, 147); // ch (w, cr)
selectCodeEditor("ram_datos.v", 133, 147, false, false, false, false, true); // ch (w, cr) - Double Click
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 3, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 3, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 3); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v), u_ram_instrucciones : ram_instrucciones (ram_instrucciones.v)]", 6, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v), u_ram_instrucciones : ram_instrucciones (ram_instrucciones.v)]", 6, false, false, false, false, false, true); // B (F, cr) - Double Click
selectCodeEditor("ram_instrucciones.v", 192, 107); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 192, 107, false, false, false, false, true); // ch (w, cr) - Double Click
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("ram_instrucciones.v", 645, 113); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 405, 131); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 282, 129); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 283, 132); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 633, 112); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 167, 128); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 167, 114); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 169, 127); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 302, 141); // ch (w, cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
// Elapsed time: 471 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 3, true); // B (F, cr) - Node
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 3); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_memory : memory (memory.v)]", 6, true); // B (F, cr) - Node
// Elapsed time: 39 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_memory : memory (memory.v)]", 6, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_memory : memory (memory.v)]", 6, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("memory.v", 2, 180); // ch (w, cr)
typeControlKey((HResource) null, "memory.v", 'c'); // ch (w, cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/19/20, 5:34:20 PM ART
// Elapsed time: 2117 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 3, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 3, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("instruction_fetch.v", 88, 167); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 271, 197); // ch (w, cr)
typeControlKey((HResource) null, "instruction_fetch.v", 'c'); // ch (w, cr)
// Elapsed time: 46 seconds
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v)]", 2, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v)]", 2, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
// Elapsed time: 10 seconds
selectCodeEditor("top_mips.v", 198, 243); // ch (w, cr)
selectCodeEditor("top_mips.v", 198, 243, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 206, 177); // ch (w, cr)
selectCodeEditor("top_mips.v", 206, 177, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 12 seconds
selectCodeEditor("top_mips.v", 231, 286); // ch (w, cr)
selectCodeEditor("top_mips.v", 231, 286, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 10 seconds
selectCodeEditor("top_mips.v", 135, 284); // ch (w, cr)
selectCodeEditor("top_mips.v", 135, 284, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 159, 297); // ch (w, cr)
selectCodeEditor("top_mips.v", 159, 297, false, false, false, false, true); // ch (w, cr) - Double Click
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/19/20, 6:04:20 PM ART
// Elapsed time: 61 seconds
selectCodeEditor("top_mips.v", 299, 296); // ch (w, cr)
selectCodeEditor("top_mips.v", 299, 296, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 189, 298); // ch (w, cr)
selectCodeEditor("top_mips.v", 189, 298, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 289, 301); // ch (w, cr)
selectCodeEditor("top_mips.v", 289, 301, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 13 seconds
selectCodeEditor("top_mips.v", 240, 181); // ch (w, cr)
selectCodeEditor("top_mips.v", 240, 181, false, false, false, false, true); // ch (w, cr) - Double Click
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
// Elapsed time: 10 seconds
selectCodeEditor("top_mips.v", 144, 234); // ch (w, cr)
selectCodeEditor("top_mips.v", 144, 234, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 251, 230); // ch (w, cr)
selectCodeEditor("top_mips.v", 251, 230, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 313, 142); // ch (w, cr)
selectCodeEditor("top_mips.v", 313, 142, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 168, 141); // ch (w, cr)
selectCodeEditor("top_mips.v", 168, 141, false, false, false, false, true); // ch (w, cr) - Double Click
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_recolector : recolector (recolector.v)]", 3, false); // B (F, cr)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v)]", 2); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v)]", 8, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v)]", 8, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v), u_alu_control : alu_control (alu_control.v)]", 10, false, false, false, false, false, true); // B (F, cr) - Double Click
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("decode.v", 181, 210); // ch (w, cr)
selectCodeEditor("decode.v", 181, 210, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("decode.v", 153, 148); // ch (w, cr)
selectCodeEditor("decode.v", 153, 148, false, false, false, false, true); // ch (w, cr) - Double Click
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/19/20, 6:34:21 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/19/20, 7:04:21 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/19/20, 7:34:22 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/19/20, 8:04:22 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/19/20, 8:34:22 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/19/20, 9:04:23 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/19/20, 9:34:23 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/19/20, 10:04:23 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/19/20, 10:34:24 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/19/20, 11:04:24 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  10801612 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/20/20, 2:32:42 AM ART
// WARNING: HEventQueue.dispatchEvent() is taking  30454134 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/20/20, 11:00:21 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/20/20, 11:30:19 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/20/20, 12:00:19 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/20/20, 12:30:20 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/20/20, 1:00:20 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/20/20, 1:30:20 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/20/20, 2:00:21 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/20/20, 2:30:21 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  3006845 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/20/20, 3:36:18 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  2366 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1021 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1582 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1075 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1261 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2182 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3582 ms. Increasing delay to 10746 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 47 ms. Decreasing delay to 2047 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1236 ms. Increasing delay to 3708 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2021 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2997 ms. Increasing delay to 8991 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1889 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4710 ms. Increasing delay to 14130 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 353 ms. Decreasing delay to 2353 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1791 ms. Increasing delay to 5373 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1017 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7252 ms. Increasing delay to 21756 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 1831 ms to process. Increasing delay to 2000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 248 ms. Decreasing delay to 2248 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1120 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4523 ms. Increasing delay to 13569 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1356 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1498 ms. Decreasing delay to 3498 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2519 ms. Increasing delay to 7557 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4983 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 5381 ms to process. Increasing delay to 5000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1249 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 7120 ms to process. Increasing delay to 8000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2901 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 20410 ms. Increasing delay to 61230 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3818 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1360 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 174 ms. Decreasing delay to 2174 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 1522 ms to process. Increasing delay to 4000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1553 ms. Increasing delay to 4659 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1734 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1072 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1019 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1068 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1296 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1015 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3044 ms. Increasing delay to 9132 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1173 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7966 ms. Increasing delay to 23898 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1005 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4019 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1041 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 3084 ms to process. Increasing delay to 5000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1373 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1113 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 243 ms. Decreasing delay to 2243 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4211 ms. Increasing delay to 12633 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1038 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1004 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1031 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2247 ms to process. Increasing delay to 5000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 180 ms. Decreasing delay to 2180 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1144 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1587 ms. Increasing delay to 4761 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  16474 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/20/20, 4:06:36 PM ART
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3105 ms. Increasing delay to 9315 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1202 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1092 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 3971 ms to process. Increasing delay to 6000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2544 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1666 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1164 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 9932 ms. Increasing delay to 29796 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1546 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1683 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1235 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 108 ms. Decreasing delay to 2108 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1139 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4928 ms. Increasing delay to 14784 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1023 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1091 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 510 ms. Decreasing delay to 2510 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2687 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4626 ms. Increasing delay to 13878 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2200 ms to process. Increasing delay to 2000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 244 ms. Decreasing delay to 2244 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1081 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1259 ms. Increasing delay to 3777 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1316 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1996 ms. Increasing delay to 5988 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1189 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1042 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1176 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5207 ms. Increasing delay to 15621 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 100 ms. Decreasing delay to 2100 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3111 ms. Increasing delay to 9333 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1010 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  15926 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/20/20, 4:36:38 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/20/20, 5:06:24 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/20/20, 5:36:25 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/20/20, 6:06:25 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  2346143 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/20/20, 6:51:50 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/20/20, 7:21:49 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/20/20, 7:51:50 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  243039 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1095 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1060 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2580 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1090 ms.
// WARNING: HTimer (FileMgr Design Graph Update Timer) is taking 756ms to process. Increasing delay to 3000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1187 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  30238 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/20/20, 8:22:24 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  11066 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 18533 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1027 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3411 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1014 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  10801366 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  34243167 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/21/20, 9:16:39 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/21/20, 9:46:40 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/21/20, 10:16:40 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/21/20, 10:46:40 AM ART
// WARNING: HEventQueue.dispatchEvent() is taking  32570 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  36796 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/21/20, 11:17:26 AM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1286 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1722 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2348 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 11403 ms. Increasing delay to 34209 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1316 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 100 ms. Decreasing delay to 2100 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1582 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1706 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1015 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1031 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1016 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 7612 ms to process. Increasing delay to 3000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 7612 ms to process. Increasing delay to 3000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 7615 ms to process. Increasing delay to 7000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1331 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2835 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1088 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 16570 ms. Increasing delay to 49710 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1361 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3993 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2194 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2270 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1732 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1290 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1392 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 8672 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1217 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1847 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1051 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1617 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1900 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 4820 ms to process. Increasing delay to 9000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1843 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1258 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1018 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1302 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2243 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3363 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1149 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 279 ms. Decreasing delay to 2279 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4834 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5988 ms. Increasing delay to 17964 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1459 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 248 ms. Decreasing delay to 2248 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2892 ms to process. Increasing delay to 6000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 8585 ms. Increasing delay to 25755 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1785 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 382 ms. Decreasing delay to 2382 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1659 ms. Increasing delay to 4977 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7159 ms. Increasing delay to 21477 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 158 ms. Decreasing delay to 2158 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2962 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 9418 ms. Increasing delay to 28254 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 179 ms. Decreasing delay to 2179 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1091 ms. Increasing delay to 3273 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1140 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2714 ms. Increasing delay to 8142 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1223 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1187 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1186 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1181 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1039 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 20981 ms. Increasing delay to 62943 ms.
// WARNING: HTimer (HSTRUtils Dump STR Log Timer) is taking 2631ms to process. Increasing delay to 6000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2764 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2023 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1203 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2239 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2286 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 5964 ms to process. Increasing delay to 7000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2892 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6148 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 16079 ms to process. Increasing delay to 4000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 16074 ms to process. Increasing delay to 6000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1480 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2293 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1042 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 17334 ms to process. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 17349 ms to process. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 17334 ms to process. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  12193 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 17340 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1083 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  19026 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4554 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2464 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1069 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1393 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3785 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1384 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1055 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1541 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2223 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2310 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3718 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1382 ms. Decreasing delay to 3382 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1107 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3237 ms. Increasing delay to 9711 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1013 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6704 ms. Increasing delay to 20112 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1434 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1167 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1868 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1114 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 5913 ms to process. Increasing delay to 9000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1206 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1074 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1066 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1097 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1060 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1038 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1238 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1744 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 192 ms. Decreasing delay to 2192 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1368 ms. Increasing delay to 4104 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5303 ms. Increasing delay to 15909 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  14383 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/21/20, 11:47:03 AM ART
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 305 ms. Decreasing delay to 2305 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1972 ms. Increasing delay to 5916 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3272 ms. Increasing delay to 9816 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1012 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5083 ms. Increasing delay to 15249 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1525 ms. Decreasing delay to 3525 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1009 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1006 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2119 ms. Increasing delay to 6357 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1825 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5125 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4857 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1172 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 14387 ms. Increasing delay to 43161 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3053 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1968 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 401 ms. Decreasing delay to 2401 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2193 ms. Increasing delay to 6579 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1222 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1832 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5804 ms. Increasing delay to 17412 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1285 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1016 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1063 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1075 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2089 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1647 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1277 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1328 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 10129 ms to process. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1210 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 90 ms. Decreasing delay to 2090 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1178 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3749 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1342 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  9057 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 21322 ms. Increasing delay to 63966 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7940 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2491 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 257 ms. Decreasing delay to 2257 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1172 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1606 ms. Increasing delay to 4818 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 1513 ms to process. Increasing delay to 4000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5788 ms. Increasing delay to 17364 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 130 ms. Decreasing delay to 2130 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2261 ms. Increasing delay to 6783 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2239 ms to process. Increasing delay to 5000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 2248 ms to process. Increasing delay to 5000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1511 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1076 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2282 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1968 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5663 ms. Increasing delay to 16989 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 94 ms. Decreasing delay to 2094 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1343 ms. Increasing delay to 4029 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  13948 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/21/20, 12:17:08 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  444085 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2063 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  12761 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/21/20, 12:47:35 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/21/20, 1:17:20 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/21/20, 1:47:24 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/21/20, 2:17:24 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/21/20, 2:47:25 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1392 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2412 ms. Increasing delay to 7236 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4199 ms. Increasing delay to 12597 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1122 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 10440 ms. Increasing delay to 31320 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1101 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1031 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1164 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1469 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 709 ms. Decreasing delay to 2709 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1341 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5697 ms. Increasing delay to 17091 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 240 ms. Decreasing delay to 2240 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1544 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4586 ms. Increasing delay to 13758 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1350 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 404 ms. Decreasing delay to 2404 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2629 ms. Increasing delay to 7887 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1413 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 12780 ms. Increasing delay to 38340 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5067 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2825 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1072 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1937 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1551 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1096 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1036 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1017 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 6470 ms to process. Increasing delay to 9000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1382 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1288 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 20159 ms. Increasing delay to 60477 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2128 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4899 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1213 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2528 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2640 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4020 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  11732 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 9724 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 3621 ms to process. Increasing delay to 6000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1801 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1119 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1335 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1102 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1280 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5024 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1830 ms. Decreasing delay to 3830 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1073 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4881 ms. Increasing delay to 14643 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2184 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1041 ms.
// WARNING: HTimer (ExpRunMgr Pending Runs Timer) is taking 3018ms to process. Increasing delay to 4000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3519 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2301 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1317 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 6612 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1004 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1085 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  18787 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2470 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1506 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5457 ms. Increasing delay to 10000 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/21/20, 3:18:05 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1050 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 12851 ms. Increasing delay to 38553 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3231 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1130 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5278 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6641 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1438 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1122 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1226 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6705 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2841 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6487 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3980 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5628 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1503 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1302 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2846 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2316 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 577 ms. Decreasing delay to 2577 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1541 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2847 ms. Increasing delay to 8541 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 11477 ms. Increasing delay to 34431 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4090 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1065 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 95 ms. Decreasing delay to 2095 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1275 ms. Increasing delay to 3825 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1838 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2883 ms. Increasing delay to 8649 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5376 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 8507 ms. Increasing delay to 25521 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1128 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 474 ms. Decreasing delay to 2474 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6100 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 16209 ms. Increasing delay to 48627 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1089 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1165 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1115 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1563 ms. Decreasing delay to 3563 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1841 ms. Increasing delay to 5523 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3501 ms. Increasing delay to 10503 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 43 ms. Decreasing delay to 2043 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1029 ms. Increasing delay to 3087 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2138 ms. Increasing delay to 6414 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1218 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1271 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3737 ms. Increasing delay to 11211 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 432 ms. Decreasing delay to 2432 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1017 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 9493 ms. Increasing delay to 28479 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1624 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1074 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1352 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3191 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 433 ms. Decreasing delay to 2433 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2140 ms. Increasing delay to 6420 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1307 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4217 ms. Increasing delay to 12651 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1073 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 6340 ms to process. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1254 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1220 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 526 ms. Decreasing delay to 2526 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5017 ms. Increasing delay to 15051 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1605 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1005 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1241 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1174 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1644 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 9879 ms. Increasing delay to 29637 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1097 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 9755 ms to process. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2210 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 9111 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1219 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1201 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4013 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2434 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 6215 ms to process. Increasing delay to 8000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 6068 ms to process. Increasing delay to 9000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1005 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1066 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 18958 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1019 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1103 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1177 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3169 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1740 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1059 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1064 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1120 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 31034 ms. Increasing delay to 93102 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7098 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2554 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1039 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1205 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 9318 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 6985 ms to process. Increasing delay to 7000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6010 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1545 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 926 ms. Decreasing delay to 2926 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3527 ms. Increasing delay to 10581 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 552 ms. Decreasing delay to 2552 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1228 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1351 ms. Increasing delay to 4053 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1621 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3011 ms. Increasing delay to 9033 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  27048 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/21/20, 3:48:00 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1044 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1169 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7771 ms. Increasing delay to 23313 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1014 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 187 ms. Decreasing delay to 2187 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1102 ms. Increasing delay to 3306 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2576 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 9616 ms. Increasing delay to 28848 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1840 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 26 ms. Decreasing delay to 2026 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2205 ms. Increasing delay to 6615 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1119 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1197 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1047 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1156 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 8780 ms. Increasing delay to 26340 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 6612 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2931 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 178 ms. Decreasing delay to 2178 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1388 ms. Increasing delay to 4164 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2647 ms. Increasing delay to 7941 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7476 ms. Increasing delay to 22428 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1068 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1275 ms. Decreasing delay to 3275 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1032 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1259 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1180 ms.
// WARNING: HTimer (ActiveMsgMonitor Process Messages Timer) is taking 14222ms to process. Increasing delay to 4000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  14252 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 16011 ms. Increasing delay to 48033 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7616 ms.
// WARNING: HTimer (ExpRunMgr Pending Runs Timer) is taking 4883ms to process. Increasing delay to 5000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4902 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 7898 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6725 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1179 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1528 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1165 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1246 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2723 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2667 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2442 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3453 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4847 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5459 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 6747 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4729 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2277 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2086 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1592 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5080 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 932 ms. Decreasing delay to 2932 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1047 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1056 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7012 ms. Increasing delay to 21036 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 3452 ms to process. Increasing delay to 6000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5974 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 19071 ms. Increasing delay to 57213 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3352 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2099 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 77 ms. Decreasing delay to 2077 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1082 ms. Increasing delay to 3246 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3261 ms. Increasing delay to 9783 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1322 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1032 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 3658 ms to process. Increasing delay to 7000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1895 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1989 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4998 ms. Increasing delay to 14994 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 10729 ms. Increasing delay to 32187 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2281 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5966 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  15279 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/21/20, 4:17:49 PM ART
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 301 ms. Decreasing delay to 2301 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1889 ms. Increasing delay to 5667 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2003 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3569 ms. Increasing delay to 10707 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 530 ms. Decreasing delay to 2530 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3585 ms. Increasing delay to 10755 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 105 ms. Decreasing delay to 2105 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2265 ms. Increasing delay to 6795 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1108 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1012 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1401 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 7117 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 15349 ms. Increasing delay to 46047 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3670 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1088 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4352 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1014 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  11473 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1101 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 180 ms. Decreasing delay to 2180 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4865 ms. Increasing delay to 14595 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1268 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1444 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1151 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 12318 ms. Increasing delay to 36954 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1372 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1197 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1187 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 848 ms. Decreasing delay to 2848 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3545 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4772 ms. Increasing delay to 14316 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 86 ms. Decreasing delay to 2086 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1831 ms. Increasing delay to 5493 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 9099 ms. Increasing delay to 27297 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1189 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1025 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2430 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 4440 ms to process. Increasing delay to 9000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1838 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 139 ms. Decreasing delay to 2139 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6578 ms. Increasing delay to 19734 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1280 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1744 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 955 ms. Decreasing delay to 2955 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1478 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2150 ms. Increasing delay to 6450 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1045 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2382 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 13618 ms. Increasing delay to 40854 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 6887 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 197 ms. Decreasing delay to 2197 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2137 ms. Increasing delay to 6411 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1637 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3721 ms. Increasing delay to 11163 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 251 ms. Decreasing delay to 2251 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2191 ms. Increasing delay to 6573 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1809 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7389 ms. Increasing delay to 22167 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2383 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 299 ms. Decreasing delay to 2299 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1111 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4775 ms. Increasing delay to 14325 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1043 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1223 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5030 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1208 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2555 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1270 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1136 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1039 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3339 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 22160 ms. Increasing delay to 66480 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6993 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3693 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1861 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 642 ms. Decreasing delay to 2642 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1643 ms. Increasing delay to 4929 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3310 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1131 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3447 ms. Increasing delay to 10341 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3339 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1431 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5891 ms. Increasing delay to 17673 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1238 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1353 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1118 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 9217 ms. Increasing delay to 27651 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 271 ms. Decreasing delay to 2271 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1227 ms. Increasing delay to 3681 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2546 ms. Increasing delay to 7638 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2776 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5717 ms. Increasing delay to 17151 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1135 ms. Decreasing delay to 3135 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5693 ms. Increasing delay to 17079 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2956 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 70 ms. Decreasing delay to 2070 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2626 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1198 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1040 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4127 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1277 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5663 ms. Increasing delay to 16989 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1376 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1124 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1287 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1202 ms.
// WARNING: HTimer (FileMgr Design Graph Update Timer) is taking 3122ms to process. Increasing delay to 4000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3122 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1753 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1750 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 20551 ms. Increasing delay to 61653 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5219 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1694 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1101 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5105 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 7516 ms to process. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6377 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3176 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1216 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4683 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2893 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2207 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 6871 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1111 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1027 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  15373 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/21/20, 4:48:05 PM ART
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 331 ms. Decreasing delay to 2331 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1019 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1470 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1122 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7393 ms. Increasing delay to 22179 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2848 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4743 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1341 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5132 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3109 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 161 ms. Decreasing delay to 2161 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1037 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 11317 ms. Increasing delay to 33951 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 58 ms. Decreasing delay to 2058 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1176 ms. Increasing delay to 3528 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2336 ms. Increasing delay to 7008 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5491 ms. Increasing delay to 16473 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 69 ms. Decreasing delay to 2069 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1716 ms. Increasing delay to 5148 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1637 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6758 ms. Increasing delay to 20274 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 75 ms. Decreasing delay to 2075 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1895 ms. Increasing delay to 5685 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 4769 ms. Increasing delay to 14307 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2345 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 952 ms. Decreasing delay to 2952 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 6017 ms. Increasing delay to 18051 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 180 ms. Decreasing delay to 2180 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1347 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 7921 ms. Increasing delay to 23763 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2511 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2724 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3478 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1623 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2381 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1035 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1219 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 6703 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1014 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1218 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3537 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1003 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 398 ms. Decreasing delay to 2398 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1921 ms. Increasing delay to 5763 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 6371 ms to process. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 6372 ms to process. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 8130 ms. Increasing delay to 24390 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 8673 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1330 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 659 ms. Decreasing delay to 2659 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 1560 ms. Increasing delay to 4680 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 5812 ms. Increasing delay to 17436 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 23 ms. Decreasing delay to 2023 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  15989 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/21/20, 5:17:54 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/21/20, 5:47:39 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1449545 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1121 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/21/20, 6:35:56 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  304984 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/21/20, 7:05:59 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  2558450 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/21/20, 8:09:00 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  108389 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  688283 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1276 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/21/20, 8:47:21 PM ART
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 689771 ms. Increasing delay to 2069313 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/21/20, 9:17:20 PM ART
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 79 ms. Decreasing delay to 2079 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/21/20, 9:47:20 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/21/20, 10:17:20 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/21/20, 10:47:21 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/21/20, 11:17:21 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/21/20, 11:47:22 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/22/20, 12:17:22 AM ART
// WARNING: HTimer (StateMonitor Timer) is taking 29046281ms to process. Increasing delay to 6000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  29046281 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1524 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/22/20, 8:42:50 AM ART
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 29049004 ms. Increasing delay to 87147012 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/22/20, 9:12:53 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/22/20, 9:42:53 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/22/20, 10:12:54 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/22/20, 10:42:54 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/22/20, 11:12:55 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/22/20, 11:42:55 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/22/20, 12:12:55 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/22/20, 12:42:56 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/22/20, 1:12:56 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1071 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3149 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1086 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2633 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1215 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1141 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3331 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5496 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1606 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1616 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1156 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1359 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1168 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1178 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1188 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1145 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1149 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1376 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1118 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2702 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1026 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1429 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1439 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1308 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1292 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1543 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1588 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1108 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5898 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1179 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1901 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1890 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1029 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2140 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1238 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3862 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 7846 ms. Increasing delay to 10000 ms.
// WARNING: HTimer (HSTRUtils Dump STR Log Timer) is taking 2383ms to process. Increasing delay to 7000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2413 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1059 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1188 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1094 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5805 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2731 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 6232 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5958 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  11065 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3852 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 6081 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1132 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 5178 ms to process. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3849 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2191 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1323 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1004 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1415 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1157 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5134 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2099 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5454 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4097 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1262 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2129 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1083 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1085 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1098 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4164 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6165 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/22/20, 1:43:29 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  20260 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1774 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3127 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1374 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1548 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5836 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1133 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 5071 ms to process. Increasing delay to 8000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5559 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1516 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 10413 ms to process. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1120 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5828 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2107 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2239 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 5826 ms to process. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 8222 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1044 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5532 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  10712 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4688 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  10281 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1068 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1228 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1620 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1087 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1314 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1992 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1024 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1793 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1043 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 6648 ms to process. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5549 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5145 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1899 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1978 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 6129 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1160 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1036 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2836 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1038 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1720 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 4999 ms to process. Increasing delay to 9000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1393 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1183 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2946 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5348 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1049 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1389 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1421 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1011 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1035 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6980 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1168 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1113 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1013 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1067 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1080 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1203 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 7246 ms to process. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1012 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1162 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1243 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1559 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1632 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7387 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5991 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1056 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1199 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1059 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1660 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 7441 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2456 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3553 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 6020 ms to process. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1526 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1495 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1136 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1085 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2982 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1460 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  19484 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/22/20, 2:13:25 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1119 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1073 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1205 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1026 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1444 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5619 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3490 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1767 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1056 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1145 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1006 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1443 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1685 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3069 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1472 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2935 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2035 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1229 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1079 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 5121 ms to process. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1054 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1823 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1337 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1602 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 4157 ms to process. Increasing delay to 9000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1006 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4727 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2029 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  19588 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/22/20, 2:43:25 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/22/20, 3:13:06 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/22/20, 3:43:06 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/22/20, 4:13:07 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/22/20, 4:43:07 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/22/20, 5:13:08 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/22/20, 5:43:08 PM ART
// Elapsed time: 257994 seconds
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 3, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 3, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("instruction_fetch.v", 155, 248); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 155, 248, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 176, 229); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 176, 229, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 12 seconds
selectButton(RDIResource.HCodeEditor_CLOSE, (String) null); // k (aH, cr)
selectCodeEditor("instruction_fetch.v", 242, 221); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 245, 205); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 259, 212); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 251, 192); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 251, 192, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 244, 214); // ch (w, cr)
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/22/20, 6:13:08 PM ART
// Elapsed time: 2659 seconds
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v)]", 2, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v)]", 2, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v)]", 2, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("top_mips.v", 12, 147); // ch (w, cr)
selectCodeEditor("top_mips.v", 18, 166); // ch (w, cr)
selectCodeEditor("top_mips.v", 17, 89); // ch (w, cr)
selectCodeEditor("top_mips.v", 25, 192); // ch (w, cr)
selectCodeEditor("top_mips.v", 105, 219); // ch (w, cr)
selectCodeEditor("top_mips.v", 105, 219); // ch (w, cr)
selectCodeEditor("top_mips.v", 12, 246); // ch (w, cr)
selectCodeEditor("top_mips.v", 93, 163); // ch (w, cr)
selectCodeEditor("top_mips.v", 354, 216); // ch (w, cr)
selectCodeEditor("top_mips.v", 354, 216); // ch (w, cr)
selectCodeEditor("top_mips.v", 20, 222); // ch (w, cr)
// Elapsed time: 22 seconds
selectCodeEditor("top_mips.v", 137, 107); // ch (w, cr)
selectCodeEditor("top_mips.v", 222, 331); // ch (w, cr)
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/22/20, 6:43:09 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  13062 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/22/20, 7:13:22 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1461 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1092 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1208 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1005 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1056 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1451 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1680 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1208 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1627 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1464 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1115 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1106 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1147 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1087 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1022 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1170 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1225 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1302 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1040 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2358 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1018 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1697 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1271 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1889 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1994 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1200 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 9939 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1202 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1091 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1071 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1188 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1099 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1279 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1347 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1149 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1033 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1044 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2067 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1057 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6267 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1112 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1223 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4577 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 6702 ms to process. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1045 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1221 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1466 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1591 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1343 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1878 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5612 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1725 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1093 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1071 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7313 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1584 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1866 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1569 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2013 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1155 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1040 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1193 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1660 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1866 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1248 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1133 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1111 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2623 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1015 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1223 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 4170 ms to process. Increasing delay to 9000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1276 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 6185 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1134 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1114 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4652 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3191 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1166 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1007 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  12802 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/22/20, 7:43:25 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  2037 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1217 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1291 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1017 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1208 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1135 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1258 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1473 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1279 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1653 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1122 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1830 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5936 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5199 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5218 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1626 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1224 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1072 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1245 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1213 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1725 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1173 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1100 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1222 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1815 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2803 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4720 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1039 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1446 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1041 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1684 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1049 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1594 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1344 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1339 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1563 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1389 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1172 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1229 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1289 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1128 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4353 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1318 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1065 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1687 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6866 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1046 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1080 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1019 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1582 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  14573 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1276 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1809 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1852 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1022 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1015 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1144 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 11484 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1117 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1292 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5549 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1765 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4402 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1392 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 7922 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1251 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  12376 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  8169 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5018 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 5590 ms to process. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 5113 ms to process. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1030 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1184 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1932 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1910 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5890 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5145 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1089 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1233 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1004 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1104 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5032 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3820 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1325 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1071 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1023 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1452 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1115 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1066 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 10638 ms to process. Increasing delay to 8000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  8609 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5323 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1269 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1218 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1366 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1166 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3332 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5468 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 11849 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1160 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1108 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1028 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1279 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1091 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1006 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1426 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1018 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1981 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1943 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2050 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1862 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1023 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1043 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1073 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1383 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1037 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1547 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1941 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1033 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1304 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1083 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1161 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1688 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2621 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1326 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1401 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1123 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1057 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1174 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4407 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4714 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3147 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6042 ms.
// WARNING: HTimer (a Update Status Timer) is taking 537ms to process. Increasing delay to 3000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 3307 ms to process. Increasing delay to 7000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1015 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3340 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2172 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5725 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3255 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1224 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 10915 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1281 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6028 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 6814 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1639 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1431 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1536 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  16890 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1076 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3436 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5941 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 8614 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4107 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 5618 ms to process. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 5618 ms to process. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 8584 ms to process. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5003 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3071 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4450 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1025 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4482 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1240 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1504 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4186 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  12961 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/22/20, 8:14:18 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  28497 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4645 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5081 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5451 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  10543 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 10602 ms to process. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3109 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1063 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1114 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1156 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1770 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1135 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4160 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1007 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1045 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1319 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  8783 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  9209 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6344 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1172 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5410 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  8141 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5682 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3313 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6058 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 6246 ms to process. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 5205 ms to process. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1341 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3360 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7319 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1146 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4234 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2573 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1917 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 6964 ms to process. Increasing delay to 9000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  8388 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7904 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4665 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6887 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3478 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  8651 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3511 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6876 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3293 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7282 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1343 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1257 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3742 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1192 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4515 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1039 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1358 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1065 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4757 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 8428 ms to process. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1675 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2830 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1223 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1149 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1090 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5503 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1309 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1061 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1578 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1545 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2621 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1181 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2545 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1243 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1043 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4748 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1028 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1169 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1199 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5091 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 7156 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4471 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2120 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 9263 ms to process. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 9263 ms to process. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5461 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1686 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1024 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6777 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1157 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1237 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 8633 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1339 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 9453 ms to process. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2944 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1079 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4833 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4010 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1528 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 5982 ms to process. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1112 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1065 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5518 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5397 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 6566 ms to process. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4631 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7204 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5418 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1904 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6563 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  8762 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5691 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7499 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3446 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4044 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1034 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1183 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1363 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6156 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1192 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2638 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1121 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5063 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2403 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 5547 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1138 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  8691 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6728 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1523 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1173 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 13690 ms to process. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 11296 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6418 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1026 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6434 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5208 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1040 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3042 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4053 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1334 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1186 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6291 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5262 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5376 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3377 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3494 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 11282 ms to process. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4119 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6925 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2774 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1185 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7703 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6324 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1325 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1034 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2501 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1299 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2150 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1818 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5146 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1052 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3876 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1226 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1222 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1121 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1187 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1062 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1331 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4979 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1454 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1401 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1313 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4003 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7761 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1052 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4486 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1117 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5912 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4245 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1143 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2398 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1016 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7599 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4081 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4702 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1330 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6969 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  8804 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1175 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  8517 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2245 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  29633 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7065 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  15145 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7402 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5765 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3849 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  14815 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/22/20, 8:43:32 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/22/20, 9:13:18 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/22/20, 9:43:18 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/22/20, 10:13:19 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/22/20, 10:43:19 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  10801625 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1811 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/23/20, 1:55:15 AM ART
// WARNING: HEventQueue.dispatchEvent() is taking  28284871 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/23/20, 9:46:44 AM ART
// WARNING: HEventQueue.dispatchEvent() is taking  19312 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/23/20, 10:17:02 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/23/20, 10:46:48 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/23/20, 11:16:48 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/23/20, 11:46:49 AM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1281857 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1043 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/23/20, 12:33:26 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/23/20, 1:03:27 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/23/20, 1:33:27 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1017 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1695 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1079 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  8977 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  8356 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1192 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4556 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1782 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1092 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1028 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1081 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1155 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5275 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1954 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5017 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 7398 ms to process. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3466 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2919 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 9400 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1078 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1101 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1613 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1163 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1151 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1367 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2038 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1033 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1068 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1006 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1293 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1844 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 10876 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1995 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1109 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1244 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1205 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1026 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1502 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1165 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1527 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1010 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1091 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1109 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1323 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2880 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 6417 ms. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 6876 ms to process. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 6875 ms to process. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1409 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 7059 ms to process. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 7059 ms to process. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 7058 ms to process. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 7059 ms to process. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 12145 ms to process. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 12146 ms to process. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 12145 ms to process. Increasing delay to 10000 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 12146 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  4567 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1139 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1043 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 7003 ms to process. Increasing delay to 8000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 7004 ms to process. Increasing delay to 8000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1159 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6982 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1056 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  9024 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  8473 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  22323 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1068 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/23/20, 2:04:24 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  2197 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3896 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5948 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2413 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1017 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2101 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 11404 ms. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1679 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1371 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1037 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1132 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1041 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1426 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3318 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1213 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 6239 ms to process. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1419 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1031 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1160 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1458 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 5812 ms to process. Increasing delay to 10000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1340 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1277 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  5636 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1423 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  14624 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/23/20, 2:33:44 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/23/20, 3:03:30 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/23/20, 3:33:31 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/23/20, 4:03:31 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/23/20, 4:33:31 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/23/20, 5:03:32 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/23/20, 5:33:32 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/23/20, 6:03:33 PM ART
// Elapsed time: 85111 seconds
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
// Elapsed time: 11 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v)]", 2, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 3, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("top_mips.v", 2, 178); // ch (w, cr)
typeControlKey((HResource) null, "top_mips.v", 'c'); // ch (w, cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("top_mips.v", 53, 40); // ch (w, cr)
// Elapsed time: 11 seconds
selectCodeEditor("top_mips.v", 84, 56); // ch (w, cr)
// Elapsed time: 355 seconds
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
// Elapsed time: 15 seconds
selectCodeEditor("top_mips.v", 160, 63); // ch (w, cr)
selectCodeEditor("top_mips.v", 160, 63, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 971 seconds
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v)]", 4); // B (F, cr)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 3); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v), u_mux_PC : mux_PC (mux_PC.v)]", 4, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v), u_mux_PC : mux_PC (mux_PC.v)]", 4, false, false, false, false, false, true); // B (F, cr) - Double Click
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("mux_PC.v", 155, 162); // ch (w, cr)
typeControlKey((HResource) null, "mux_PC.v", 'c'); // ch (w, cr)
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 76 MB. Current time: 6/23/20, 6:33:33 PM ART
// Elapsed time: 35 seconds
selectCodeEditor("mux_PC.v", 82, 297); // ch (w, cr)
typeControlKey((HResource) null, "mux_PC.v", 'c'); // ch (w, cr)
selectCodeEditor("mux_PC.v", 115, 329); // ch (w, cr)
typeControlKey((HResource) null, "mux_PC.v", 'c'); // ch (w, cr)
// Elapsed time: 183 seconds
selectCodeEditor("mux_PC.v", 176, 232); // ch (w, cr)
selectCodeEditor("mux_PC.v", 130, 144); // ch (w, cr)
selectCodeEditor("mux_PC.v", 129, 144, false, false, false, false, true); // ch (w, cr) - Double Click
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 3, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 3, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("instruction_fetch.v", 153, 315); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 153, 315, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 94, 385); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 118, 161); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 203, 165); // ch (w, cr)
// Elapsed time: 10 seconds
selectCodeEditor("instruction_fetch.v", 88, 384); // ch (w, cr)
// Elapsed time: 85 seconds
selectCodeEditor("instruction_fetch.v", 177, 382); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 177, 382, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 1262 seconds
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v)]", 2, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v)]", 2, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v)]", 2, true); // B (F, cr) - Node
selectCodeEditor("top_mips.v", 401, 52); // ch (w, cr)
selectCodeEditor("top_mips.v", 401, 52, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 371, 64); // ch (w, cr)
selectCodeEditor("top_mips.v", 345, 60); // ch (w, cr)
selectCodeEditor("top_mips.v", 338, 74); // ch (w, cr)
selectCodeEditor("top_mips.v", 437, 62); // ch (w, cr)
selectCodeEditor("top_mips.v", 124, 59); // ch (w, cr)
selectCodeEditor("top_mips.v", 124, 59, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 436, 62); // ch (w, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("top_mips.v", 323, 314); // ch (w, cr)
selectCodeEditor("top_mips.v", 83, 313); // ch (w, cr)
selectCodeEditor("top_mips.v", 304, 354); // ch (w, cr)
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/23/20, 7:03:33 PM ART
// Elapsed time: 287 seconds
selectCodeEditor("top_mips.v", 212, 314); // ch (w, cr)
selectCodeEditor("top_mips.v", 212, 314, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 195, 318); // ch (w, cr)
selectCodeEditor("top_mips.v", 195, 318, false, false, false, false, true); // ch (w, cr) - Double Click
typeControlKey((HResource) null, "top_mips.v", 'c'); // ch (w, cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v)]", 2); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v)]", 4, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v)]", 4, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
selectCodeEditor("decode.v", 111, 11); // ch (w, cr)
setText(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "in_addr_mem_inst"); // l (aP, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v)]", 5, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v)]", 5, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
setText(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "in_addr_mem_inst"); // l (aP, cr)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v)]", 5); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v), u_alu_control : alu_control (alu_control.v)]", 6, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v), u_alu_control : alu_control (alu_control.v)]", 6, false, false, false, false, false, true); // B (F, cr) - Double Click
selectCodeEditor("alu_control.v", 109, 57); // ch (w, cr)
setText(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "in_addr_mem_inst"); // l (aP, cr)
selectCodeEditor("alu_control.v", 157, 42); // ch (w, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_registers : registers (registers.v)]", 7, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_registers : registers (registers.v)]", 7, false, false, false, false, false, true); // B (F, cr) - Double Click
selectCodeEditor("registers.v", 69, 34); // ch (w, cr)
setText(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "in_addr_mem_inst"); // l (aP, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_hazard : hazard_detection_unit (hazard_detection_unit.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_hazard : hazard_detection_unit (hazard_detection_unit.v)]", 8, false, false, false, false, false, true); // B (F, cr) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_hazard : hazard_detection_unit (hazard_detection_unit.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_hazard : hazard_detection_unit (hazard_detection_unit.v)]", 8, false); // B (F, cr)
selectCodeEditor("hazard_detection_unit.v", 43, 39); // ch (w, cr)
setText(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "in_addr_mem_inst"); // l (aP, cr)
selectCodeEditor("hazard_detection_unit.v", 104, 88); // ch (w, cr)
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v)]", 4); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 3, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 3, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
selectCodeEditor("instruction_fetch.v", 116, 53); // ch (w, cr)
// Elapsed time: 11 seconds
setText(RDIResource.HCodeEditor_SEARCH_TEXT_COMBO_BOX, "in_addr_mem_inst"); // l (aP, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v)]", 2, true); // B (F, cr) - Node
selectMenu(PAResourceItoN.MainMenuMgr_EDIT, "Edit"); // aa (q, cr)
selectMenuItem(PAResourceCommand.PACommandNames_FIND_IN_FILES, "Find in Files..."); // ai (cr)
dismissMenu(PAResourceItoN.MainMenuMgr_EDIT, "Edit"); // aa (q, cr)
// Run Command: PAResourceCommand.PACommandNames_FIND_IN_FILES
// Find in Files: addNotify
selectComboBox("pa.FindAndReplaceAllDialog_FIND_COMBO_BOX", "u_top_mips : top_mips (top_mips.v)", -1); // JComboBox (t, s)
selectButton(PAResourceEtoH.FindAndReplaceAllDialog_FIND, "Find"); // x (s)
// bB (cr):  Find in Files : addNotify
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/23/20, 7:06:55 PM ART
// 'f' command handler elapsed time: 9 seconds
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/23/20, 7:06:56 PM ART
dismissDialog("Find in Files"); // bB (cr)
selectTree(PAResourceEtoH.FindInFilesView_ROOT, "[ROOT]", 1, true); // Y (O, cr) - Node
selectTree(PAResourceEtoH.FindInFilesView_ROOT, "[ROOT]", 1, true, false, false, false, false, true); // Y (O, cr) - Double Click - Node
selectTree(PAResourceEtoH.FindInFilesView_ROOT, "[ROOT, [4256, 4272]]", 3, false); // Y (O, cr)
selectTree(PAResourceEtoH.FindInFilesView_ROOT, "[ROOT, [904, 920]]", 2, false); // Y (O, cr)
selectTree(PAResourceEtoH.FindInFilesView_ROOT, "[ROOT, [4256, 4272]]", 3, false); // Y (O, cr)
selectCodeEditor("instruction_fetch.v", 83, 92); // ch (w, cr)
selectTree(PAResourceEtoH.FindInFilesView_ROOT, "[ROOT]", 4, true); // Y (O, cr) - Node
selectTree(PAResourceEtoH.FindInFilesView_ROOT, "[ROOT]", 4, true, false, false, false, false, true); // Y (O, cr) - Double Click - Node
selectTree(PAResourceEtoH.FindInFilesView_ROOT, "[ROOT, [4522, 4538]]", 5, false); // Y (O, cr)
// Elapsed time: 1112 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v)]", 2, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v)]", 2, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("top_mips.v", 294, 333); // ch (w, cr)
selectCodeEditor("top_mips.v", 294, 333, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 137, 333); // ch (w, cr)
selectCodeEditor("top_mips.v", 137, 333, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 11 seconds
selectCodeEditor("top_mips.v", 149, 316); // ch (w, cr)
selectCodeEditor("top_mips.v", 149, 316, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 285, 321); // ch (w, cr)
selectCodeEditor("top_mips.v", 285, 321, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 309, 320); // ch (w, cr)
selectCodeEditor("top_mips.v", 309, 320, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 132, 336); // ch (w, cr)
selectCodeEditor("top_mips.v", 132, 336, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 94, 310); // ch (w, cr)
selectCodeEditor("top_mips.v", 129, 318); // ch (w, cr)
selectCodeEditor("top_mips.v", 129, 318, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 135, 332); // ch (w, cr)
selectCodeEditor("top_mips.v", 135, 332, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 145, 317); // ch (w, cr)
selectCodeEditor("top_mips.v", 145, 317, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 322, 318); // ch (w, cr)
selectCodeEditor("top_mips.v", 150, 333); // ch (w, cr)
selectCodeEditor("top_mips.v", 150, 333, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_mips.v", 205, 333); // ch (w, cr)
// Elapsed time: 363 seconds
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v)]", 1, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v)]", 1, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("top_modular.v", 220, 299); // ch (w, cr)
selectCodeEditor("top_modular.v", 34, 296); // ch (w, cr)
selectCodeEditor("top_modular.v", 310, 298); // ch (w, cr)
// Elapsed time: 11 seconds
selectCodeEditor("top_modular.v", 172, 263); // ch (w, cr)
selectCodeEditor("top_modular.v", 172, 263, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_modular.v", 299, 201); // ch (w, cr)
// Elapsed time: 177 seconds
selectCodeEditor("top_modular.v", 78, 71); // ch (w, cr)
selectCodeEditor("top_modular.v", 78, 71, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("top_modular.v", 216, 199); // ch (w, cr)
// Elapsed time: 14 seconds
selectCodeEditor("top_modular.v", 259, 197); // ch (w, cr)
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 79 MB. Current time: 6/23/20, 7:36:59 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/23/20, 8:06:59 PM ART
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 112 ms. Decreasing delay to 2112 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/23/20, 8:36:59 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/23/20, 9:07:00 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/23/20, 9:37:00 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/23/20, 10:07:01 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/23/20, 10:37:01 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/23/20, 11:07:01 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/23/20, 11:37:02 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/24/20, 12:07:02 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/24/20, 12:37:03 AM ART
// WARNING: HEventQueue.dispatchEvent() is taking  30914070 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/24/20, 9:26:30 AM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1232 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/24/20, 9:56:29 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/24/20, 10:26:29 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/24/20, 10:56:29 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/24/20, 11:26:29 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/24/20, 11:56:30 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/24/20, 12:26:30 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/24/20, 12:56:31 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/24/20, 1:26:31 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/24/20, 1:56:31 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/24/20, 2:26:32 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/24/20, 2:56:32 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/24/20, 3:26:32 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/24/20, 3:56:33 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/24/20, 4:26:33 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/24/20, 4:56:34 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/24/20, 5:26:34 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/24/20, 5:56:34 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/24/20, 6:26:35 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/24/20, 6:56:35 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/24/20, 7:26:35 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/24/20, 7:56:36 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/24/20, 8:26:36 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/24/20, 8:56:37 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/24/20, 9:26:37 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  526631 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2938 ms. Increasing delay to 8814 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/24/20, 9:56:39 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/24/20, 10:26:39 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/24/20, 10:56:40 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/24/20, 11:26:40 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/24/20, 11:56:40 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/25/20, 12:26:41 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/25/20, 12:56:41 AM ART
// WARNING: HEventQueue.dispatchEvent() is taking  31204710 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3632 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/25/20, 9:47:21 AM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1846 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 74 MB. Current time: 6/25/20, 10:17:17 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 73 MB. Current time: 6/25/20, 10:47:18 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 74 MB. Current time: 6/25/20, 11:17:18 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 74 MB. Current time: 6/25/20, 11:47:18 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 73 MB. Current time: 6/25/20, 12:17:19 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 73 MB. Current time: 6/25/20, 12:47:19 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 73 MB. Current time: 6/25/20, 1:17:19 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 73 MB. Current time: 6/25/20, 1:47:20 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 73 MB. Current time: 6/25/20, 2:17:20 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 74 MB. Current time: 6/25/20, 2:47:21 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 74 MB. Current time: 6/25/20, 3:17:21 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 74 MB. Current time: 6/25/20, 3:47:21 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 73 MB. Current time: 6/25/20, 4:17:22 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 73 MB. Current time: 6/25/20, 4:47:22 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 73 MB. Current time: 6/25/20, 5:17:23 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 74 MB. Current time: 6/25/20, 5:47:23 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 73 MB. Current time: 6/25/20, 6:17:23 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1744 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 73 MB. Current time: 6/25/20, 6:47:25 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 74 MB. Current time: 6/25/20, 7:17:24 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 74 MB. Current time: 6/25/20, 7:47:24 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1019 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1247 ms.
// Elapsed time: 175097 seconds
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Constraints]", 2); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Constraints, constrs_1, Arty_Master.xdc]", 4, false); // B (F, cr)
// Elapsed time: 94 seconds
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v)]", 1); // B (F, cr)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v)]", 2); // B (F, cr)
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 3); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v)]", 4, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v)]", 4, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v)]", 5, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_decode : decode (decode.v), u_control : control (control.v)]", 5, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("control.v", 173, 228); // ch (w, cr)
selectCodeEditor("control.v", 173, 228, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("control.v", 503, 266); // ch (w, cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-6090] variable 'execute_bus' is written by both blocking and non-blocking assignments, entire logic could be removed [C:/Arquitectura tp final 2017/TP final 2020/Tp Final 2020/Tp Final 2020.srcs/sources_1/imports/tp final 2017/control.v:58]. ]", 1, true); // ah (O, cr) - Node
messagesViewCrossProbe(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "src;-;C:\Arquitectura tp final 2017\TP final 2020\Tp Final 2020\Tp Final 2020.srcs\sources_1\imports\tp final 2017\control.v;-;;-;16;-;line;-;58;-;;-;16;-;"); // ah (O, cr)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Synth 8-6090] variable 'execute_bus' is written by both blocking and non-blocking assignments, entire logic could be removed [C:/Arquitectura tp final 2017/TP final 2020/Tp Final 2020/Tp Final 2020.srcs/sources_1/imports/tp final 2017/control.v:58]. ]", 1, true); // ah (O, cr) - Node
messagesViewCrossProbe(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "src;-;C:\Arquitectura tp final 2017\TP final 2020\Tp Final 2020\Tp Final 2020.srcs\sources_1\imports\tp final 2017\control.v;-;;-;16;-;line;-;58;-;;-;16;-;"); // ah (O, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("control.v", 521, 182); // ch (w, cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
// WARNING: HEventQueue.dispatchEvent() is taking  4640 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/25/20, 8:17:29 PM ART
// Elapsed time: 376 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 3, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 3, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("instruction_fetch.v", 148, 280); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 148, 280, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 237, 263); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 237, 263, false, false, false, false, true); // ch (w, cr) - Double Click
// WARNING: HEventQueue.dispatchEvent() is taking  9310 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/25/20, 8:47:34 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  9421 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/25/20, 9:17:39 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/25/20, 9:47:35 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/25/20, 10:17:35 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/25/20, 10:47:36 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/25/20, 11:17:36 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/25/20, 11:47:37 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/26/20, 12:17:37 AM ART
// WARNING: HEventQueue.dispatchEvent() is taking  30031485 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/26/20, 8:46:51 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/26/20, 9:16:50 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/26/20, 9:46:50 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/26/20, 10:16:51 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/26/20, 10:46:51 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/26/20, 11:16:51 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/26/20, 11:46:52 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/26/20, 12:16:52 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/26/20, 12:46:53 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/26/20, 1:16:53 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/26/20, 1:46:53 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/26/20, 2:16:54 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/26/20, 2:46:54 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/26/20, 3:16:54 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/26/20, 3:46:55 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/26/20, 4:16:55 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/26/20, 4:46:56 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/26/20, 5:16:56 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/26/20, 5:46:56 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 77 MB. Current time: 6/26/20, 6:16:57 PM ART
// Elapsed time: 79711 seconds
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v)]", 1); // B (F, cr)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources]", 5); // B (F, cr)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1]", 6); // B (F, cr)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_doble_uart (tb_doble_uart.v)]", 7); // B (F, cr)
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_doble_uart (tb_doble_uart.v)]", 7); // B (F, cr)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_top (tb_top.v)]", 8); // B (F, cr)
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_top (tb_top.v)]", 8); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_top (tb_top.v)]", 8, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_alu (tb_alu.v)]", 9, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_decode (tb_decode.v)]", 10, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_forwarding_unit (tb_forwarding_unit.v)]", 11, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_hazard (tb_hazard.v)]", 12, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v)]", 13, true); // B (F, cr) - Node
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v)]", 13); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 14, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v)]", 13, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 14, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v)]", 13, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v)]", 13, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v)]", 13, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
selectCodeEditor("tb_instruction_fetch.v", 4, 44); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 47, 91); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 154, 208); // ch (w, cr)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v)]", 13); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 14, true); // B (F, cr) - Node
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 14); // B (F, cr)
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 14); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v)]", 13, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 14, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v)]", 13, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 14, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v)]", 13, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 14, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v)]", 13, true); // B (F, cr) - Node
selectCodeEditor("tb_instruction_fetch.v", 252, 184); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 286, 203); // ch (w, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v)]", 13, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 14, true); // B (F, cr) - Node
// Elapsed time: 21 seconds
selectCodeEditor("tb_instruction_fetch.v", 5, 111); // ch (w, cr)
typeControlKey((HResource) null, "tb_instruction_fetch.v", 'c'); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 171, 174); // ch (w, cr)
// Elapsed time: 156 seconds
selectCodeEditor("tb_instruction_fetch.v", 1, 78); // ch (w, cr)
typeControlKey((HResource) null, "tb_instruction_fetch.v", 'c'); // ch (w, cr)
// Elapsed time: 182 seconds
selectCodeEditor("tb_instruction_fetch.v", 153, 271); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 153, 271, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_instruction_fetch.v", 136, 319); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 136, 319, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_instruction_fetch.v", 62, 233); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 133, 298); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 173, 314); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 173, 314, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_instruction_fetch.v", 335, 315); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 343, 316); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 326, 317); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 108, 214); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 108, 214, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_instruction_fetch.v", 131, 229); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 131, 229, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_instruction_fetch.v", 143, 245); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 143, 245, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_instruction_fetch.v", 131, 234); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 131, 234, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_instruction_fetch.v", 254, 229); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 75, 249); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 75, 249, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_instruction_fetch.v", 101, 264); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 101, 264, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 13 seconds
selectCodeEditor("tb_instruction_fetch.v", 142, 194); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 142, 194, false, false, false, false, true); // ch (w, cr) - Double Click
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v)]", 1); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 3, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 3, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
selectCodeEditor("instruction_fetch.v", 225, 164); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 225, 164, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 10 seconds
selectCodeEditor("instruction_fetch.v", 224, 215); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 224, 215, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 175, 241); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 175, 241, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 22 seconds
selectCodeEditor("instruction_fetch.v", 162, 245); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 162, 245, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 206, 234); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 206, 234, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 229, 218); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 229, 218, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 16 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 25, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 25, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 25, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 25, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
selectCodeEditor("instruction_fetch.v", 231, 267); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 231, 267, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 224, 281); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 224, 281, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 183, 303); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 183, 303, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 176, 317); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 176, 317); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 176, 317, false, false, false, false, true); // ch (w, cr) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v)]", 24, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v)]", 24, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
selectCodeEditor("tb_instruction_fetch.v", 104, 365); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 19, 54); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 24, 43); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 129, 397); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 127, 232); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 95, 247); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 102, 233); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 101, 250); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 97, 232); // ch (w, cr)
// Elapsed time: 205 seconds
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_doble_uart (tb_doble_uart.v)]", 18); // B (F, cr)
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_doble_uart (tb_doble_uart.v)]", 18); // B (F, cr)
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1]", 17); // B (F, cr)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1]", 17); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_uart_posta (tb_uart_posta.v)]", 27, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_doble_uart (tb_doble_uart.v)]", 18, true); // B (F, cr) - Node
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 78 MB. Current time: 6/26/20, 6:46:57 PM ART
// Elapsed time: 97 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_top (tb_top.v)]", 19, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v)]", 24, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v)]", 24, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v)]", 24, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
selectCodeEditor("tb_instruction_fetch.v", 88, 318); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 172, 225); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 172, 225, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_instruction_fetch.v", 172, 225); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 143, 320); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 143, 320, false, false, false, false, true); // ch (w, cr) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 25, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v), u_mux_PC : mux_PC (mux_PC.v)]", 26, false, false, false, false, false, true); // B (F, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 28, 321); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 187, 366); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 212, 318); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 212, 318, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 199, 336); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 199, 336, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 214, 313); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 214, 313, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 197, 333); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 197, 333, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 173, 352); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 173, 352, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 182, 371); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 182, 371, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 215, 315); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 215, 315); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 215, 315, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 210, 335); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 210, 335, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 216, 323); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 216, 323, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 217, 316); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 217, 316, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 201, 330); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 201, 330, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 216, 317); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 216, 317, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 13 seconds
selectCodeEditor("instruction_fetch.v", 198, 334); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 202, 334); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 202, 334); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 202, 334, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 228, 312); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 229, 312, false, false, false, false, true); // ch (w, cr) - Double Click
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v)]", 24); // B (F, cr)
// Elapsed time: 364 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_decode (tb_decode.v)]", 21, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_decode (tb_decode.v)]", 21, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
// Elapsed time: 10 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_decode (tb_decode.v), u_decode : decode (decode.v)]", 22, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_decode (tb_decode.v), u_decode : decode (decode.v)]", 22, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_decode (tb_decode.v)]", 21, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_decode (tb_decode.v)]", 21, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
selectCodeEditor("tb_decode.v", 90, 251); // ch (w, cr)
selectCodeEditor("tb_decode.v", 197, 352); // ch (w, cr)
selectCodeEditor("tb_decode.v", 76, 177); // ch (w, cr)
selectCodeEditor("tb_decode.v", 228, 218); // ch (w, cr)
selectCodeEditor("tb_decode.v", 228, 279); // ch (w, cr)
selectCodeEditor("tb_decode.v", 54, 284); // ch (w, cr)
// Elapsed time: 25 seconds
selectCodeEditor("tb_decode.v", 141, 193); // ch (w, cr)
selectCodeEditor("tb_decode.v", 141, 193, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 11 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v)]", 24, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 25, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
// Elapsed time: 11 seconds
selectCodeEditor("tb_instruction_fetch.v", 108, 80); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 108, 80, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_instruction_fetch.v", 170, 111); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 170, 111, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_instruction_fetch.v", 167, 131); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 167, 131, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_instruction_fetch.v", 179, 143); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 179, 143); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 198, 242); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 198, 242, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 37 seconds
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
// Elapsed time: 211 seconds
selectCodeEditor("tb_instruction_fetch.v", 32, 96); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 32, 96, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_instruction_fetch.v", 160, 89); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 160, 89, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_instruction_fetch.v", 165, 111); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 165, 111, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_instruction_fetch.v", 39, 90); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 39, 90, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_instruction_fetch.v", 40, 150); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 227, 143); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 175, 163); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 175, 163, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_instruction_fetch.v", 184, 179); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 184, 179, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_instruction_fetch.v", 159, 146); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 159, 146, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_instruction_fetch.v", 38, 146); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 149, 146); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 149, 146); // ch (w, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 25, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 25, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 25, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
selectCodeEditor("instruction_fetch.v", 170, 281); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 155, 170); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 27, 319); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 218, 269); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 218, 269, false, false, false, false, true); // ch (w, cr) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v)]", 24, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v)]", 24, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
selectCodeEditor("tb_instruction_fetch.v", 160, 149); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 160, 149, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_instruction_fetch.v", 228, 350); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 228, 350, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_instruction_fetch.v", 190, 166); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 190, 166, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_instruction_fetch.v", 204, 354); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 204, 354, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_instruction_fetch.v", 26, 168); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 219, 345); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 219, 345, false, false, false, false, true); // ch (w, cr) - Double Click
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v)]", 24); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 25, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v), u_mux_PC : mux_PC (mux_PC.v)]", 26, false, false, false, false, false, true); // B (F, cr) - Double Click
// Elapsed time: 10 seconds
selectCodeEditor("instruction_fetch.v", 214, 58); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 214, 58); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 214, 58, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 27, 212); // ch (w, cr)
// Elapsed time: 811 seconds
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v)]", 24); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_mem_instrucciones (tb_mem_instrucciones.v)]", 25, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v)]", 24, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_mem_instrucciones (tb_mem_instrucciones.v)]", 25, true); // B (F, cr) - Node
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_mem_instrucciones (tb_mem_instrucciones.v)]", 25); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_mem_instrucciones (tb_mem_instrucciones.v), u_ram_instrucciones : ram_instrucciones (ram_instrucciones.v)]", 26, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_mem_instrucciones (tb_mem_instrucciones.v)]", 25, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_mem_instrucciones (tb_mem_instrucciones.v)]", 25, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
// Elapsed time: 11 seconds
selectCodeEditor("tb_mem_instrucciones.v", 84, 212); // ch (w, cr)
selectCodeEditor("tb_mem_instrucciones.v", 133, 272); // ch (w, cr)
selectCodeEditor("tb_mem_instrucciones.v", 86, 111); // ch (w, cr)
selectCodeEditor("tb_mem_instrucciones.v", 86, 111, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_mem_instrucciones.v", 73, 178); // ch (w, cr)
selectCodeEditor("tb_mem_instrucciones.v", 73, 178, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_mem_instrucciones.v", 70, 248); // ch (w, cr)
selectCodeEditor("tb_mem_instrucciones.v", 70, 248, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_mem_instrucciones.v", 70, 268); // ch (w, cr)
selectCodeEditor("tb_mem_instrucciones.v", 70, 268, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_mem_instrucciones.v", 70, 280); // ch (w, cr)
selectCodeEditor("tb_mem_instrucciones.v", 70, 280, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 10 seconds
selectCodeEditor("tb_mem_instrucciones.v", 101, 182); // ch (w, cr)
selectCodeEditor("tb_mem_instrucciones.v", 101, 182, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_mem_instrucciones.v", 164, 232); // ch (w, cr)
selectCodeEditor("tb_mem_instrucciones.v", 100, 232); // ch (w, cr)
selectCodeEditor("tb_mem_instrucciones.v", 100, 232, false, false, false, false, true); // ch (w, cr) - Double Click
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_mem_instrucciones (tb_mem_instrucciones.v)]", 25); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_mem_instrucciones (tb_mem_instrucciones.v), u_ram_instrucciones : ram_instrucciones (ram_instrucciones.v)]", 26, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_mem_instrucciones (tb_mem_instrucciones.v), u_ram_instrucciones : ram_instrucciones (ram_instrucciones.v)]", 26, false, false, false, false, false, true); // B (F, cr) - Double Click
selectCodeEditor("ram_instrucciones.v", 104, 263); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 104, 263, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ram_instrucciones.v", 185, 130); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 185, 130, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ram_instrucciones.v", 408, 127); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 182, 130); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 182, 130); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 104, 263); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 104, 263, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ram_instrucciones.v", 187, 248); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 187, 248, false, false, false, false, true); // ch (w, cr) - Double Click
closeView(PAResourceOtoP.PAViews_CODE, "Code"); // B
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_mem_instrucciones (tb_mem_instrucciones.v)]", 25, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_mem_instrucciones (tb_mem_instrucciones.v)]", 25, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
selectCodeEditor("tb_mem_instrucciones.v", 113, 187); // ch (w, cr)
selectCodeEditor("tb_mem_instrucciones.v", 116, 166); // ch (w, cr)
selectCodeEditor("tb_mem_instrucciones.v", 116, 166, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_mem_instrucciones.v", 113, 182); // ch (w, cr)
selectCodeEditor("tb_mem_instrucciones.v", 113, 182, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_mem_instrucciones.v", 24, 135); // ch (w, cr)
// Elapsed time: 14 seconds
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("tb_mem_instrucciones.v", 72, 98); // ch (w, cr)
selectCodeEditor("tb_mem_instrucciones.v", 72, 98, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_mem_instrucciones.v", 66, 315); // ch (w, cr)
selectCodeEditor("tb_mem_instrucciones.v", 66, 315, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_mem_instrucciones.v", 74, 303); // ch (w, cr)
selectCodeEditor("tb_mem_instrucciones.v", 74, 303, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_mem_instrucciones.v", 71, 328); // ch (w, cr)
selectCodeEditor("tb_mem_instrucciones.v", 71, 328, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_mem_instrucciones.v", 136, 129); // ch (w, cr)
selectCodeEditor("tb_mem_instrucciones.v", 136, 129); // ch (w, cr)
selectCodeEditor("tb_mem_instrucciones.v", 118, 138); // ch (w, cr)
selectCodeEditor("tb_mem_instrucciones.v", 118, 138, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_mem_instrucciones.v", 62, 121); // ch (w, cr)
selectCodeEditor("tb_mem_instrucciones.v", 170, 235); // ch (w, cr)
selectCodeEditor("tb_mem_instrucciones.v", 173, 234); // ch (w, cr)
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 79 MB. Current time: 6/26/20, 7:16:58 PM ART
selectCodeEditor("tb_mem_instrucciones.v", 129, 176); // ch (w, cr)
selectCodeEditor("tb_mem_instrucciones.v", 44, 129); // ch (w, cr)
selectCodeEditor("tb_mem_instrucciones.v", 170, 225); // ch (w, cr)
selectCodeEditor("tb_mem_instrucciones.v", 183, 229); // ch (w, cr)
selectCodeEditor("tb_mem_instrucciones.v", 189, 236); // ch (w, cr)
selectCodeEditor("tb_mem_instrucciones.v", 167, 341); // ch (w, cr)
selectCodeEditor("tb_mem_instrucciones.v", 210, 324); // ch (w, cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
// Elapsed time: 85 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_mem_instrucciones (tb_mem_instrucciones.v)]", 25, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_mem_instrucciones (tb_mem_instrucciones.v)]", 25, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
selectCodeEditor("tb_mem_instrucciones.v", 2, 166); // ch (w, cr)
typeControlKey((HResource) null, "tb_mem_instrucciones.v", 'c'); // ch (w, cr)
// Elapsed time: 238 seconds
selectCodeEditor("tb_mem_instrucciones.v", 172, 163); // ch (w, cr)
selectCodeEditor("tb_mem_instrucciones.v", 73, 279); // ch (w, cr)
selectCodeEditor("tb_mem_instrucciones.v", 73, 279, false, false, false, false, true); // ch (w, cr) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_mem_instrucciones (tb_mem_instrucciones.v), u_ram_instrucciones : ram_instrucciones (ram_instrucciones.v)]", 26, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_mem_instrucciones (tb_mem_instrucciones.v), u_ram_instrucciones : ram_instrucciones (ram_instrucciones.v)]", 26, false, false, false, false, false, true); // B (F, cr) - Double Click
// Elapsed time: 10 seconds
selectCodeEditor("ram_instrucciones.v", 63, 180); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 63, 180, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ram_instrucciones.v", 177, 80); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 177, 80, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ram_instrucciones.v", 64, 79); // ch (w, cr)
// WARNING: HEventQueue.dispatchEvent() is taking  1673 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 79 MB. Current time: 6/26/20, 7:46:59 PM ART
// Elapsed time: 2613 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 3, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 3, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
selectCodeEditor("instruction_fetch.v", 110, 242); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 110, 242, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("instruction_fetch.v", 164, 282); // ch (w, cr)
selectCodeEditor("instruction_fetch.v", 164, 282, false, false, false, false, true); // ch (w, cr) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v)]", 2, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v)]", 2, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
selectCodeEditor("top_mips.v", 235, 296); // ch (w, cr)
selectCodeEditor("top_mips.v", 235, 296, false, false, false, false, true); // ch (w, cr) - Double Click
// Elapsed time: 12 seconds
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("top_mips.v", 224, 278); // ch (w, cr)
selectCodeEditor("top_mips.v", 224, 278, false, false, false, false, true); // ch (w, cr) - Double Click
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 79 MB. Current time: 6/26/20, 8:16:58 PM ART
// Elapsed time: 1836 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_mem_instrucciones (tb_mem_instrucciones.v), u_ram_instrucciones : ram_instrucciones (ram_instrucciones.v)]", 19, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_doble_uart (tb_doble_uart.v)]", 11, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_mem_instrucciones (tb_mem_instrucciones.v)]", 18, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v)]", 17, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v)]", 17, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v)]", 17, true, false, false, false, true, false); // B (F, cr) - Popup Trigger - Node
selectMenuItem(PAResourceCommand.PACommandNames_SET_AS_TOP, "Set as Top"); // ai (ao, Popup.HeavyWeightWindow)
// Run Command: PAResourceCommand.PACommandNames_SET_AS_TOP
// TclEventType: FILE_SET_CHANGE
// TclEventType: FILE_SET_OPTIONS_CHANGE
// Tcl Message: set_property top tb_instruction_fetch [get_filesets sim_1] 
// bB (cr):  Set as Top : addNotify
// TclEventType: FILE_SET_CHANGE
// TclEventType: FILE_SET_OPTIONS_CHANGE
// TclEventType: DG_GRAPH_STALE
// Tcl Message: set_property top_lib xil_defaultlib [get_filesets sim_1] 
// TclEventType: DG_GRAPH_STALE
dismissDialog("Set as Top"); // bB (cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_doble_uart (tb_doble_uart.v)]", 11, true); // B (F, cr) - Node
// TclEventType: FILE_SET_CHANGE
// Tcl Message: update_compile_order -fileset sim_1 
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v)]", 11, true); // B (F, cr) - Node
selectCodeEditor("tb_instruction_fetch.v", 200, 235); // ch (w, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v)]", 11, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Synthesis, Run Synthesis]", 14, false); // u (O, cr)
// Run Command: PAResourceCommand.PACommandNames_RUN_SYNTHESIS
// al (cr): Save Project: addNotify
selectButton(PAResourceQtoS.SaveProjectUtils_CANCEL, "Cancel"); // a (al)
// 'k' command handler elapsed time: 4 seconds
dismissDialog("Save Project"); // al (cr)
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Simulation, Run Simulation]", 10, false); // u (O, cr)
selectMenuItem(PAResourceCommand.PACommandNames_SIMULATION_RUN_BEHAVIORAL, "Run Behavioral Simulation"); // ai (ao, cr)
// Run Command: PAResourceCommand.PACommandNames_SIMULATION_RUN_BEHAVIORAL
// al (cr): Save Project: addNotify
selectButton(PAResourceQtoS.SaveProjectUtils_SAVE, "Save"); // a (al)
// bB (cr):  Save Constraints : addNotify
// TclEventType: DG_GRAPH_STALE
// e (cr):  Run Simulation : addNotify
dismissDialog("Save Project"); // al (cr)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: LAUNCH_SIM
// Tcl Message: launch_simulation 
// Tcl Message: Command: launch_simulation  
// TclEventType: FILE_SET_OPTIONS_CHANGE
// Tcl Message: INFO: [Vivado 12-5682] Launching behavioral simulation in 'C:/Arquitectura tp final 2017/TP final 2020/Tp Final 2020/Tp Final 2020.sim/sim_1/behav/xsim' INFO: [SIM-utils-51] Simulation object is 'sim_1' INFO: [SIM-utils-54] Inspecting design source files for 'tb_instruction_fetch' in fileset 'sim_1'... INFO: [USF-XSim-97] Finding global include files... INFO: [USF-XSim-98] Fetching design files from 'sim_1'... INFO: [USF-XSim-2] XSim::Compile design 
// Tcl Message: INFO: [USF-XSim-61] Executing 'COMPILE and ANALYZE' step in 'C:/Arquitectura tp final 2017/TP final 2020/Tp Final 2020/Tp Final 2020.sim/sim_1/behav/xsim' 
// TclEventType: LAUNCH_SIM_LOG
// Tcl Message: INFO: [USF-XSim-69] 'compile' step finished in '1' seconds INFO: [USF-XSim-3] XSim::Elaborate design INFO: [USF-XSim-61] Executing 'ELABORATE' step in 'C:/Arquitectura tp final 2017/TP final 2020/Tp Final 2020/Tp Final 2020.sim/sim_1/behav/xsim' 
// TclEventType: LAUNCH_SIM
// Tcl Message: "xelab -wto b027e68b51c64f6ea77cc47a892600d0 --incr --debug typical --relax --mt 2 -L xil_defaultlib -L unisims_ver -L unimacro_ver -L secureip --snapshot tb_instruction_fetch_behav xil_defaultlib.tb_instruction_fetch xil_defaultlib.glbl -log elaborate.log" 
// Tcl Message: INFO: [USF-XSim-69] 'elaborate' step finished in '2' seconds INFO: [USF-XSim-99] Step results log file:'C:/Arquitectura tp final 2017/TP final 2020/Tp Final 2020/Tp Final 2020.sim/sim_1/behav/xsim/elaborate.log' 
// Tcl Message: ERROR: [USF-XSim-62] 'elaborate' step failed with error(s). Please check the Tcl console output or 'C:/Arquitectura tp final 2017/TP final 2020/Tp Final 2020/Tp Final 2020.sim/sim_1/behav/xsim/elaborate.log' file for more information. ERROR: [Vivado 12-4473] Detected error while running simulation. Please correct the issue and retry this operation. 
// Tcl Message: launch_simulation: Time (s): cpu = 00:00:01 ; elapsed = 00:00:07 . Memory (MB): peak = 1143.813 ; gain = 0.000 
// Tcl Message: ERROR: [Common 17-39] 'launch_simulation' failed due to earlier errors. 
// CommandFailedException: ERROR: [Common 17-69] Command failed: ERROR: [Common 17-39] 'launch_simulation' failed due to earlier errors.  
// HOptionPane Error: 'ERROR: [Common 17-39] 'launch_simulation' failed due to earlier errors.  (Run Simulation)'
// 'd' command handler elapsed time: 11 seconds
selectButton("OptionPane.button", "OK"); // JButton (A, G)
// a (cr): Critical Messages: addNotify
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Tcl Message: update_compile_order -fileset sources_1 
selectButton(PAResourceAtoD.CmdMsgDialog_OPEN_MESSAGES_VIEW, "Open Messages View"); // a (a)
// Run Command: PAResourceCommand.PACommandNames_MESSAGE_WINDOW
dismissDialog("Critical Messages"); // a (cr)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Simulation, sim_1, [VRFC 10-3180] cannot find port 'out_pc_jump' on this module [C:/Arquitectura tp final 2017/TP final 2020/Tp Final 2020/Tp Final 2020.srcs/sim_1/imports/test_bench/tb_instruction_fetch.v:44]. ]", 12, false); // ah (O, cr)
messagesViewCrossProbe(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "src;-;C:\Arquitectura tp final 2017\TP final 2020\Tp Final 2020\Tp Final 2020.srcs\sim_1\imports\test_bench\tb_instruction_fetch.v;-;;-;16;-;line;-;44;-;;-;16;-;"); // ah (O, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("tb_instruction_fetch.v", 277, 173); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 93, 185); // ch (w, cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("tb_instruction_fetch.v", 177, 65); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 177, 65, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_instruction_fetch.v", 136, 197); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 136, 197, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_instruction_fetch.v", 147, 180); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 147, 180); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 122, 181); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 122, 180, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_instruction_fetch.v", 158, 197); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 158, 197, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_instruction_fetch.v", 106, 213); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 106, 213, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_instruction_fetch.v", 131, 142); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 131, 142, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_instruction_fetch.v", 117, 115); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 117, 115, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_instruction_fetch.v", 125, 131); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 125, 131, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_instruction_fetch.v", 136, 147); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 136, 147, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("tb_instruction_fetch.v", 100, 147); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 141, 142); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 141, 155); // ch (w, cr)
selectCodeEditor("tb_instruction_fetch.v", 146, 136); // ch (w, cr)
// Elapsed time: 13 seconds
selectCodeEditor("tb_instruction_fetch.v", 222, 93); // ch (w, cr)
selectButton(RDIResourceCommand.RDICommands_SAVE_FILE, (String) null); // E (f, cr)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
selectCodeEditor("tb_instruction_fetch.v", 228, 96); // ch (w, cr)
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Simulation, Run Simulation]", 10, false); // u (O, cr)
selectMenuItem(PAResourceCommand.PACommandNames_SIMULATION_RUN_BEHAVIORAL, "Run Behavioral Simulation"); // ai (ao, cr)
// Run Command: PAResourceCommand.PACommandNames_SIMULATION_RUN_BEHAVIORAL
// e (cr):  Run Simulation : addNotify
// TclEventType: LAUNCH_SIM
// TclEventType: FILE_SET_OPTIONS_CHANGE
// Tcl Message: launch_simulation 
// Tcl Message: Command: launch_simulation  
// Tcl Message: INFO: [Vivado 12-5682] Launching behavioral simulation in 'C:/Arquitectura tp final 2017/TP final 2020/Tp Final 2020/Tp Final 2020.sim/sim_1/behav/xsim' INFO: [SIM-utils-51] Simulation object is 'sim_1' INFO: [SIM-utils-54] Inspecting design source files for 'tb_instruction_fetch' in fileset 'sim_1'... INFO: [USF-XSim-97] Finding global include files... INFO: [USF-XSim-98] Fetching design files from 'sim_1'... INFO: [USF-XSim-2] XSim::Compile design INFO: [USF-XSim-61] Executing 'COMPILE and ANALYZE' step in 'C:/Arquitectura tp final 2017/TP final 2020/Tp Final 2020/Tp Final 2020.sim/sim_1/behav/xsim' 
// TclEventType: LAUNCH_SIM_LOG
// Tcl Message: INFO: [USF-XSim-69] 'compile' step finished in '1' seconds INFO: [USF-XSim-3] XSim::Elaborate design INFO: [USF-XSim-61] Executing 'ELABORATE' step in 'C:/Arquitectura tp final 2017/TP final 2020/Tp Final 2020/Tp Final 2020.sim/sim_1/behav/xsim' 
// Tcl Message: "xelab -wto b027e68b51c64f6ea77cc47a892600d0 --incr --debug typical --relax --mt 2 -L xil_defaultlib -L unisims_ver -L unimacro_ver -L secureip --snapshot tb_instruction_fetch_behav xil_defaultlib.tb_instruction_fetch xil_defaultlib.glbl -log elaborate.log" 
// TclEventType: LAUNCH_SIM
// TclEventType: LOAD_FEATURE
// Tcl Message: INFO: [USF-XSim-69] 'elaborate' step finished in '4' seconds INFO: [USF-XSim-4] XSim::Simulate design INFO: [USF-XSim-61] Executing 'SIMULATE' step in 'C:/Arquitectura tp final 2017/TP final 2020/Tp Final 2020/Tp Final 2020.sim/sim_1/behav/xsim' INFO: [USF-XSim-98] *** Running xsim 
// Tcl Message:    with args "tb_instruction_fetch_behav -key {Behavioral:sim_1:Functional:tb_instruction_fetch} -tclbatch {tb_instruction_fetch.tcl} -log {simulate.log}" 
// Tcl Message: INFO: [USF-XSim-8] Loading simulator feature 
// Tcl Message: Vivado Simulator 2019.2 
// TclEventType: SIMULATION_CREATE_SIMULATION_OBJECT
// TclEventType: SIMULATION_UPDATE_SIMULATION_STATE
// TclEventType: SIMULATION_UPDATE_SCOPE_TREE
// TclEventType: SIMULATION_UPDATE_STACKS
// TclEventType: SIMULATION_UPDATE_OBJECT_TREE
// TclEventType: SIMULATION_UPDATE_PROTOCOL_INSTANCE_TREE
// WARNING: HEventQueue.dispatchEvent() is taking  2731 ms.
// Tcl Message: Time resolution is 1 ps 
// TclEventType: SIMULATION_UPDATE_SCOPE_TREE
// TclEventType: SIMULATION_UPDATE_STACKS
// TclEventType: SIMULATION_UPDATE_OBJECT_TREE
// TclEventType: SIMULATION_UPDATE_PROTOCOL_INSTANCE_TREE
// TclEventType: SIMULATION_UPDATE_SCOPE_TREE
// TclEventType: SIMULATION_UPDATE_STACKS
// TclEventType: SIMULATION_UPDATE_OBJECT_TREE
// TclEventType: SIMULATION_UPDATE_PROTOCOL_INSTANCE_TREE
closeView(PAResourceOtoP.PAViews_PROJECT_SUMMARY, "Project Summary"); // v
// TclEventType: WAVEFORM_UPDATE_TITLE
// TclEventType: WAVEFORM_OPEN_WCFG
// TclEventType: SIMULATION_UPDATE_SCOPE_TREE
// TclEventType: SIMULATION_UPDATE_STACKS
// TclEventType: SIMULATION_UPDATE_OBJECT_TREE
// TclEventType: SIMULATION_UPDATE_PROTOCOL_INSTANCE_TREE
// TclEventType: WAVEFORM_OPEN_WCFG
// TclEventType: WAVEFORM_DELAYED_MODEL_EVENT
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_UPDATE_COMMANDS
// Waveform: addNotify
// TclEventType: WAVEFORM_MODEL_EVENT
// Tcl Message: source tb_instruction_fetch.tcl 
// Tcl Message: # set curr_wave [current_wave_config] # if { [string length $curr_wave] == 0 } { #   if { [llength [get_objects]] > 0} { #     add_wave / #     set_property needs_save false [current_wave_config] #   } else { #      send_msg_id Add_Wave-1 WARNING "No top level signals found. Simulator will start without a wave window. If you want to open a wave window go to 'File->New Waveform Configuration' or type 'create_wave_config' in the TCL console." #   } # } 
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_UPDATE_COMMANDS
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_UPDATE_TITLE
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_UPDATE_TITLE
// TclEventType: WAVEFORM_DELAYED_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_TITLE
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 90 MB. Current time: 6/26/20, 8:40:48 PM ART
// TclEventType: SIMULATION_UPDATE_SIMULATION_STATE
// TclEventType: SIMULATION_CLEAR_CURRENT_LINE
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_UPDATE_COMMANDS
// TclEventType: SIMULATION_UPDATE_LATEST_TIME
// TclEventType: SIMULATION_OBJECT_TREE_RESTORED
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: SIMULATION_UPDATE_LATEST_TIME
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: SIMULATION_CURRENT_SCOPE_CHANGED
// TclEventType: SIMULATION_CURRENT_STACK_CHANGED
// TclEventType: SIMULATION_UPDATE_STACK_FRAMES
// TclEventType: SIMULATION_CURRENT_STACK_FRAME_CHANGED
// TclEventType: SIMULATION_UPDATE_LOCALS
// TclEventType: SIMULATION_UPDATE_SCOPE_TREE
// TclEventType: SIMULATION_UPDATE_STACKS
// TclEventType: SIMULATION_UPDATE_OBJECT_TREE
// TclEventType: SIMULATION_UPDATE_SIMULATION_STATE
// Tcl Message: # run 1000ns 
// Tcl Message: xsim: Time (s): cpu = 00:00:09 ; elapsed = 00:00:06 . Memory (MB): peak = 1279.082 ; gain = 52.063 
// Tcl Message: INFO: [USF-XSim-96] XSim completed. Design snapshot 'tb_instruction_fetch_behav' loaded. INFO: [USF-XSim-97] XSim simulation ran for 1000ns 
// Tcl Message: launch_simulation: Time (s): cpu = 00:00:10 ; elapsed = 00:00:12 . Memory (MB): peak = 1279.082 ; gain = 52.063 
// 'd' command handler elapsed time: 11 seconds
dismissDialog("Run Simulation"); // e (cr)
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
// TclEventType: WAVEFORM_MODEL_EVENT
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 92 MB. Current time: 6/26/20, 8:40:51 PM ART
selectButton(RDIResource.GraphicalView_ZOOM_FIT, "Waveform Viewer_zoom_fit"); // E (f, cr)
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
selectTree(RDIResource.WaveformNameTree_WAVEFORM_NAME_TREE, "[true, out_instruction[31:0]]", 6, true); // a (r, cr) - Node
// TclEventType: WAVEFORM_UPDATE_COMMANDS
// Waveform: addNotify
// HMemoryUtils.trashcanNow. Engine heap size: 879 MB. GUI used memory: 91 MB. Current time: 6/26/20, 8:41:00 PM ART
// TclEventType: SIMULATION_UPDATE_SCOPE_TREE
// TclEventType: SIMULATION_UPDATE_STACKS
// TclEventType: SIMULATION_UPDATE_OBJECT_TREE
// TclEventType: SIMULATION_UPDATE_PROTOCOL_INSTANCE_TREE
// TclEventType: SIMULATION_UPDATE_SCOPE_TREE
// TclEventType: SIMULATION_UPDATE_STACKS
// TclEventType: SIMULATION_UPDATE_OBJECT_TREE
// TclEventType: SIMULATION_UPDATE_PROTOCOL_INSTANCE_TREE
// TclEventType: WAVEFORM_UPDATE_WAVEFORM
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
// Elapsed time: 22 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v)]", 15, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v)]", 15, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
selectButton(PAResourceTtoZ.TaskBanner_CLOSE, (String) null); // k (aA, cr)
closeTask("Simulation", "Behavioral Simulation - Functional - sim_1 - tb_instruction_fetch", "DesignTask.SIMULATION");
// A (cr): Confirm Close: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (A)
// bB (cr):  Close : addNotify
// TclEventType: WAVEFORM_CLOSE_WCFG
dismissDialog("Confirm Close"); // A (cr)
// TclEventType: SIMULATION_CLOSE_SIMULATION
// WARNING: HEventQueue.dispatchEvent() is taking  4857 ms.
// Tcl Message: close_sim 
// Tcl Message: INFO: [Simtcl 6-16] Simulation closed 
// Tcl Message: close_sim: Time (s): cpu = 00:00:06 ; elapsed = 00:00:08 . Memory (MB): peak = 2035.559 ; gain = 756.477 
dismissDialog("Close"); // bB (cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v)]", 4, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v)]", 4, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 5, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 5, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v), u_ram_instrucciones : ram_instrucciones (ram_instrucciones.v)]", 8, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v), u_ram_instrucciones : ram_instrucciones (ram_instrucciones.v)]", 8, false, false, false, false, false, true); // B (F, cr) - Double Click
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("ram_instrucciones.v", 87, 244); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 87, 244, false, false, false, false, true); // ch (w, cr) - Double Click
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 6/26/20, 8:41:49 PM ART
selectCodeEditor("ram_instrucciones.v", 200, 112); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 518, 115); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 152, 249); // ch (w, cr)
// Elapsed time: 10 seconds
selectCodeEditor("ram_instrucciones.v", 103, 149); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 103, 149, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ram_instrucciones.v", 221, 200); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 221, 200, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ram_instrucciones.v", 285, 348); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 285, 348, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ram_instrucciones.v", 407, 349); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 411, 350); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 149, 349); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 167, 348); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 167, 348, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ram_instrucciones.v", 179, 352); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 179, 352, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ram_instrucciones.v", 255, 348); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 255, 348, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ram_instrucciones.v", 356, 353); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 356, 353, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ram_instrucciones.v", 204, 345); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 204, 345, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ram_instrucciones.v", 267, 350); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 267, 350); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 267, 350); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 267, 350, false, false, false, false, true); // ch (w, cr) - Double Click
selectCodeEditor("ram_instrucciones.v", 206, 346); // ch (w, cr)
selectCodeEditor("ram_instrucciones.v", 206, 346, false, false, false, false, true); // ch (w, cr) - Double Click
// [Engine Memory]: 913 MB (+9257kb) [338:28:55]
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 6/26/20, 9:11:49 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 90 MB. Current time: 6/26/20, 9:41:49 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 91 MB. Current time: 6/26/20, 10:11:50 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 90 MB. Current time: 6/26/20, 10:41:50 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 90 MB. Current time: 6/26/20, 11:11:50 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 90 MB. Current time: 6/26/20, 11:41:51 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 91 MB. Current time: 6/27/20, 12:11:51 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 91 MB. Current time: 6/27/20, 12:41:52 AM ART
// WARNING: HTimer (StateMonitor Timer) is taking 30671966ms to process. Increasing delay to 7000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  30671966 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 91 MB. Current time: 6/27/20, 9:16:31 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 90 MB. Current time: 6/27/20, 9:46:34 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 90 MB. Current time: 6/27/20, 10:16:34 AM ART
// Elapsed time: 49387 seconds
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, top_modular (top_modular.v), u_top_mips : top_mips (top_mips.v), u_instruction_fetch : instruction_fetch (instruction_fetch.v)]", 5); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_decode (tb_decode.v)]", 23, true); // B (F, cr) - Node
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_mem_instrucciones (tb_mem_instrucciones.v)]", 26); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_hazard (tb_hazard.v)]", 25, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_decode (tb_decode.v)]", 23, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_forwarding_unit (tb_forwarding_unit.v)]", 24, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_hazard (tb_hazard.v)]", 25, true); // B (F, cr) - Node
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_decode (tb_decode.v)]", 23); // B (F, cr)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_decode (tb_decode.v), u_decode : decode (decode.v)]", 24); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_decode (tb_decode.v), u_decode : decode (decode.v), u_hazard : hazard_detection_unit (hazard_detection_unit.v)]", 27, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_hazard (tb_hazard.v)]", 29, true); // B (F, cr) - Node
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_hazard (tb_hazard.v)]", 29); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_hazard (tb_hazard.v), u_hazard_detection_unit : hazard_detection_unit (hazard_detection_unit.v)]", 30, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_hazard (tb_hazard.v)]", 29, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_hazard (tb_hazard.v)]", 29, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
// Elapsed time: 96 seconds
selectCodeEditor("tb_hazard.v", 2, 62); // ch (w, cr)
typeControlKey((HResource) null, "tb_hazard.v", 'c'); // ch (w, cr)
// Elapsed time: 992 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_decode (tb_decode.v)]", 23, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_decode (tb_decode.v)]", 23, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
selectCodeEditor("tb_decode.v", 1, 144); // ch (w, cr)
typeControlKey((HResource) null, "tb_decode.v", 'c'); // ch (w, cr)
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 91 MB. Current time: 6/27/20, 10:46:34 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 6/27/20, 11:16:35 AM ART
// Elapsed time: 2669 seconds
selectCodeEditor("tb_decode.v", 257, 125); // ch (w, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("tb_decode.v", 216, 163); // ch (w, cr)
selectCodeEditor("tb_decode.v", 259, 164); // ch (w, cr)
selectCodeEditor("tb_decode.v", 295, 163); // ch (w, cr)
selectCodeEditor("tb_decode.v", 330, 164); // ch (w, cr)
// Elapsed time: 10 seconds
selectCodeEditor("tb_decode.v", 492, 159); // ch (w, cr)
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 91 MB. Current time: 6/27/20, 11:46:35 AM ART
// Elapsed time: 1142 seconds
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_hazard (tb_hazard.v)]", 25, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_forwarding_unit (tb_forwarding_unit.v)]", 24, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_hazard (tb_hazard.v)]", 25, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_forwarding_unit (tb_forwarding_unit.v)]", 24, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_hazard (tb_hazard.v)]", 25, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_top (tb_top.v)]", 21, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_alu (tb_alu.v)]", 22, true); // B (F, cr) - Node
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_alu (tb_alu.v)]", 22); // B (F, cr)
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_alu (tb_alu.v)]", 22); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_decode (tb_decode.v)]", 23, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_top (tb_top.v)]", 21, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_alu (tb_alu.v)]", 22, true); // B (F, cr) - Node
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_alu (tb_alu.v)]", 22); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_alu (tb_alu.v), u_alu : alu (alu.v)]", 23, false); // B (F, cr)
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_alu (tb_alu.v)]", 22); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_alu (tb_alu.v)]", 22, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_alu (tb_alu.v)]", 22, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
// PAPropertyPanels.initPanels (tb_forwarding_unit.v) elapsed time: 0.2s
// Elapsed time: 12 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_forwarding_unit (tb_forwarding_unit.v)]", 25, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_forwarding_unit (tb_forwarding_unit.v)]", 25, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
// PAPropertyPanels.initPanels (tb_alu.v) elapsed time: 0.2s
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_alu (tb_alu.v)]", 22, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_mem_instrucciones (tb_mem_instrucciones.v)]", 28, true); // B (F, cr) - Node
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 6/27/20, 12:16:36 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 6/27/20, 12:46:36 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 6/27/20, 1:16:36 PM ART
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 1031 ms to process. Increasing delay to 2000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 1030 ms to process. Increasing delay to 2000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 1029 ms to process. Increasing delay to 2000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 624 ms to process. Increasing delay to 2000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 1028 ms to process. Increasing delay to 2000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 622 ms to process. Increasing delay to 2000 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 6/27/20, 1:46:37 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  10801761 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1601 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 6/27/20, 4:53:27 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  9359994 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 6/27/20, 7:29:36 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1925 ms.
// Elapsed time: 28375 seconds
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_alu (tb_alu.v)]", 22); // B (F, cr)
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_forwarding_unit (tb_forwarding_unit.v)]", 24); // B (F, cr)
// Elapsed time: 67 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_decode (tb_decode.v)]", 23, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_alu (tb_alu.v)]", 22, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_forwarding_unit (tb_forwarding_unit.v)]", 24, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_alu (tb_alu.v)]", 22, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_forwarding_unit (tb_forwarding_unit.v)]", 24, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_alu (tb_alu.v)]", 22, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_forwarding_unit (tb_forwarding_unit.v)]", 24, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_instruction_fetch (tb_instruction_fetch.v)]", 19, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_doble_uart (tb_doble_uart.v)]", 20, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_top_mips (tb_top_mips.v)]", 27, true); // B (F, cr) - Node
// Elapsed time: 26 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_mem_instrucciones (tb_mem_instrucciones.v)]", 26, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_top_mips (tb_top_mips.v)]", 27, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_alu (tb_alu.v)]", 22, true); // B (F, cr) - Node
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_alu (tb_alu.v)]", 22); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_decode (tb_decode.v)]", 24, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_alu (tb_alu.v), u_alu : alu (alu.v)]", 23, false); // B (F, cr)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_forwarding_unit (tb_forwarding_unit.v)]", 25); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_forwarding_unit (tb_forwarding_unit.v), u_forwarding_unit : forwarding_unit (forwarding_unit.v)]", 26, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_forwarding_unit (tb_forwarding_unit.v)]", 25, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_alu (tb_alu.v)]", 22, true); // B (F, cr) - Node
// Elapsed time: 48 seconds
selectCodeEditor("tb_forwarding_unit.v", 175, 87); // ch (w, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_alu (tb_alu.v)]", 22, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_alu (tb_alu.v)]", 22, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
selectCodeEditor("tb_alu.v", 2, 129); // ch (w, cr)
typeControlKey((HResource) null, "tb_alu.v", 'c'); // ch (w, cr)
// WARNING: HEventQueue.dispatchEvent() is taking  1509 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 6/27/20, 7:59:36 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 6/27/20, 8:29:35 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 6/27/20, 8:59:36 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  3461779 ms.
// WARNING: HTimer (HMemoryUtils Timer) is taking 1178ms to process. Increasing delay to 6000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1178 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 6/27/20, 10:05:05 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  82413 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  10798918 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 6/28/20, 1:26:36 AM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1046 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  31286292 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 6/28/20, 10:08:07 AM ART
// WARNING: HEventQueue.dispatchEvent() is taking  2786 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 89 MB. Current time: 6/28/20, 10:38:05 AM ART
// Elapsed time: 54969 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_forwarding_unit (tb_forwarding_unit.v), u_forwarding_unit : forwarding_unit (forwarding_unit.v)]", 25, false); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_forwarding_unit (tb_forwarding_unit.v)]", 24, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_forwarding_unit (tb_forwarding_unit.v)]", 24, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
selectCodeEditor("tb_forwarding_unit.v", 2, 132); // ch (w, cr)
typeControlKey((HResource) null, "tb_forwarding_unit.v", 'c'); // ch (w, cr)
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 6/28/20, 11:08:05 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 6/28/20, 11:38:06 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 6/28/20, 12:08:06 PM ART
// Elapsed time: 4577 seconds
selectCodeEditor("tb_forwarding_unit.v", 141, 184); // ch (w, cr)
// WARNING: HEventQueue.dispatchEvent() is taking  10800429 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2235 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 6/28/20, 3:19:20 PM ART
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 10802788 ms. Increasing delay to 32408364 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6784054 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1431 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 6/28/20, 5:12:33 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1648 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 1782 ms to process. Increasing delay to 3000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 1907 ms to process. Increasing delay to 3000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 1985 ms to process. Increasing delay to 3000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 1906 ms to process. Increasing delay to 3000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 1984 ms to process. Increasing delay to 3000 ms.
// WARNING: HSwingWorker (Monitor File Timestamp Swing Worker) is taking 1907 ms to process. Increasing delay to 3000 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 6/28/20, 5:42:28 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 6/28/20, 6:12:28 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 6/28/20, 6:42:29 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 6/28/20, 7:12:29 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 6/28/20, 7:42:29 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 6/28/20, 8:12:30 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  3614243 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2770 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 6/28/20, 9:28:48 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1252 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 88 MB. Current time: 6/28/20, 9:58:45 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 89 MB. Current time: 6/28/20, 10:28:44 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 89 MB. Current time: 6/28/20, 10:58:44 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  10800066 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2027 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 89 MB. Current time: 6/29/20, 2:01:17 AM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1127 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  63780291 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1367 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2997 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 89 MB. Current time: 6/29/20, 7:44:29 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  4450 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 88 MB. Current time: 6/29/20, 8:14:28 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 88 MB. Current time: 6/29/20, 8:44:24 PM ART
// Elapsed time: 116917 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_top_mips (tb_top_mips.v)]", 27, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_top_mips (tb_top_mips.v)]", 27, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_top_mips (tb_top_mips.v)]", 27, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
// Elapsed time: 10 seconds
selectCodeEditor("tb_top_mips.v", 1, 79); // ch (w, cr)
typeControlKey((HResource) null, "tb_top_mips.v", 'c'); // ch (w, cr)
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 6/29/20, 9:14:25 PM ART
// Elapsed time: 2079 seconds
selectCodeEditor("tb_top_mips.v", 244, 112); // ch (w, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_top_mips (tb_top_mips.v)]", 27, true); // B (F, cr) - Node
// Elapsed time: 13 seconds
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_top_mips (tb_top_mips.v)]", 27); // B (F, cr)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_doble_uart (tb_doble_uart.v)]", 20, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_top (tb_top.v)]", 21, true); // B (F, cr) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources, sim_1, tb_top (tb_top.v)]", 21, true, false, false, false, false, true); // B (F, cr) - Double Click - Node
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("tb_top.v", 43, 235); // ch (w, cr)
selectCodeEditor("tb_top.v", 354, 205); // ch (w, cr)
selectCodeEditor("tb_top.v", 102, 165); // ch (w, cr)
selectCodeEditor("tb_top.v", 84, 201); // ch (w, cr)
// Elapsed time: 15 seconds
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("tb_top.v", 166, 130); // ch (w, cr)
maximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("tb_top.v", 162, 174); // ch (w, cr)
unmaximizeView(PAResourceOtoP.PAViews_BASE_WORKSPACE, "BaseWorkspace"); // P (aI, cr)
selectCodeEditor("tb_top.v", 214, 136); // ch (w, cr)
selectCodeEditor("tb_top.v", 180, 128); // ch (w, cr)
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 6/29/20, 9:44:30 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  5273 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 6/29/20, 10:14:25 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  554267 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  10799911 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1304 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 94 MB. Current time: 6/30/20, 1:30:59 AM ART
// WARNING: HEventQueue.dispatchEvent() is taking  20245209 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 6/30/20, 7:08:32 AM ART
// WARNING: HEventQueue.dispatchEvent() is taking  1915 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1023 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  6756787 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 6/30/20, 9:09:32 AM ART
// WARNING: HEventQueue.dispatchEvent() is taking  11526 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  20537 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 6/30/20, 9:39:41 AM ART
// WARNING: HEventQueue.dispatchEvent() is taking  13966 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 6/30/20, 10:09:37 AM ART
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 337 ms. Decreasing delay to 2337 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  13359 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 6/30/20, 10:39:39 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 6/30/20, 11:09:28 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 6/30/20, 11:39:28 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 6/30/20, 12:09:29 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 6/30/20, 12:39:29 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 6/30/20, 1:09:29 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 6/30/20, 1:39:30 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 6/30/20, 2:09:30 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 6/30/20, 2:39:30 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 6/30/20, 3:09:31 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 6/30/20, 3:39:31 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 6/30/20, 4:09:31 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 6/30/20, 4:39:31 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 6/30/20, 5:09:32 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 6/30/20, 5:39:32 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 6/30/20, 6:09:33 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 6/30/20, 6:39:33 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 6/30/20, 7:09:34 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 94 MB. Current time: 6/30/20, 7:39:34 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 6/30/20, 8:09:34 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 6/30/20, 8:39:35 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 6/30/20, 9:09:35 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  10801203 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2427 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 7/1/20, 12:33:55 AM ART
// WARNING: HEventQueue.dispatchEvent() is taking  32125626 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1408 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1334 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 7/1/20, 9:29:30 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 94 MB. Current time: 7/1/20, 9:59:28 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 7/1/20, 10:29:28 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 7/1/20, 10:59:28 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 7/1/20, 11:29:28 AM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 7/1/20, 11:59:29 AM ART
// WARNING: HEventQueue.dispatchEvent() is taking  55948 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 7/1/20, 12:29:33 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 7/1/20, 12:59:33 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 7/1/20, 1:29:34 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 7/1/20, 1:59:34 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 7/1/20, 2:29:35 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  4357 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 7/1/20, 2:59:44 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 7/1/20, 3:29:40 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 94 MB. Current time: 7/1/20, 3:59:41 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 94 MB. Current time: 7/1/20, 4:29:41 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 7/1/20, 4:59:41 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 7/1/20, 5:29:42 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 7/1/20, 5:59:42 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  2214 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 7/1/20, 6:29:44 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  8662 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 7/1/20, 6:59:51 PM ART
// WARNING: HEventQueue.dispatchEvent() is taking  7461 ms.
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 7/1/20, 7:29:53 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 93 MB. Current time: 7/1/20, 7:59:48 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 7/1/20, 8:29:48 PM ART
// HMemoryUtils.trashcanNow. Engine heap size: 913 MB. GUI used memory: 92 MB. Current time: 7/1/20, 8:59:48 PM ART
